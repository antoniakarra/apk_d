CREATE SCHEMA IF NOT EXISTS `apk` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `apk` ;
CREATE TABLE IF NOT EXISTS `apk`.`stoixeio` (
  `idStoixeio` INT UNSIGNED NOT NULL AUTO_INCREMENT, 
  `name` VARCHAR(200) NOT NULL,
  `year` YEAR NOT NULL,
  `description` VARCHAR(600) NOT NULL,
  `full_description` TEXT NOT NULL,
  `historical_data` TEXT NOT NULL,
  `bibliography` MEDIUMTEXT NOT NULL,
  `is_temporary` BOOLEAN NOT NULL DEFAULT TRUE,  
  PRIMARY KEY (`idStoixeio`),
  UNIQUE KEY `name` (`name`),
  INDEX `idx_year` (`year`), 
  INDEX `idx_year_name` (`year`, `name`),
  FULLTEXT INDEX `idx_description` (`description`), 
  CONSTRAINT `chk_name_not_empty` CHECK (TRIM(name) <> ''),
  CONSTRAINT `chk_description_not_empty` CHECK (TRIM(description) <> ''),
  CONSTRAINT `chk_full_description_not_empty` CHECK (TRIM(full_description) <> ''),
  CONSTRAINT `chk_historical_data_not_empty` CHECK (TRIM(historical_data) <> ''),
  CONSTRAINT `chk_bibliography_not_empty` CHECK (TRIM(bibliography) <> '')
) 
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE TABLE IF NOT EXISTS `apk`.`keywords` (
  `id_keyword` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `keyword` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id_keyword`),
  UNIQUE KEY `keyword` (`keyword`),
  CONSTRAINT `chk_keyword_not_empty` CHECK (TRIM(keyword) <> '')
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE TABLE IF NOT EXISTS `apk`.`stoixeio_keywords` (
  `stoixeio_idStoixeio` INT UNSIGNED NOT NULL,
  `keyword_id_keyword` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`stoixeio_idStoixeio`, `keyword_id_keyword`),
  INDEX `idx_stoixeio_idStoixeio` (`stoixeio_idStoixeio`),
  INDEX `idx_keyword_id_keyword` (`keyword_id_keyword`),
  CONSTRAINT `fk_stoixeio_keywords_stoixeio`
    FOREIGN KEY (`stoixeio_idStoixeio`)
    REFERENCES `apk`.`stoixeio` (`idStoixeio`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_stoixeio_keywords_keywords`
    FOREIGN KEY (`keyword_id_keyword`)
    REFERENCES `apk`.`keywords` (`id_keyword`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE TABLE IF NOT EXISTS `apk`.`other_names` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(200) NOT NULL,
  `stoixeio_idStoixeio` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique_name_per_stoixeio` (`name`, `stoixeio_idStoixeio`),
  INDEX `idx_other_name` (`name`),
  INDEX `idx_other_names_stoixeio_idStoixeio` (`stoixeio_idStoixeio`), 
  CONSTRAINT `chk_other_name_not_empty` CHECK (TRIM(name) <> ''),
  CONSTRAINT `fk_othernames_stoixeio`
    FOREIGN KEY (`stoixeio_idStoixeio`)
    REFERENCES `apk`.`stoixeio` (`idStoixeio`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE TABLE IF NOT EXISTS `apk`.`location` (
  `id_location` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `locationDescription` VARCHAR(600) NULL DEFAULT NULL,  
  `stoixeio_idStoixeio` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_location`),
  UNIQUE KEY `stoixeio_idStoixeio` (`stoixeio_idStoixeio`),
  FULLTEXT INDEX `idx_locationDescription` (`locationDescription`),
  CONSTRAINT `fk_location_stoixeio`
    FOREIGN KEY (`stoixeio_idStoixeio`)
    REFERENCES `apk`.`stoixeio` (`idStoixeio`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE TABLE `decentralized_administration` (
  `id` int UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` varchar(200) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `idx_name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

INSERT INTO `decentralized_administration` VALUES (1,'Αιγαίου'),(2,'Αττικής'),(3,'Ηπείρου - Δυτικής Μακεδονίας'),(4,'Θεσσαλίας - Στερεάς Ελλάδας'),(5,'Κρήτης'),(6,'Μακεδονίας - Θράκης'),(7,'Πελοποννήσου - Δυτικής Ελλάδας και Ιονίου');

CREATE TABLE `region` (
  `id` int UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` varchar(200) NOT NULL,
  `decentralized_administration_id` int UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `idx_region_name` (`name`),
  INDEX `idx_decentralized_admin_id` (`decentralized_administration_id`),
  CONSTRAINT `region_ibfk_1` FOREIGN KEY (`decentralized_administration_id`) 
      REFERENCES `decentralized_administration` (`id`) 
      ON DELETE CASCADE 
      ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

INSERT INTO `region` VALUES (1,'ΒΟΡΕΙΟΥ ΑΙΓΑΙΟΥ',1),(2,'ΝΟΤΙΟΥ ΑΙΓΑΙΟΥ',1),(3,'ΑΤΤΙΚΗΣ',2),(4,'ΔΥΤΙΚΗΣ ΜΑΚΕΔΟΝΙΑΣ',3),(5,'ΗΠΕΙΡΟΥ',3),(6,'ΘΕΣΣΑΛΙΑΣ',4),(7,'ΣΤΕΡΕΑΣ ΕΛΛΑΔΑΣ',4),(8,'ΚΡΗΤΗΣ',5),(9,'ΑΝ. ΜΑΚΕΔΟΝΙΑΣ & ΘΡΑΚΗΣ',6),(10,'ΚΕΝΤΡΙΚΗΣ ΜΑΚΕΔΟΝΙΑΣ',6),(11,'ΔΥΤΙΚΗΣ ΕΛΛΑΔΑΣ',7),(12,'ΙΟΝΙΩΝ ΝΗΣΩΝ',7),(13,'ΠΕΛΟΠΟΝΝΗΣΟΥ',7);

CREATE TABLE `regional_units` (
  `id` int UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` varchar(200) NOT NULL,
  `region_id` int UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `idx_regional_units_name` (`name`),
  INDEX `idx_region_id` (`region_id`),
  CONSTRAINT `regional_units_ibfk_1` FOREIGN KEY (`region_id`) 
      REFERENCES `region` (`id`) 
      ON DELETE CASCADE 
      ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

INSERT INTO `regional_units` VALUES (1,'ΙΚΑΡΙΑΣ',1),(2,'ΛΕΣΒΟΥ',1),(3,'ΛΗΜΝΟΥ',1),(4,'ΣΑΜΟΥ',1),(5,'ΧΙΟΥ',1),(6,'ΑΝΔΡΟΥ',2),(7,'ΘΗΡΑΣ',2),(8,'ΚΑΛΥΜΝΟΥ',2),(9,'ΚΑΡΠΑΘΟΥ',2),(10,'ΚΕΑΣ-ΚΥΘΝΟΥ',2),(11,'ΚΩ',2),(12,'ΜΗΛΟΥ',2),(13,'ΜΥΚΟΝΟΥ',2),(14,'ΝΑΞΟΥ',2),(15,'ΠΑΡΟΥ',2),(16,'ΡΟΔΟΥ',2),(17,'ΣΥΡΟΥ',2),(18,'ΤΗΝΟΥ',2),(19,'ΑΝΑΤΟΛΙΚΗΣ ΑΤΤΙΚΗΣ',3),(20,'ΒΟΡΕΙΟΥ ΤΟΜΕΑ ΑΘΗΝΩΝ',3),(21,'ΔΥΤΙΚΗΣ ΑΤΤΙΚΗΣ',3),(22,'ΔΥΤΙΚΟΥ ΤΟΜΕΑ ΑΘΗΝΩΝ',3),(23,'ΚΕΝΤΡΙΚΟΥ ΤΟΜΕΑ ΑΘΗΝΩΝ',3),(24,'ΝΗΣΩΝ',3),(25,'ΝΟΤΙΟΥ ΤΟΜΕΑ ΑΘΗΝΩΝ',3),(26,'ΠΕΙΡΑΙΩΣ',3),(27,'ΓΡΕΒΕΝΩΝ',4),(28,'ΚΑΣΤΟΡΙΑΣ',4),(29,'ΚΟΖΑΝΗΣ',4),(30,'ΦΛΩΡΙΝΑΣ',4),(31,'ΑΡΤΑΣ',5),(32,'ΘΕΣΠΡΩΤΙΑΣ',5),(33,'ΙΩΑΝΝΙΝΩΝ',5),(34,'ΠΡΕΒΕΖΑΣ',5),(35,'ΚΑΡΔΙΤΣΑΣ',6),(36,'ΛΑΡΙΣΑΣ',6),(37,'ΜΑΓΝΗΣΙΑΣ',6),(38,'ΣΠΟΡΑΔΩΝ',6),(39,'ΤΡΙΚΑΛΩΝ',6),(40,'ΒΟΙΩΤΙΑΣ',7),(41,'ΕΥΒΟΙΑΣ',7),(42,'ΕΥΡΥΤΑΝΙΑΣ',7),(43,'ΦΘΙΩΤΙΔΑΣ',7),(44,'ΦΩΚΙΔΑΣ',7),(45,'ΗΡΑΚΛΕΙΟΥ',8),(46,'ΛΑΣΙΘΙΟΥ',8),(47,'ΡΕΘΥΜΝΟΥ',8),(48,'ΧΑΝΙΩΝ',8),(49,'ΔΡΑΜΑΣ',9),(50,'ΕΒΡΟΥ',9),(51,'ΘΑΣΟΥ',9),(52,'ΚΑΒΑΛΑΣ',9),(53,'ΞΑΝΘΗΣ',9),(54,'ΡΟΔΟΠΗΣ',9),(55,'ΗΜΑΘΙΑΣ',10),(56,'ΘΕΣΣΑΛΟΝΙΚΗΣ',10),(57,'ΚΙΛΚΙΣ',10),(58,'ΠΕΛΛΑΣ',10),(59,'ΠΙΕΡΙΑΣ',10),(60,'ΣΕΡΡΩΝ',10),(61,'ΧΑΛΚΙΔΙΚΗΣ',10),(62,'ΑΙΤΩΛΟΑΚΑΡΝΑΝΙΑΣ',11),(63,'ΑΧΑΪΑΣ',11),(64,'ΗΛΕΙΑΣ',11),(65,'ΖΑΚΥΝΘΟΥ',12),(66,'ΙΘΑΚΗΣ',12),(67,'ΚΕΡΚΥΡΑΣ',12),(68,'ΚΕΦΑΛΛΗΝΙΑΣ',12),(69,'ΛΕΥΚΑΔΑΣ',12),(70,'ΑΡΓΟΛΙΔΑΣ',13),(71,'ΑΡΚΑΔΙΑΣ',13),(72,'ΚΟΡΙΝΘΙΑΣ',13),(73,'ΛΑΚΩΝΙΑΣ',13),(74,'ΜΕΣΣΗΝΙΑΣ',13);

CREATE TABLE `municipalities` (
  `id` int UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` varchar(200) NOT NULL,
  `regional_units_id` int UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `idx_municipalities_name` (`name`),
  INDEX `idx_regional_units_id` (`regional_units_id`),
  CONSTRAINT `municipalities_ibfk_1` FOREIGN KEY (`regional_units_id`) 
      REFERENCES `regional_units` (`id`) 
      ON DELETE CASCADE 
      ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

INSERT INTO `municipalities` VALUES (1,'ΙΚΑΡΙΑΣ',1),(2,'ΦΟΥΡΝΩΝ ΚΟΡΣΕΩΝ',1),(3,'ΛΕΣΒΟΥ',2),(4,'ΑΓΙΟΥ ΕΥΣΤΡΑΤΙΟΥ',3),(5,'ΛΗΜΝΟΥ',3),(6,'ΣΑΜΟΥ',4),(7,'ΟΙΝΟΥΣΣΩΝ',5),(8,'ΧΙΟΥ',5),(9,'ΨΑΡΩΝ',5),(10,'ΑΝΔΡΟΥ',6),(11,'ΑΝΑΦΗΣ',7),(12,'ΘΗΡΑΣ',7),(13,'ΙΗΤΩΝ',7),(14,'ΣΙΚΙΝΟΥ',7),(15,'ΦΟΛΕΓΑΝΔΡΟΥ',7),(16,'ΑΓΑΘΟΝΗΣΙΟΥ',8),(17,'ΑΣΤΥΠΑΛΑΙΑΣ',8),(18,'ΚΑΛΥΜΝΙΩΝ',8),(19,'ΛΕΙΨΩΝ',8),(20,'ΛΕΡΟΥ',8),(21,'ΠΑΤΜΟΥ',8),(22,'ΚΑΡΠΑΘΟΥ',9),(23,'ΚΑΣΟΥ',9),(24,'ΚΕΑΣ',10),(25,'ΚΥΘΝΟΥ',10),(26,'ΚΩ',11),(27,'ΝΙΣΥΡΟΥ',11),(28,'ΚΙΜΩΛΟΥ',12),(29,'ΜΗΛΟΥ',12),(30,'ΣΕΡΙΦΟΥ',12),(31,'ΣΙΦΝΟΥ',12),(32,'ΜΥΚΟΝΟΥ',13),(33,'ΑΜΟΡΓΟΥ',14),(34,'ΝΑΞΟΥ & ΜΙΚΡΩΝ ΚΥΚΛΑΔΩΝ',14),(35,'ΑΝΤΙΠΑΡΟΥ',15),(36,'ΠΑΡΟΥ',15),(37,'ΜΕΓΙΣΤΗΣ',16),(38,'ΡΟΔΟΥ',16),(39,'ΣΥΜΗΣ',16),(40,'ΤΗΛΟΥ',16),(41,'ΧΑΛΚΗΣ',16),(42,'ΣΥΡΟΥ-ΕΡΜΟΥΠΟΛΗΣ',17),(43,'ΤΗΝΟΥ',18),(44,'ΑΧΑΡΝΩΝ',19),(45,'ΒΑΡΗΣ - ΒΟΥΛΑΣ - ΒΟΥΛΙΑΓΜΕΝΗΣ',19),(46,'ΔΙΟΝΥΣΟΥ',19),(47,'ΚΡΩΠΙΑΣ',19),(48,'ΛΑΥΡΕΩΤΙΚΗΣ',19),(49,'ΜΑΡΑΘΩΝΟΣ',19),(50,'ΜΑΡΚΟΠΟΥΛΟΥ ΜΕΣΟΓΑΙΑΣ',19),(51,'ΠΑΙΑΝΙΑΣ',19),(52,'ΠΑΛΛΗΝΗΣ',19),(53,'ΡΑΦΗΝΑΣ - ΠΙΚΕΡΜΙΟΥ',19),(54,'ΣΑΡΩΝΙΚΟΥ',19),(55,'ΣΠΑΤΩΝ - ΑΡΤΕΜΙΔΟΣ',19),(56,'ΩΡΩΠΟΥ',19),(57,'ΑΓΙΑΣ ΠΑΡΑΣΚΕΥΗΣ',20),(58,'ΑΜΑΡΟΥΣΙΟΥ',20),(59,'ΒΡΙΛΗΣΣΙΩΝ',20),(60,'ΗΡΑΚΛΕΙΟΥ',20),(61,'ΚΗΦΙΣΙΑΣ',20),(62,'ΛΥΚΟΒΡΥΣΗΣ - ΠΕΥΚΗΣ',20),(63,'ΜΕΤΑΜΟΡΦΩΣΕΩΣ',20),(64,'ΝΕΑΣ ΙΩΝΙΑΣ',20),(65,'ΠΑΠΑΓΟΥ - ΧΟΛΑΡΓΟΥ',20),(66,'ΠΕΝΤΕΛΗΣ',20),(67,'ΦΙΛΟΘΕΗΣ - ΨΥΧΙΚΟΥ',20),(68,'ΧΑΛΑΝΔΡΙΟΥ',20),(69,'ΑΣΠΡΟΠΥΡΓΟΥ',21),(70,'ΕΛΕΥΣΙΝΑΣ',21),(71,'ΜΑΝΔΡΑΣ - ΕΙΔΥΛΛΙΑΣ',21),(72,'ΜΕΓΑΡΕΩΝ',21),(73,'ΦΥΛΗΣ',21),(74,'ΑΓΙΑΣ ΒΑΡΒΑΡΑΣ',22),(75,'ΑΓΙΩΝ ΑΝΑΡΓΥΡΩΝ - ΚΑΜΑΤΕΡΟΥ',22),(76,'ΑΙΓΑΛΕΩ',22),(77,'ΙΛΙΟΥ (ΝΕΩΝ ΛΙΟΣΙΩΝ)',22),(78,'ΠΕΡΙΣΤΕΡΙΟΥ',22),(79,'ΠΕΤΡΟΥΠΟΛΕΩΣ',22),(80,'ΧΑΪΔΑΡΙΟΥ',22),(81,'ΑΘΗΝΑΙΩΝ',23),(82,'ΒΥΡΩΝΟΣ',23),(83,'ΓΑΛΑΤΣΙΟΥ',23),(84,'ΔΑΦΝΗΣ - ΥΜΗΤΤΟΥ',23),(85,'ΖΩΓΡΑΦΟΥ',23),(86,'ΗΛΙΟΥΠΟΛΕΩΣ',23),(87,'ΚΑΙΣΑΡΙΑΝΗΣ',23),(88,'ΦΙΛΑΔΕΛΦΕΙΑΣ - ΧΑΛΚΗΔΟΝΟΣ',23),(89,'ΑΓΚΙΣΤΡΙΟΥ',24),(90,'ΑΙΓΙΝΑΣ',24),(91,'ΚΥΘΗΡΩΝ',24),(92,'ΠΟΡΟΥ',24),(93,'ΣΑΛΑΜΙΝΟΣ',24),(94,'ΣΠΕΤΣΩΝ',24),(95,'ΤΡΟΙΖΗΝΙΑΣ',24),(96,'ΥΔΡΑΣ',24),(97,'ΑΓΙΟΥ ΔΗΜΗΤΡΙΟΥ',25),(98,'ΑΛΙΜΟΥ',25),(99,'ΓΛΥΦΑΔΑΣ',25),(100,'ΕΛΛΗΝΙΚΟΥ - ΑΡΓΥΡΟΥΠΟΛΗΣ',25),(101,'ΚΑΛΛΙΘΕΑΣ',25),(102,'ΜΟΣΧΑΤΟΥ - ΤΑΥΡΟΥ',25),(103,'ΝΕΑΣ ΣΜΥΡΝΗΣ',25),(104,'ΠΑΛΑΙΟΥ ΦΑΛΗΡΟΥ',25),(105,'ΚΕΡΑΤΣΙΝΙΟΥ - ΔΡΑΠΕΤΣΩΝΑΣ',26),(106,'ΚΟΡΥΔΑΛΛΟΥ',26),(107,'ΝΙΚΑΙΑΣ - ΑΓΙΟΥ Ι. ΡΕΝΤΗ',26),(108,'ΠΕΙΡΑΙΩΣ',26),(109,'ΠΕΡΑΜΑΤΟΣ',26),(110,'ΓΡΕΒΕΝΩΝ',27),(111,'ΔΕΣΚΑΤΗΣ',27),(112,'ΚΑΣΤΟΡΙΑΣ',28),(113,'ΝΕΣΤΟΡΙΟΥ',28),(114,'ΟΡΕΣΤΙΔΟΣ',28),(115,'ΒΟΪΟΥ',29),(116,'ΕΟΡΔΑΙΑΣ',29),(117,'ΚΟΖΑΝΗΣ',29),(118,'ΣΕΡΒΙΩΝ-ΒΕΛΒΕΝΤΟΥ',29),(119,'ΑΜΥΝΤΑΙΟΥ',30),(120,'ΠΡΕΣΠΩΝ',30),(121,'ΦΛΩΡΙΝΑΣ',30),(122,'ΑΡΤΑΙΩΝ',31),(123,'ΓΕΩΡΓΙΟΥ ΚΑΡΑΪΣΚΑΚΗ',31),(124,'ΚΕΝΤΡΙΚΩΝ ΤΖΟΥΜΕΡΚΩΝ',31),(125,'ΝΙΚΟΛΑΟΥ ΣΚΟΥΦΑ',31),(126,'ΗΓΟΥΜΕΝΙΤΣΗΣ',32),(127,'ΣΟΥΛΙΟΥ',32),(128,'ΦΙΛΙΑΤΩΝ',32),(129,'ΒΟΡΕΙΩΝ ΤΖΟΥΜΕΡΚΩΝ',33),(130,'ΔΩΔΩΝΗΣ',33),(131,'ΖΑΓΟΡΙΟΥ',33),(132,'ΖΙΤΣΑΣ',33),(133,'ΙΩΑΝΝΙΤΩΝ',33),(134,'ΚΟΝΙΤΣΑΣ',33),(135,'ΜΕΤΣΟΒΟΥ',33),(136,'ΠΩΓΩΝΙΟΥ',33),(137,'ΖΗΡΟΥ',34),(138,'ΠΑΡΓΑΣ',34),(139,'ΠΡΕΒΕΖΗΣ',34),(140,'ΑΡΓΙΘΕΑΣ',35),(141,'ΚΑΡΔΙΤΣΑΣ',35),(142,'ΛΙΜΝΗΣ ΠΛΑΣΤΗΡΑ',35),(143,'ΜΟΥΖΑΚΙΟΥ',35),(144,'ΠΑΛΑΜΑ',35),(145,'ΣΟΦΑΔΩΝ',35),(146,'ΑΓΙΑΣ',36),(147,'ΕΛΑΣΣΟΝΑΣ',36),(148,'ΚΙΛΕΛΕΡ',36),(149,'ΛΑΡΙΣΑΙΩΝ',36),(150,'ΤΕΜΠΩΝ',36),(151,'ΤΥΡΝΑΒΟΥ',36),(152,'ΦΑΡΣΑΛΩΝ',36),(153,'ΑΛΜΥΡΟΥ',37),(154,'ΒΟΛΟΥ',37),(155,'ΖΑΓΟΡΑΣ-ΜΟΥΡΕΣΙΟΥ',37),(156,'ΝΟΤΙΟΥ ΠΗΛΙΟΥ',37),(157,'ΡΗΓΑ ΦΕΡΡΑΙΟΥ',37),(158,'ΑΛΟΝΝΗΣΟΥ',38),(159,'ΣΚΙΑΘΟΥ',38),(160,'ΣΚΟΠΕΛΟΥ',38),(161,'ΚΑΛΑΜΠΑΚΑΣ',39),(162,'ΠΥΛΗΣ',39),(163,'ΤΡΙΚΚΑΙΩΝ',39),(164,'ΦΑΡΚΑΔΟΝΑΣ',39),(165,'ΑΛΙΑΡΤΟΥ',40),(166,'ΔΙΣΤΟΜΟΥ - ΑΡΑΧΟΒΑΣ - ΑΝΤΙΚΥΡΑΣ',40),(167,'ΘΗΒΑΙΩΝ',40),(168,'ΛΕΒΑΔΕΩΝ',40),(169,'ΟΡΧΟΜΕΝΟΥ',40),(170,'ΤΑΝΑΓΡΑΣ',40),(171,'ΔΙΡΦΥΩΝ-ΜΕΣΣΑΠΙΩΝ',41),(172,'ΕΡΕΤΡΙΑΣ',41),(173,'ΙΣΤΙΑΙΑΣ-ΑΙΔΗΨΟΥ',41),(174,'ΚΑΡΥΣΤΟΥ',41),(175,'ΚΥΜΗΣ-ΑΛΙΒΕΡΙΟΥ',41),(176,'ΜΑΝΤΟΥΔΙΟΥ-ΛΙΜΝΗΣ-ΑΓΙΑΣ ΑΝΝΑΣ',41),(177,'ΣΚΥΡΟΥ',41),(178,'ΧΑΛΚΙΔΕΩΝ',41),(179,'ΑΓΡΑΦΩΝ',42),(180,'ΚΑΡΠΕΝΗΣΙΟΥ',42),(181,'ΑΜΦΙΚΛΕΙΑΣ - ΕΛΑΤΕΙΑΣ',43),(182,'ΔΟΜΟΚΟΥ',43),(183,'ΛΑΜΙΕΩΝ',43),(184,'ΛΟΚΡΩΝ',43),(185,'ΜΑΚΡΑΚΩΜΗΣ',43),(186,'ΜΩΛΟΥ - ΑΓΙΟΥ ΚΩΝΣΤΑΝΤΙΝΟΥ',43),(187,'ΣΤΥΛΙΔΟΣ',43),(188,'ΔΕΛΦΩΝ',44),(189,'ΔΩΡΙΔΟΣ',44),(190,'ΑΡΧΑΝΩΝ - ΑΣΤΕΡΟΥΣΙΩΝ',45),(191,'ΒΙΑΝΝΟΥ',45),(192,'ΓΟΡΤΥΝΑΣ',45),(193,'ΗΡΑΚΛΕΙΟΥ',45),(194,'ΜΑΛΕΒΙΖΙΟΥ',45),(195,'ΜΙΝΩΑ ΠΕΔΙΑΔΑΣ',45),(196,'ΦΑΙΣΤΟΥ',45),(197,'ΧΕΡΣΟΝΗΣΟΥ',45),(198,'ΑΓΙΟΥ ΝΙΚΟΛΑΟΥ',46),(199,'ΙΕΡΑΠΕΤΡΑΣ',46),(200,'ΟΡΟΠΕΔΙΟΥ ΛΑΣΙΘΙΟΥ',46),(201,'ΣΗΤΕΙΑΣ',46),(202,'ΑΓΙΟΥ ΒΑΣΙΛΕΙΟΥ',47),(203,'ΑΜΑΡΙΟΥ',47),(204,'ΑΝΩΓΕΙΩΝ',47),(205,'ΜΥΛΟΠΟΤΑΜΟΥ',47),(206,'ΡΕΘΥΜΝΗΣ',47),(207,'ΑΠΟΚΟΡΩΝΟΥ',48),(208,'ΓΑΥΔΟΥ',48),(209,'ΚΑΝΤΑΝΟΥ - ΣΕΛΙΝΟΥ',48),(210,'ΚΙΣΣΑΜΟΥ',48),(211,'ΠΛΑΤΑΝΙΑ',48),(212,'ΣΦΑΚΙΩΝ',48),(213,'ΧΑΝΙΩΝ',48),(214,'ΔΟΞΑΤΟΥ',49),(215,'ΔΡΑΜΑΣ',49),(216,'ΚΑΤΩ ΝΕΥΡΟΚΟΠΙΟΥ',49),(217,'ΠΑΡΑΝΕΣΤΙΟΥ',49),(218,'ΠΡΟΣΟΤΣΑΝΗΣ',49),(219,'ΑΛΕΞΑΝΔΡΟΥΠΟΛΗΣ',50),(220,'ΔΙΔΥΜΟΤΕΙΧΟΥ',50),(221,'ΟΡΕΣΤΙΑΔΟΣ',50),(222,'ΣΑΜΟΘΡΑΚΗΣ',50),(223,'ΣΟΥΦΛΙΟΥ',50),(224,'ΘΑΣΟΥ',51),(225,'ΚΑΒΑΛΑΣ',52),(226,'ΝΕΣΤΟΥ',52),(227,'ΠΑΓΓΑΙΟΥ',52),(228,'ΑΒΔΗΡΩΝ',53),(229,'ΜΥΚΗΣ',53),(230,'ΞΑΝΘΗΣ',53),(231,'ΤΟΠΕΙΡΟΥ',53),(232,'ΑΡΡΙΑΝΩΝ',54),(233,'ΙΑΣΜΟΥ',54),(234,'ΚΟΜΟΤΗΝΗΣ',54),(235,'ΜΑΡΩΝΕΙΑΣ-ΣΑΠΩΝ',54),(236,'ΑΛΕΞΑΝΔΡΕΙΑΣ',55),(237,'ΒΕΡΟΙΑΣ',55),(238,'ΝΑΟΥΣΑΣ',55),(239,'ΑΜΠΕΛΟΚΗΠΩΝ-ΜΕΝΕΜΕΝΗΣ',56),(240,'ΒΟΛΒΗΣ',56),(241,'ΔΕΛΤΑ',56),(242,'ΘΕΡΜΑΪΚΟΥ',56),(243,'ΘΕΡΜΗΣ',56),(244,'ΘΕΣΣΑΛΟΝΙΚΗΣ',56),(245,'ΚΑΛΑΜΑΡΙΑΣ',56),(246,'ΚΟΡΔΕΛΙΟΥ-ΕΥΟΣΜΟΥ',56),(247,'ΛΑΓΚΑΔΑ',56),(248,'ΝΕΑΠΟΛΗΣ-ΣΥΚΕΩΝ',56),(249,'ΠΑΥΛΟΥ ΜΕΛΑ',56),(250,'ΠΥΛΑΙΑΣ-ΧΟΡΤΙΑΤΗ',56),(251,'ΧΑΛΚΗΔΟΝΟΣ',56),(252,'ΩΡΑΙΟΚΑΣΤΡΟΥ',56),(253,'ΚΙΛΚΙΣ',57),(254,'ΠΑΙΟΝΙΑΣ',57),(255,'ΑΛΜΩΠΙΑΣ',58),(256,'ΕΔΕΣΣΑΣ',58),(257,'ΠΕΛΛΑΣ',58),(258,'ΣΚΥΔΡΑΣ',58),(259,'ΔΙΟΥ-ΟΛΥΜΠΟΥ',59),(260,'ΚΑΤΕΡΙΝΗΣ',59),(261,'ΠΥΔΝΑΣ-ΚΟΛΙΝΔΡΟΥ',59),(262,'ΑΜΦΙΠΟΛΗΣ',60),(263,'ΒΙΣΑΛΤΙΑΣ',60),(264,'ΕΜΜΑΝΟΥΗΛ ΠΑΠΠΑ',60),(265,'ΗΡΑΚΛΕΙΑΣ',60),(266,'ΝΕΑΣ ΖΙΧΝΗΣ',60),(267,'ΣΕΡΡΩΝ',60),(268,'ΣΙΝΤΙΚΗΣ',60),(269,'ΑΡΙΣΤΟΤΕΛΗ',61),(270,'ΚΑΣΣΑΝΔΡΑΣ',61),(271,'ΝΕΑΣ ΠΡΟΠΟΝΤΙΔΑΣ',61),(272,'ΠΟΛΥΓΥΡΟΥ',61),(273,'ΣΙΘΩΝΙΑΣ',61),(274,'ΑΓΡΙΝΙΟΥ',62),(275,'ΑΚΤΙΟΥ-ΒΟΝΙΤΣΑΣ',62),(276,'ΑΜΦΙΛΟΧΙΑΣ',62),(277,'ΘΕΡΜΟΥ',62),(278,'ΙΕΡΑΣ ΠΟΛΗΣ ΜΕΣΟΛΟΓΓΙΟΥ',62),(279,'ΝΑΥΠΑΚΤΙΑΣ',62),(280,'ΞΗΡΟΜΕΡΟΥ',62),(281,'ΑΙΓΙΑΛΕΙΑΣ',63),(282,'ΔΥΤΙΚΗΣ ΑΧΑΙΑΣ',63),(283,'ΕΡΥΜΑΝΘΟΥ',63),(284,'ΚΑΛΑΒΡΥΤΩΝ',63),(285,'ΠΑΤΡΕΩΝ',63),(286,'ΑΝΔΡΑΒΙΔΑΣ-ΚΥΛΛΗΝΗΣ',64),(287,'ΑΝΔΡΙΤΣΑΙΝΑΣ-ΚΡΕΣΤΕΝΩΝ',64),(288,'ΑΡΧΑΙΑΣ ΟΛΥΜΠΙΑΣ',64),(289,'ΖΑΧΑΡΩΣ',64),(290,'ΗΛΙΔΑΣ',64),(291,'ΠΗΝΕΙΟΥ',64),(292,'ΠΥΡΓΟΥ',64),(293,'ΖΑΚΥΝΘΟΥ',65),(294,'ΙΘΑΚΗΣ',66),(295,'ΚΕΡΚΥΡΑΣ',67),(296,'ΠΑΞΩΝ',67),(297,'ΚΕΦΑΛΟΝΙΑΣ',68),(298,'ΛΕΥΚΑΔΑΣ',69),(299,'ΜΕΓΑΝΗΣΙΟΥ',69),(300,'ΑΡΓΟΥΣ-ΜΥΚΗΝΩΝ',70),(301,'ΕΠΙΔΑΥΡΟΥ',70),(302,'ΕΡΜΙΟΝΙΔΑΣ',70),(303,'ΝΑΥΠΛΙΕΩΝ',70),(304,'ΒΟΡΕΙΑΣ ΚΥΝΟΥΡΙΑΣ',71),(305,'ΓΟΡΤΥΝΙΑΣ',71),(306,'ΜΕΓΑΛΟΠΟΛΗΣ',71),(307,'ΝΟΤΙΑΣ ΚΥΝΟΥΡΙΑΣ',71),(308,'ΤΡΙΠΟΛΗΣ',71),(309,'ΒΕΛΟΥ-ΒΟΧΑΣ',72),(310,'ΚΟΡΙΝΘΙΩΝ',72),(311,'ΛΟΥΤΡΑΚΙΟΥ-ΑΓ.ΘΕΟΔΩΡΩΝ',72),(312,'ΝΕΜΕΑΣ',72),(313,'ΞΥΛΟΚΑΣΤΡΟΥ-ΕΥΡΩΣΤΙΝΗΣ',72),(314,'ΣΙΚΥΩΝΙΩΝ',72),(315,'ΑΝΑΤΟΛΙΚΗΣ ΜΑΝΗΣ',73),(316,'ΕΛΑΦΟΝΗΣΟΥ',73),(317,'ΕΥΡΩΤΑ',73),(318,'ΜΟΝΕΜΒΑΣΙΑΣ',73),(319,'ΣΠΑΡΤΗΣ',73),(320,'ΔΥΤΙΚΗΣ ΜΑΝΗΣ',74),(321,'ΚΑΛΑΜΑΤΑΣ',74),(322,'ΜΕΣΣΗΝΗΣ',74),(323,'ΟΙΧΑΛΙΑΣ',74),(324,'ΠΥΛΟΥ-ΝΕΣΤΟΡΟΣ',74),(325,'ΤΡΙΦΥΛΙΑΣ',74);

CREATE TABLE `municipal_units` (
  `id` int UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` varchar(200) NOT NULL,
  `municipalities_id` int UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `idx_municipal_units_name` (`name`),
  INDEX `idx_municipalities_id` (`municipalities_id`),
  CONSTRAINT `municipal_units_ibfk_1` FOREIGN KEY (`municipalities_id`) 
      REFERENCES `municipalities` (`id`) 
      ON DELETE CASCADE 
      ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

INSERT INTO `municipal_units` VALUES (1,'ΑΓΙΟΥ ΚΗΡΥΚΟΥ',1),(2,'ΕΥΔΗΛΟΥ',1),(3,'ΡΑΧΩΝ',1),(4,'ΦΟΥΡΝΩΝ ΚΟΡΣΕΩΝ',2),(5,'ΑΓΙΑΣ ΠΑΡΑΣΚΕΥΗΣ',3),(6,'ΑΓΙΑΣΟΥ',3),(7,'ΓΕΡΑΣ',3),(8,'ΕΡΕΣΟΥ - ΑΝΤΙΣΣΗΣ',3),(9,'ΕΥΕΡΓΕΤΟΥΛΑ',3),(10,'ΚΑΛΛΟΝΗΣ',3),(11,'ΛΟΥΤΡΟΠΟΛΕΩΣ ΘΕΡΜΗΣ',3),(12,'ΜΑΝΤΑΜΑΔΟΥ',3),(13,'ΜΗΘΥΜΝΑΣ',3),(14,'ΜΥΤΙΛΗΝΗΣ',3),(15,'ΠΕΤΡΑΣ',3),(16,'ΠΛΩΜΑΡΙΟΥ',3),(17,'ΠΟΛΙΧΝΙΤΟΥ',3),(18,'ΑΓΙΟΥ ΕΥΣΤΡΑΤΙΟΥ',4),(19,'ΑΤΣΙΚΗΣ',5),(20,'ΜΟΥΔΡΟΥ',5),(21,'ΜΥΡΙΝΑΣ',5),(22,'ΝΕΑΣ ΚΟΥΤΑΛΗΣ',5),(23,'ΒΑΘΕΟΣ',6),(24,'ΚΑΡΛΟΒΑΣΙΩΝ',6),(25,'ΜΑΡΑΘΟΚΑΜΠΟΥ',6),(26,'ΠΥΘΑΓΟΡΕΙΟΥ',6),(27,'ΟΙΝΟΥΣΣΩΝ',7),(28,'ΑΓΙΟΥ ΜΗΝΑ',8),(29,'ΑΜΑΝΗΣ',8),(30,'ΙΩΝΙΑΣ',8),(31,'ΚΑΜΠΟΧΩΡΩΝ',8),(32,'ΚΑΡΔΑΜΥΛΩΝ',8),(33,'ΜΑΣΤΙΧΟΧΩΡΙΩΝ',8),(34,'ΟΜΗΡΟΥΠΟΛΗΣ',8),(35,'ΧΙΟΥ',8),(36,'ΨΑΡΩΝ',9),(37,'ΑΝΔΡΟΥ',10),(38,'ΚΟΡΘΙΟΥ',10),(39,'ΥΔΡΟΥΣΑΣ',10),(40,'ΑΝΑΦΗΣ',11),(41,'ΘΗΡΑΣ',12),(42,'ΟΙΑΣ',12),(43,'ΙΗΤΩΝ',13),(44,'ΣΙΚΙΝΟΥ',14),(45,'ΦΟΛΕΓΑΝΔΡΟΥ',15),(46,'ΑΓΑΘΟΝΗΣΙΟΥ',16),(47,'ΑΣΤΥΠΑΛΑΙΑΣ',17),(48,'ΚΑΛΥΜΝΙΩΝ',18),(49,'ΛΕΙΨΩΝ',19),(50,'ΛΕΡΟΥ',20),(51,'ΠΑΤΜΟΥ',21),(52,'ΚΑΡΠΑΘΟΥ',22),(53,'ΟΛΥΜΠΟΥ',22),(54,'ΚΑΣΟΥ',23),(55,'ΚΕΑΣ',24),(56,'ΚΥΘΝΟΥ',25),(57,'ΔΙΚΑΙΟΥ',26),(58,'ΗΡΑΚΛΕΙΔΩΝ',26),(59,'ΚΩ',26),(60,'ΝΙΣΥΡΟΥ',27),(61,'ΚΙΜΩΛΟΥ',28),(62,'ΜΗΛΟΥ',29),(63,'ΣΕΡΙΦΟΥ',30),(64,'ΣΙΦΝΟΥ',31),(65,'ΜΥΚΟΝΟΥ',32),(66,'ΑΜΟΡΓΟΥ',33),(67,'ΔΟΝΟΥΣΗΣ',34),(68,'ΔΡΥΜΑΛΙΑΣ',34),(69,'ΗΡΑΚΛΕΙΑΣ',34),(70,'ΚΟΥΦΟΝΗΣΙΩΝ',34),(71,'ΝΑΞΟΥ',34),(72,'ΣΧΟΙΝΟΥΣΣΗΣ',34),(73,'ΑΝΤΙΠΑΡΟΥ',35),(74,'ΠΑΡΟΥ',36),(75,'ΜΕΓΙΣΤΗΣ',37),(76,'ΑΡΧΑΓΓΕΛΟΥ',38),(77,'ΑΤΑΒΥΡΟΥ',38),(78,'ΑΦΑΝΤΟΥ',38),(79,'ΙΑΛΥΣΟΥ',38),(80,'ΚΑΛΛΙΘΕΑΣ',38),(81,'ΚΑΜΕΙΡΟΥ',38),(82,'ΛΙΝΔΙΩΝ',38),(83,'ΝΟΤΙΑΣ ΡΟΔΟΥ',38),(84,'ΠΕΤΑΛΟΥΔΩΝ',38),(85,'ΡΟΔΟΥ',38),(86,'ΣΥΜΗΣ',39),(87,'ΤΗΛΟΥ',40),(88,'ΧΑΛΚΗΣ',41),(89,'ΑΝΩ ΣΥΡΟΥ',42),(90,'ΕΡΜΟΥΠΟΛΕΩΣ',42),(91,'ΠΟΣΕΙΔΩΝΙΑΣ',42),(92,'ΕΞΩΜΒΟΥΡΓΟΥ',43),(93,'ΠΑΝΟΡΜΟΥ',43),(94,'ΤΗΝΟΥ',43),(95,'ΑΧΑΡΝΩΝ',44),(96,'ΘΡΑΚΟΜΑΚΕΔΟΝΩΝ',44),(97,'ΒΑΡΗΣ',45),(98,'ΒΟΥΛΑΣ',45),(99,'ΒΟΥΛΙΑΓΜΕΝΗΣ',45),(100,'ΑΓΙΟΥ ΣΤΕΦΑΝΟΥ',46),(101,'ΑΝΟΙΞΕΩΣ',46),(102,'ΔΙΟΝΥΣΟΥ',46),(103,'ΔΡΟΣΙΑΣ',46),(104,'ΚΡΥΟΝΕΡΙΟΥ',46),(105,'ΡΟΔΟΠΟΛΕΩΣ',46),(106,'ΣΤΑΜΑΤΑΣ',46),(107,'ΚΡΩΠΙΑΣ',47),(108,'ΑΓΙΟΥ ΚΩΝΣΤΑΝΤΙΝΟΥ',48),(109,'ΚΕΡΑΤΕΑΣ',48),(110,'ΛΑΥΡΕΩΤΙΚΗΣ',48),(111,'ΒΑΡΝΑΒΑ',49),(112,'ΓΡΑΜΜΑΤΙΚΟΥ',49),(113,'ΜΑΡΑΘΩΝΟΣ',49),(114,'ΝΕΑΣ ΜΑΚΡΗΣ',49),(115,'ΜΑΡΚΟΠΟΥΛΟΥ ΜΕΣΟΓΑΙΑΣ',50),(116,'ΓΛΥΚΩΝ ΝΕΡΩΝ',51),(117,'ΠΑΙΑΝΙΑΣ',51),(118,'ΑΝΘΟΥΣΗΣ',52),(119,'ΓΕΡΑΚΑ',52),(120,'ΠΑΛΛΗΝΗΣ',52),(121,'ΠΙΚΕΡΜΙΟΥ',53),(122,'ΡΑΦΗΝΑΣ',53),(123,'ΑΝΑΒΥΣΣΟΥ',54),(124,'ΚΑΛΥΒΙΩΝ ΘΟΡΙΚΟΥ',54),(125,'ΚΟΥΒΑΡΑ',54),(126,'ΠΑΛΑΙΑΣ ΦΩΚΑΙΑΣ',54),(127,'ΣΑΡΩΝΙΔΟΣ',54),(128,'ΑΡΤΕΜΙΔΟΣ',55),(129,'ΣΠΑΤΩΝ-ΛΟΥΤΣΑΣ',55),(130,'ΑΥΛΩΝΟΣ',56),(131,'ΑΦΙΔΝΩΝ',56),(132,'ΚΑΛΑΜΟΥ',56),(133,'ΚΑΠΑΝΔΡΙΤΙΟΥ',56),(134,'ΜΑΛΑΚΑΣΗΣ',56),(135,'ΜΑΡΚΟΠΟΥΛΟΥ ΩΡΩΠΟΥ',56),(136,'ΠΟΛΥΔΕΝΔΡΙΟΥ',56),(137,'ΣΥΚΑΜΙΝΟΥ',56),(138,'ΩΡΩΠΙΩΝ',56),(139,'ΑΓΙΑΣ ΠΑΡΑΣΚΕΥΗΣ',57),(140,'ΑΜΑΡΟΥΣΙΟΥ',58),(141,'ΒΡΙΛΗΣΣΙΩΝ',59),(142,'ΗΡΑΚΛΕΙΟΥ',60),(143,'ΕΚΑΛΗΣ',61),(144,'ΚΗΦΙΣΙΑΣ',61),(145,'ΝΕΑΣ ΕΡΥΘΡΑΙΑΣ',61),(146,'ΛΥΚΟΒΡΥΣΕΩΣ',62),(147,'ΠΕΥΚΗΣ',62),(148,'ΜΕΤΑΜΟΡΦΩΣΕΩΣ',63),(149,'ΝΕΑΣ ΙΩΝΙΑΣ',64),(150,'ΠΑΠΑΓΟΥ',65),(151,'ΧΟΛΑΡΓΟΥ',65),(152,'ΜΕΛΙΣΣΙΩΝ',66),(153,'ΝΕΑΣ ΠΕΝΤΕΛΗΣ',66),(154,'ΠΕΝΤΕΛΗΣ',66),(155,'ΝΕΟΥ ΨΥΧΙΚΟΥ',67),(156,'ΦΙΛΟΘΕΗΣ',67),(157,'ΨΥΧΙΚΟΥ',67),(158,'ΧΑΛΑΝΔΡΙΟΥ',68),(159,'ΑΣΠΡΟΠΥΡΓΟΥ',69),(160,'ΕΛΕΥΣΙΝΟΣ',70),(161,'ΜΑΓΟΥΛΑΣ',70),(162,'ΒΙΛΙΩΝ',71),(163,'ΕΡΥΘΡΩΝ',71),(164,'ΜΑΝΔΡΑΣ',71),(165,'ΟΙΝΟΗΣ',71),(166,'ΜΕΓΑΡΕΩΝ',72),(167,'ΝΕΑΣ ΠΕΡΑΜΟΥ',72),(168,'ΑΝΩ ΛΙΟΣΙΩΝ',73),(169,'ΖΕΦΥΡΙΟΥ',73),(170,'ΦΥΛΗΣ',73),(171,'ΑΓΙΑΣ ΒΑΡΒΑΡΑΣ',74),(172,'ΑΓΙΩΝ ΑΝΑΡΓΥΡΩΝ',75),(173,'ΚΑΜΑΤΕΡΟΥ',75),(174,'ΑΙΓΑΛΕΩ',76),(175,'ΙΛΙΟΥ (ΝΕΩΝ ΛΙΟΣΙΩΝ)',77),(176,'ΠΕΡΙΣΤΕΡΙΟΥ',78),(177,'ΠΕΤΡΟΥΠΟΛΗΣ',79),(178,'ΧΑΪΔΑΡΙΟΥ',80),(179,'ΑΘΗΝΑΙΩΝ',81),(180,'ΒΥΡΩΝΟΣ',82),(181,'ΓΑΛΑΤΣΙΟΥ',83),(182,'ΔΑΦΝΗΣ',84),(183,'ΥΜΗΤΤΟΥ',84),(184,'ΖΩΓΡΑΦΟΥ',85),(185,'ΗΛΙΟΥΠΟΛΗΣ',86),(186,'ΚΑΙΣΑΡΙΑΝΗΣ',87),(187,'ΝΕΑΣ ΦΙΛΑΔΕΛΦΕΙΑΣ',88),(188,'ΝΕΑΣ ΧΑΛΚΗΔΟΝΟΣ',88),(189,'ΑΓΚΙΣΤΡΙΟΥ',89),(190,'ΑΙΓΙΝΑΣ',90),(191,'ΑΝΤΙΚΥΘΗΡΩΝ',91),(192,'ΚΥΘΗΡΩΝ',91),(193,'ΠΟΡΟΥ',92),(194,'ΑΜΠΕΛΑΚΙΩΝ',93),(195,'ΣΑΛΑΜΙΝΑΣ',93),(196,'ΣΠΕΤΣΩΝ',94),(197,'ΜΕΘΑΝΩΝ',95),(198,'ΤΡΟΙΖΗΝΟΣ',95),(199,'ΥΔΡΑΣ',96),(200,'ΑΓΙΟΥ ΔΗΜΗΤΡΙΟΥ',97),(201,'ΑΛΙΜΟΥ',98),(202,'ΓΛΥΦΑΔΑΣ',99),(203,'ΑΡΓΥΡΟΥΠΟΛΗΣ',100),(204,'ΕΛΛΗΝΙΚΟΥ',100),(205,'ΚΑΛΛΙΘΕΑΣ',101),(206,'ΜΟΣΧΑΤΟΥ',102),(207,'ΤΑΥΡΟΥ',102),(208,'ΝΕΑΣ ΣΜΥΡΝΗΣ',103),(209,'ΠΑΛΑΙΟΥ ΦΑΛΗΡΟΥ',104),(210,'ΔΡΑΠΕΤΣΩΝΑΣ',105),(211,'ΚΕΡΑΤΣΙΝΙΟΥ',105),(212,'ΚΟΡΥΔΑΛΛΟΥ',106),(213,'ΑΓΙΟΥ ΙΩΑΝΝΟΥ ΡΕΝΤΗ',107),(214,'ΝΙΚΑΙΑΣ',107),(215,'ΠΕΙΡΑΙΩΣ',108),(216,'ΠΕΡΑΜΑΤΟΣ',109),(217,'ΑΒΔΕΛΛΑΣ',110),(218,'ΑΓΙΟΥ ΚΟΣΜΑ',110),(219,'ΒΕΝΤΖΙΟΥ',110),(220,'ΓΟΡΓΙΑΝΗΣ',110),(221,'ΓΡΕΒΕΝΩΝ',110),(222,'ΔΟΤΣΙΚΟΥ',110),(223,'ΗΡΑΚΛΕΩΤΩΝ',110),(224,'ΘΕΟΔΩΡΟΥ ΖΙΑΚΑ',110),(225,'ΜΕΣΟΛΟΥΡΙΟΥ',110),(226,'ΠΕΡΙΒΟΛΙΟΥ',110),(227,'ΣΑΜΑΡΙΝΑΣ',110),(228,'ΣΜΙΞΗΣ',110),(229,'ΦΙΛΙΠΠΑΙΩΝ',110),(230,'ΔΕΣΚΑΤΗΣ',111),(231,'ΧΑΣΙΩΝ',111),(232,'ΑΓΙΑΣ ΤΡΙΑΔΟΣ',112),(233,'ΑΓΙΩΝ ΑΝΑΡΓΥΡΩΝ',112),(234,'ΒΙΤΣΙΟΥ',112),(235,'ΚΑΣΤΟΡΙΑΣ',112),(236,'ΚΑΣΤΡΑΚΙΟΥ',112),(237,'ΚΛΕΙΣΟΥΡΑΣ',112),(238,'ΚΟΡΕΣΤΙΩΝ',112),(239,'ΜΑΚΕΔΝΩΝ',112),(240,'ΜΕΣΟΠΟΤΑΜΙΑΣ',112),(241,'ΑΚΡΙΤΩΝ',113),(242,'ΑΡΡΕΝΩΝ',113),(243,'ΓΡΑΜΟΥ',113),(244,'ΝΕΣΤΟΡΙΟΥ',113),(245,'ΑΡΓΟΥΣ ΟΡΕΣΤΙΚΟΥ',114),(246,'ΙΩΝΟΣ ΔΡΑΓΟΥΜΗ',114),(247,'ΑΣΚΙΟΥ',115),(248,'ΝΕΑΠΟΛΗΣ',115),(249,'ΠΕΝΤΑΛΟΦΟΥ',115),(250,'ΣΙΑΤΙΣΤΑΣ',115),(251,'ΤΣΟΤΥΛΙΟΥ',115),(252,'ΑΓΙΑΣ ΠΑΡΑΣΚΕΥΗΣ',116),(253,'ΒΕΡΜΙΟΥ',116),(254,'ΒΛΑΣΤΗΣ',116),(255,'ΜΟΥΡΙΚΙΟΥ',116),(256,'ΠΤΟΛΕΜΑΪΔΑΣ',116),(257,'ΑΙΑΝΗΣ',117),(258,'ΔΗΜΗΤΡΙΟΥ ΥΨΗΛΑΝΤΗ',117),(259,'ΕΛΙΜΕΙΑΣ',117),(260,'ΕΛΛΗΣΠΟΝΤΟΥ',117),(261,'ΚΟΖΑΝΗΣ',117),(262,'ΒΕΛΒΕΝΤΟΥ',118),(263,'ΚΑΜΒΟΥΝΙΩΝ',118),(264,'ΛΙΒΑΔΕΡΟΥ',118),(265,'ΣΕΡΒΙΩΝ',118),(266,'ΑΕΤΟΥ',119),(267,'ΑΜΥΝΤΑΙΟΥ',119),(268,'ΒΑΡΙΚΟΥ',119),(269,'ΛΕΧΟΒΟΥ',119),(270,'ΝΥΜΦΑΙΟΥ',119),(271,'ΦΙΛΩΤΑ',119),(272,'ΚΡΥΣΤΑΛΛΟΠΗΓΗΣ',120),(273,'ΠΡΕΣΠΩΝ',120),(274,'ΚΑΤΩ ΚΛΕΙΝΩΝ',121),(275,'ΜΕΛΙΤΗΣ',121),(276,'ΠΕΡΑΣΜΑΤΟΣ',121),(277,'ΦΛΩΡΙΝΑΣ',121),(278,'ΑΜΒΡΑΚΙΚΟΥ',122),(279,'ΑΡΤΑΙΩΝ',122),(280,'ΒΛΑΧΕΡΝΩΝ',122),(281,'ΞΗΡΟΒΟΥΝΙΟΥ',122),(282,'ΦΙΛΟΘΕΗΣ',122),(283,'ΓΕΩΡΓΙΟΥ ΚΑΡΑΪΣΚΑΚΗ',123),(284,'ΗΡΑΚΛΕΙΑΣ',123),(285,'ΤΕΤΡΑΦΥΛΙΑΣ',123),(286,'ΑΓΝΑΝΤΩΝ',124),(287,'ΑΘΑΜΑΝΙΑΣ',124),(288,'ΘΕΟΔΩΡΙΑΝΩΝ',124),(289,'ΜΕΛΙΣΣΟΥΡΓΩΝ',124),(290,'ΑΡΑΧΘΟΥ',125),(291,'ΚΟΜΜΕΝΟΥ',125),(292,'ΚΟΜΠΟΤΙΟΥ',125),(293,'ΠΕΤΑ',125),(294,'ΗΓΟΥΜΕΝΙΤΣΗΣ',126),(295,'ΜΑΡΓΑΡΙΤΙΟΥ',126),(296,'ΠΑΡΑΠΟΤΑΜΟΥ',126),(297,'ΠΕΡΔΙΚΑΣ',126),(298,'ΣΥΒΟΤΩΝ',126),(299,'ΑΧΕΡΟΝΤΑ',127),(300,'ΠΑΡΑΜΥΘΙΑΣ',127),(301,'ΣΟΥΛΙΟΥ',127),(302,'ΣΑΓΙΑΔΑΣ',128),(303,'ΦΙΛΙΑΤΩΝ',128),(304,'ΒΑΘΥΠΕΔΟΥ',129),(305,'ΚΑΛΑΡΡΥΤΩΝ',129),(306,'ΚΑΤΣΑΝΟΧΩΡΙΩΝ',129),(307,'ΜΑΤΣΟΥΚΙΟΥ',129),(308,'ΠΡΑΜΑΝΤΩΝ',129),(309,'ΣΥΡΡΑΚΟΥ',129),(310,'ΤΖΟΥΜΕΡΚΩΝ',129),(311,'ΑΓΙΟΥ ΔΗΜΗΤΡΙΟΥ',130),(312,'ΔΩΔΩΝΗΣ',130),(313,'ΛΑΚΚΑΣ ΣΟΥΛΙΟΥ',130),(314,'ΣΕΛΛΩΝ',130),(315,'ΑΝΑΤΟΛΙΚΟΥ ΖΑΓΟΡΙΟΥ',131),(316,'ΒΟΒΟΥΣΗΣ',131),(317,'ΚΕΝΤΡΙΚΟΥ ΖΑΓΟΡΙΟΥ',131),(318,'ΠΑΠΙΓΚΟΥ',131),(319,'ΤΥΜΦΗΣ',131),(320,'ΕΚΑΛΗΣ',132),(321,'ΕΥΡΥΜΕΝΩΝ',132),(322,'ΖΙΤΣΑΣ',132),(323,'ΜΟΛΟΣΣΩΝ',132),(324,'ΠΑΣΑΡΩΝΟΣ',132),(325,'ΑΝΑΤΟΛΗΣ',133),(326,'ΙΩΑΝΝΙΤΩΝ',133),(327,'ΜΠΙΖΑΝΙΟΥ',133),(328,'ΝΗΣΟΥ ΙΩΑΝΝΙΝΩΝ',133),(329,'ΠΑΜΒΩΤΙΔΟΣ',133),(330,'ΠΕΡΑΜΑΤΟΣ',133),(331,'ΑΕΤΟΜΗΛΙΤΣΗΣ',134),(332,'ΔΙΣΤΡΑΤΟΥ',134),(333,'ΚΟΝΙΤΣΑΣ',134),(334,'ΜΑΣΤΟΡΟΧΩΡΙΩΝ',134),(335,'ΦΟΥΡΚΑΣ',134),(336,'ΕΓΝΑΤΙΑΣ',135),(337,'ΜΕΤΣΟΒΟΥ',135),(338,'ΜΗΛΕΑΣ',135),(339,'ΑΝΩ ΚΑΛΑΜΑ',136),(340,'ΑΝΩ ΠΩΓΩΝΙΟΥ',136),(341,'ΔΕΛΒΙΝΑΚΙΟΥ',136),(342,'ΚΑΛΠΑΚΙΟΥ',136),(343,'ΛΑΒΔΑΝΗΣ',136),(344,'ΠΩΓΩΝΙΑΝΗΣ',136),(345,'ΑΝΩΓΕΙΟΥ',137),(346,'ΘΕΣΠΡΩΤΙΚΟΥ',137),(347,'ΚΡΑΝΕΑΣ',137),(348,'ΦΙΛΙΠΠΙΑΔΟΣ',137),(349,'ΠΑΡΓΑΣ',138),(350,'ΦΑΝΑΡΙΟΥ',138),(351,'ΖΑΛΟΓΓΟΥ',139),(352,'ΛΟΥΡΟΥ',139),(353,'ΠΡΕΒΕΖΗΣ',139),(354,'ΑΝΑΤΟΛΙΚΗΣ ΑΡΓΙΘΕΑΣ',140),(355,'ΑΡΓΙΘΕΑΣ',140),(356,'ΑΧΕΛΩΟΥ',140),(357,'ΙΤΑΜΟΥ',141),(358,'ΚΑΛΛΙΦΩΝΙΟΥ',141),(359,'ΚΑΜΠΟΥ',141),(360,'ΚΑΡΔΙΤΣΑΣ',141),(361,'ΜΗΤΡΟΠΟΛΗΣ',141),(362,'ΝΕΒΡΟΠΟΛΗΣ ΑΓΡΑΦΩΝ',142),(363,'ΠΛΑΣΤΗΡΑ',142),(364,'ΙΘΩΜΗΣ',143),(365,'ΜΟΥΖΑΚΙΟΥ',143),(366,'ΠΑΜΙΣΟΥ',143),(367,'ΠΑΛΑΜΑ',144),(368,'ΣΕΛΛΑΝΩΝ',144),(369,'ΦΥΛΛΟΥ',144),(370,'ΑΡΝΗΣ',145),(371,'ΜΕΝΕΛΑΪΔΑΣ',145),(372,'ΡΕΝΤΙΝΗΣ',145),(373,'ΣΟΦΑΔΩΝ',145),(374,'ΤΑΜΑΣΙΟΥ',145),(375,'ΑΓΙΑΣ',146),(376,'ΕΥΡΥΜΕΝΩΝ',146),(377,'ΛΑΚΕΡΕΙΑΣ',146),(378,'ΜΕΛΙΒΟΙΑΣ',146),(379,'ΑΝΤΙΧΑΣΙΩΝ',147),(380,'ΒΕΡΔΙΚΟΥΣΗΣ',147),(381,'ΕΛΑΣΣΟΝΑΣ',147),(382,'ΚΑΡΥΑΣ',147),(383,'ΛΙΒΑΔΙΟΥ',147),(384,'ΟΛΥΜΠΟΥ',147),(385,'ΠΟΤΑΜΙΑΣ',147),(386,'ΣΑΡΑΝΤΑΠΟΡΟΥ',147),(387,'ΤΣΑΡΙΤΣΑΝΗΣ',147),(388,'ΑΡΜΕΝΙΟΥ',148),(389,'ΚΙΛΕΛΕΡ',148),(390,'ΚΡΑΝΝΩΝΟΣ',148),(391,'ΝΙΚΑΙΑΣ',148),(392,'ΠΛΑΤΥΚΑΜΠΟΥ',148),(393,'ΓΙΑΝΝΟΥΛΗΣ',149),(394,'ΚΟΙΛΑΔΑΣ',149),(395,'ΛΑΡΙΣΑΙΩΝ',149),(396,'ΑΜΠΕΛΑΚΙΩΝ',150),(397,'ΓΟΝΝΩΝ',150),(398,'ΚΑΤΩ ΟΛΥΜΠΟΥ',150),(399,'ΜΑΚΡΥΧΩΡΙΟΥ',150),(400,'ΝΕΣΣΩΝΟΣ',150),(401,'ΑΜΠΕΛΩΝΟΣ',151),(402,'ΤΥΡΝΑΒΟΥ',151),(403,'ΕΝΙΠΠΕΑ',152),(404,'ΝΑΡΘΑΚΙΟΥ',152),(405,'ΠΟΛΥΔΑΜΑΝΤΑ',152),(406,'ΦΑΡΣΑΛΩΝ',152),(407,'ΑΛΜΥΡΟΥ',153),(408,'ΑΝΑΒΡΑΣ',153),(409,'ΠΤΕΛΕΟΥ',153),(410,'ΣΟΥΡΠΗΣ',153),(411,'ΑΓΡΙΑΣ',154),(412,'ΑΙΣΩΝΙΑΣ',154),(413,'ΑΡΤΕΜΙΔΑΣ',154),(414,'ΒΟΛΟΥ',154),(415,'ΙΩΛΚΟΥ',154),(416,'ΜΑΚΡΙΝΙΤΣΗΣ',154),(417,'ΝΕΑΣ ΑΓΧΙΑΛΟΥ',154),(418,'ΝΕΑΣ ΙΩΝΙΑΣ',154),(419,'ΠΟΡΤΑΡΙΑΣ',154),(420,'ΖΑΓΟΡΑΣ',155),(421,'ΜΟΥΡΕΣΙΟΥ',155),(422,'ΑΡΓΑΛΑΣΤΗΣ',156),(423,'ΑΦΕΤΩΝ',156),(424,'ΜΗΛΕΩΝ',156),(425,'ΣΗΠΙΑΔΟΣ',156),(426,'ΤΡΙΚΕΡΙΟΥ',156),(427,'ΚΑΡΛΑΣ',157),(428,'ΚΕΡΑΜΙΔΙΟΥ',157),(429,'ΦΕΡΩΝ',157),(430,'ΑΛΟΝΝΗΣΟΥ',158),(431,'ΣΚΙΑΘΟΥ',159),(432,'ΣΚΟΠΕΛΟΥ',160),(433,'ΑΣΠΡΟΠΟΤΑΜΟΥ',161),(434,'ΒΑΣΙΛΙΚΗΣ',161),(435,'ΚΑΛΑΜΠΑΚΑΣ',161),(436,'ΚΑΣΤΑΝΙΑΣ',161),(437,'ΚΛΕΙΝΟΒΟΥ',161),(438,'ΜΑΛΑΚΑΣΙΟΥ',161),(439,'ΤΥΜΦΑΙΩΝ',161),(440,'ΧΑΣΙΩΝ',161),(441,'ΑΙΘΗΚΩΝ',162),(442,'ΓΟΜΦΩΝ',162),(443,'ΜΥΡΟΦΥΛΛΟΥ',162),(444,'ΝΕΡΑΙΔΑΣ',162),(445,'ΠΙΑΛΕΙΩΝ',162),(446,'ΠΙΝΔΕΩΝ',162),(447,'ΠΥΛΗΣ',162),(448,'ΕΣΤΙΑΙΩΤΙΔΑΣ',163),(449,'ΚΑΛΛΙΔΕΝΔΡΟΥ',163),(450,'ΚΟΖΙΑΚΑ',163),(451,'ΜΕΓΑΛΩΝ ΚΑΛΥΒΙΩΝ',163),(452,'ΠΑΛΗΟΚΑΣΤΡΟΥ',163),(453,'ΠΑΡΑΛΗΘΑΙΩΝ',163),(454,'ΤΡΙΚΚΑΙΩΝ',163),(455,'ΦΑΛΩΡΕΙΑΣ',163),(456,'ΟΙΧΑΛΙΑΣ',164),(457,'ΠΕΛΙΝΝΑΙΩΝ',164),(458,'ΦΑΡΚΑΔΟΝΑΣ',164),(459,'ΑΛΙΑΡΤΟΥ',165),(460,'ΘΕΣΠΙΕΩΝ',165),(461,'ΑΝΤΙΚΥΡΑΣ',166),(462,'ΑΡΑΧΟΒΗΣ',166),(463,'ΔΙΣΤΟΜΟΥ',166),(464,'ΒΑΓΙΩΝ',167),(465,'ΘΗΒΑΙΩΝ',167),(466,'ΘΙΣΒΗΣ',167),(467,'ΠΛΑΤΑΙΩΝ',167),(468,'ΔΑΥΛΕΙΑΣ',168),(469,'ΚΟΡΩΝΕΙΑΣ',168),(470,'ΚΥΡΙΑΚΙΟΥ',168),(471,'ΛΕΒΑΔΕΩΝ',168),(472,'ΧΑΙΡΩΝΕΙΑΣ',168),(473,'ΑΚΡΑΙΦΝΙΑΣ',169),(474,'ΟΡΧΟΜΕΝΟΥ',169),(475,'ΔΕΡΒΕΝΟΧΩΡΙΩΝ',170),(476,'ΟΙΝΟΦΥΤΩΝ',170),(477,'ΣΧΗΜΑΤΑΡΙΟΥ',170),(478,'ΤΑΝΑΓΡΑΣ',170),(479,'ΔΙΡΦΥΩΝ',171),(480,'ΜΕΣΣΑΠΙΩΝ',171),(481,'ΑΜΑΡΥΝΘΙΩΝ',172),(482,'ΕΡΕΤΡΙΑΣ',172),(483,'ΑΙΔΗΨΟΥ',173),(484,'ΑΡΤΕΜΙΣΙΟΥ',173),(485,'ΙΣΤΙΑΙΑΣ',173),(486,'ΛΙΧΑΔΟΣ',173),(487,'ΩΡΕΩΝ',173),(488,'ΚΑΡΥΣΤΟΥ',174),(489,'ΚΑΦΗΡΕΩΣ',174),(490,'ΜΑΡΜΑΡΙΟΥ',174),(491,'ΣΤΥΡΕΩΝ',174),(492,'ΑΥΛΩΝΟΣ',175),(493,'ΔΥΣΤΙΩΝ',175),(494,'ΚΟΝΙΣΤΡΩΝ',175),(495,'ΚΥΜΗΣ',175),(496,'ΤΑΜΥΝΕΩΝ',175),(497,'ΕΛΥΜΝΙΩΝ',176),(498,'ΚΗΡΕΩΣ',176),(499,'ΝΗΛΕΩΣ',176),(500,'ΣΚΥΡΟΥ',177),(501,'ΑΝΘΗΔΩΝΟΣ',178),(502,'ΑΥΛΙΔΟΣ',178),(503,'ΛΗΛΑΝΤΙΩΝ',178),(504,'ΝΕΑΣ ΑΡΤΑΚΗΣ',178),(505,'ΧΑΛΚΙΔΕΩΝ',178),(506,'ΑΓΡΑΦΩΝ',179),(507,'ΑΠΕΡΑΝΤΙΩΝ',179),(508,'ΑΣΠΡΟΠΟΤΑΜΟΥ',179),(509,'ΒΙΝΙΑΝΗΣ',179),(510,'ΦΡΑΓΚΙΣΤΑΣ',179),(511,'ΔΟΜΝΙΣΤΑΣ',180),(512,'ΚΑΡΠΕΝΗΣΙΟΥ',180),(513,'ΚΤΗΜΕΝΙΩΝ',180),(514,'ΠΟΤΑΜΙΑΣ',180),(515,'ΠΡΟΥΣΣΟΥ',180),(516,'ΦΟΥΡΝΑ',180),(517,'ΑΜΦΙΚΛΕΙΑΣ',181),(518,'ΕΛΑΤΕΙΑΣ',181),(519,'ΤΙΘΟΡΕΑΣ',181),(520,'ΔΟΜΟΚΟΥ',182),(521,'ΘΕΣΣΑΛΙΩΤΙΔΟΣ',182),(522,'ΞΥΝΙΑΔΟΣ',182),(523,'ΓΟΡΓΟΠΟΤΑΜΟΥ',183),(524,'ΛΑΜΙΕΩΝ',183),(525,'ΛΕΙΑΝΟΚΛΑΔΙΟΥ',183),(526,'ΠΑΥΛΙΑΝΗΣ',183),(527,'ΥΠΑΤΗΣ',183),(528,'ΑΤΑΛΑΝΤΗΣ',184),(529,'ΔΑΦΝΟΥΣΙΩΝ',184),(530,'ΜΑΛΕΣΙΝΗΣ',184),(531,'ΟΠΟΥΝΤΙΩΝ',184),(532,'ΑΓΙΟΥ ΓΕΩΡΓΙΟΥ ΤΥΜΦΡΗΣΤΟΥ',185),(533,'ΜΑΚΡΑΚΩΜΗΣ',185),(534,'ΣΠΕΡΧΕΙΑΔΟΣ',185),(535,'ΤΥΜΦΡΗΣΤΟΥ',185),(536,'ΑΓΙΟΥ ΚΩΝΣΤΑΝΤΙΝΟΥ',186),(537,'ΚΑΜΕΝΩΝ ΒΟΥΡΛΩΝ',186),(538,'ΜΩΛΟΥ',186),(539,'ΕΧΙΝΑΙΩΝ',187),(540,'ΠΕΛΑΣΓΙΑΣ',187),(541,'ΣΤΥΛΙΔΟΣ',187),(542,'ΑΜΦΙΣΣΗΣ',188),(543,'ΓΑΛΑΞΙΔΙΟΥ',188),(544,'ΓΡΑΒΙΑΣ',188),(545,'ΔΕΛΦΩΝ',188),(546,'ΔΕΣΦΙΝΑΣ',188),(547,'ΙΤΕΑΣ',188),(548,'ΚΑΛΛΙΕΩΝ',188),(549,'ΠΑΡΝΑΣΣΟΥ',188),(550,'ΒΑΡΔΟΥΣΙΩΝ',189),(551,'ΕΥΠΑΛΙΟΥ',189),(552,'ΛΙΔΩΡΙΚΙΟΥ',189),(553,'ΤΟΛΟΦΩΝΟΣ',189),(554,'ΑΡΧΑΝΩΝ',190),(555,'ΑΣΤΕΡΟΥΣΙΩΝ',190),(556,'ΝΙΚΟΥ ΚΑΖΑΝΤΖΑΚΗ',190),(557,'ΒΙΑΝΝΟΥ',191),(558,'ΑΓΙΑΣ ΒΑΡΒΑΡΑΣ',192),(559,'ΓΟΡΤΥΝΑΣ',192),(560,'ΚΟΦΙΝΑ',192),(561,'ΡΟΥΒΑ',192),(562,'ΓΟΡΓΟΛΑΪΝΗ',193),(563,'ΗΡΑΚΛΕΙΟΥ',193),(564,'ΝΕΑΣ ΑΛΙΚΑΡΝΑΣΣΟΥ',193),(565,'ΠΑΛΙΑΝΗΣ',193),(566,'ΤΕΜΕΝΟΥΣ',193),(567,'ΓΑΖΙΟΥ',194),(568,'ΚΡΟΥΣΩΝΑ',194),(569,'ΤΥΛΙΣΟΥ',194),(570,'ΑΡΚΑΛΟΧΩΡΙΟΥ',195),(571,'ΘΡΑΨΑΝΟΥ',195),(572,'ΚΑΣΤΕΛΛΙΟΥ',195),(573,'ΖΑΡΟΥ',196),(574,'ΜΟΙΡΩΝ',196),(575,'ΤΥΜΠΑΚΙΟΥ',196),(576,'ΓΟΥΒΩΝ',197),(577,'ΕΠΙΣΚΟΠΗΣ',197),(578,'ΜΑΛΛΙΩΝ',197),(579,'ΧΕΡΣΟΝΗΣΟΥ',197),(580,'ΑΓΙΟΥ ΝΙΚΟΛΑΟΥ',198),(581,'ΒΡΑΧΑΣΙΟΥ',198),(582,'ΝΕΑΠΟΛΗΣ',198),(583,'ΙΕΡΑΠΕΤΡΑΣ',199),(584,'ΜΑΚΡΥ ΓΙΑΛΟΥ',199),(585,'ΟΡΟΠΕΔΙΟΥ ΛΑΣΙΘΙΟΥ',200),(586,'ΙΤΑΝΟΥ',201),(587,'ΛΕΥΚΗΣ',201),(588,'ΣΗΤΕΙΑΣ',201),(589,'ΛΑΜΠΗΣ',202),(590,'ΦΟΙΝΙΚΑ',202),(591,'ΚΟΥΡΗΤΩΝ',203),(592,'ΣΥΒΡΙΤΟΥ',203),(593,'ΑΝΩΓΕΙΩΝ',204),(594,'ΓΕΡΟΠΟΤΑΜΟΥ',205),(595,'ΖΩΝΙΑΝΩΝ',205),(596,'ΚΟΥΛΟΥΚΩΝΑ',205),(597,'ΑΡΚΑΔΙΟΥ',206),(598,'ΛΑΠΠΑΙΩΝ',206),(599,'ΝΙΚΗΦΟΡΟΥ ΦΩΚΑ',206),(600,'ΡΕΘΥΜΝΗΣ',206),(601,'ΑΡΜΕΝΩΝ',207),(602,'ΑΣΗ ΓΩΝΙΑΣ',207),(603,'ΒΑΜΟΥ',207),(604,'ΓΕΩΡΓΙΟΥΠΟΛΕΩΣ',207),(605,'ΚΡΥΟΝΕΡΙΔΑΣ',207),(606,'ΦΡΕ',207),(607,'ΓΑΥΔΟΥ',208),(608,'ΑΝΑΤΟΛΙΚΟΥ ΣΕΛΙΝΟΥ',209),(609,'ΚΑΝΤΑΝΟΥ',209),(610,'ΠΕΛΕΚΑΝΟΥ',209),(611,'ΙΝΑΧΩΡΙΟΥ',210),(612,'ΚΙΣΣΑΜΟΥ',210),(613,'ΜΥΘΗΜΝΗΣ',210),(614,'ΒΟΥΚΟΛΙΩΝ',211),(615,'ΚΟΛΥΜΒΑΡΙΟΥ',211),(616,'ΜΟΥΣΟΥΡΩΝ',211),(617,'ΠΛΑΤΑΝΙΑ',211),(618,'ΣΦΑΚΙΩΝ',212),(619,'ΑΚΡΩΤΗΡΙΟΥ',213),(620,'ΕΛΕΥΘΕΡΙΟΥ ΒΕΝΙΖΕΛΟΥ',213),(621,'ΘΕΡΙΣΟΥ',213),(622,'ΚΕΡΑΜΙΩΝ',213),(623,'ΝΕΑΣ ΚΥΔΩΝΙΑΣ',213),(624,'ΣΟΥΔΑΣ',213),(625,'ΧΑΝΙΩΝ',213),(626,'ΔΟΞΑΤΟΥ',214),(627,'ΚΑΛΑΜΠΑΚΙΟΥ',214),(628,'ΔΡΑΜΑΣ',215),(629,'ΣΙΔΗΡΟΝΕΡΟΥ',215),(630,'ΚΑΤΩ ΝΕΥΡΟΚΟΠΙΟΥ',216),(631,'ΝΙΚΗΦΟΡΟΥ',217),(632,'ΠΑΡΑΝΕΣΤΙΟΥ',217),(633,'ΠΡΟΣΟΤΣΑΝΗΣ',218),(634,'ΣΙΤΑΓΡΩΝ',218),(635,'ΑΛΕΞΑΝΔΡΟΥΠΟΛΗΣ',219),(636,'ΤΡΑΪΑΝΟΥΠΟΛΗΣ',219),(637,'ΦΕΡΩΝ',219),(638,'ΔΙΔΥΜΟΤΕΙΧΟΥ',220),(639,'ΜΕΤΑΞΑΔΩΝ',220),(640,'ΒΥΣΣΑΣ',221),(641,'ΚΥΠΡΙΝΟΥ',221),(642,'ΟΡΕΣΤΙΑΔΟΣ',221),(643,'ΤΡΙΓΩΝΟΥ',221),(644,'ΣΑΜΟΘΡΑΚΗΣ',222),(645,'ΟΡΦΕΑ',223),(646,'ΣΟΥΦΛΙΟΥ',223),(647,'ΤΥΧΕΡΟΥ',223),(648,'ΘΑΣΟΥ',224),(649,'ΚΑΒΑΛΑΣ',225),(650,'ΦΙΛΙΠΠΩΝ',225),(651,'ΚΕΡΑΜΩΤΗΣ',226),(652,'ΟΡΕΙΝΟΥ',226),(653,'ΧΡΥΣΟΥΠΟΛΗΣ',226),(654,'ΕΛΕΥΘΕΡΟΥΠΟΛΗΣ',227),(655,'ΕΛΕΥΘΕΡΩΝ',227),(656,'ΟΡΦΑΝΟΥ',227),(657,'ΠΑΓΓΑΙΟΥ',227),(658,'ΠΙΕΡΕΩΝ',227),(659,'ΑΒΔΗΡΩΝ',228),(660,'ΒΙΣΤΩΝΙΔΟΣ',228),(661,'ΣΕΛΕΡΟΥ',228),(662,'ΘΕΡΜΩΝ',229),(663,'ΚΟΤΥΛΗΣ',229),(664,'ΜΥΚΗΣ',229),(665,'ΣΑΤΡΩΝ',229),(666,'ΞΑΝΘΗΣ',230),(667,'ΣΤΑΥΡΟΥΠΟΛΗΣ',230),(668,'ΤΟΠΕΙΡΟΥ',231),(669,'ΑΡΡΙΑΝΩΝ',232),(670,'ΚΕΧΡΟΥ',232),(671,'ΟΡΓΑΝΗΣ',232),(672,'ΦΙΛΛΥΡΑΣ',232),(673,'ΑΜΑΞΑΔΩΝ',233),(674,'ΙΑΣΜΟΥ',233),(675,'ΣΩΣΤΟΥ',233),(676,'ΑΙΓΕΙΡΟΥ',234),(677,'ΚΟΜΟΤΗΝΗΣ',234),(678,'ΝΕΟΥ ΣΙΔΗΡΟΧΩΡΙΟΥ',234),(679,'ΜΑΡΩΝΕΙΑΣ',235),(680,'ΣΑΠΩΝ',235),(681,'ΑΛΕΞΑΝΔΡΕΙΑΣ',236),(682,'ΑΝΤΙΓΟΝΙΔΩΝ',236),(683,'ΜΕΛΙΚΗΣ',236),(684,'ΠΛΑΤΕΟΣ',236),(685,'ΑΠΟΣΤΟΛΟΥ ΠΑΥΛΟΥ',237),(686,'ΒΕΡΓΙΝΑΣ',237),(687,'ΒΕΡΟΙΑΣ',237),(688,'ΔΟΒΡΑ',237),(689,'ΜΑΚΕΔΟΝΙΔΟΣ',237),(690,'ΑΝΘΕΜΙΩΝ',238),(691,'ΕΙΡΗΝΟΥΠΟΛΗΣ',238),(692,'ΝΑΟΥΣΑΣ',238),(693,'ΑΜΠΕΛΟΚΗΠΩΝ',239),(694,'ΜΕΝΕΜΕΝΗΣ',239),(695,'ΑΓΙΟΥ ΓΕΩΡΓΙΟΥ',240),(696,'ΑΠΟΛΛΩΝΙΑΣ',240),(697,'ΑΡΕΘΟΥΣΑΣ',240),(698,'ΕΓΝΑΤΙΑΣ',240),(699,'ΜΑΔΥΤΟΥ',240),(700,'ΡΕΝΤΙΝΑΣ',240),(701,'ΑΞΙΟΥ',241),(702,'ΕΧΕΔΩΡΟΥ',241),(703,'ΧΑΛΑΣΤΡΑΣ',241),(704,'ΕΠΑΝΟΜΗΣ',242),(705,'ΘΕΡΜΑΪΚΟΥ',242),(706,'ΜΗΧΑΝΙΩΝΑΣ',242),(707,'ΒΑΣΙΛΙΚΩΝ',243),(708,'ΘΕΡΜΗΣ',243),(709,'ΜΙΚΡΑΣ',243),(710,'ΘΕΣΣΑΛΟΝΙΚΗΣ',244),(711,'ΤΡΙΑΝΔΡΙΑΣ',244),(712,'ΚΑΛΑΜΑΡΙΑΣ',245),(713,'ΕΛΕΥΘΕΡΙΟΥ-ΚΟΡΔΕΛΙΟΥ',246),(714,'ΕΥΟΣΜΟΥ',246),(715,'ΑΣΣΗΡΟΥ',247),(716,'ΒΕΡΤΙΣΚΟΥ',247),(717,'ΚΑΛΙΝΔΟΙΩΝ',247),(718,'ΚΟΡΩΝΕΙΑΣ',247),(719,'ΛΑΓΚΑΔΑ',247),(720,'ΛΑΧΑΝΑ',247),(721,'ΣΟΧΟΥ',247),(722,'ΑΓΙΟΥ ΠΑΥΛΟΥ',248),(723,'ΝΕΑΠΟΛΕΩΣ',248),(724,'ΠΕΥΚΩΝ',248),(725,'ΣΥΚΕΩΝ',248),(726,'ΕΥΚΑΡΠΙΑΣ',249),(727,'ΠΟΛΙΧΝΗΣ',249),(728,'ΣΤΑΥΡΟΥΠΟΛΕΩΣ',249),(729,'ΠΑΝΟΡΑΜΑΤΟΣ',250),(730,'ΠΥΛΑΙΑΣ',250),(731,'ΧΟΡΤΙΑΤΗ',250),(732,'ΑΓΙΟΥ ΑΘΑΝΑΣΙΟΥ',251),(733,'ΚΟΥΦΑΛΙΩΝ',251),(734,'ΧΑΛΚΗΔΟΝΟΣ',251),(735,'ΚΑΛΛΙΘΕΑΣ',252),(736,'ΜΥΓΔΟΝΙΑΣ',252),(737,'ΩΡΑΙΟΚΑΣΤΡΟΥ',252),(738,'ΓΑΛΛΙΚΟΥ',253),(739,'ΔΟΪΡΑΝΗΣ',253),(740,'ΚΙΛΚΙΣ',253),(741,'ΚΡΟΥΣΣΩΝ',253),(742,'ΜΟΥΡΙΩΝ',253),(743,'ΠΙΚΡΟΛΙΜΝΗΣ',253),(744,'ΧΕΡΣΟΥ',253),(745,'ΑΞΙΟΥΠΟΛΗΣ',254),(746,'ΓΟΥΜΕΝΙΣΣΑΣ',254),(747,'ΕΥΡΩΠΟΥ',254),(748,'ΛΙΒΑΔΙΩΝ',254),(749,'ΠΟΛΥΚΑΣΤΡΟΥ',254),(750,'ΑΡΙΔΑΙΑΣ',255),(751,'ΕΞΑΠΛΑΤΑΝΟΥ',255),(752,'ΒΕΓΟΡΙΤΙΔΑΣ',256),(753,'ΕΔΕΣΣΑΣ',256),(754,'ΓΙΑΝΝΙΤΣΩΝ',257),(755,'ΚΡΥΑΣ ΒΡΥΣΗΣ',257),(756,'ΚΥΡΡΟΥ',257),(757,'ΜΕΓΑΛΟΥ ΑΛΕΞΑΝΔΡΟΥ',257),(758,'ΠΕΛΛΑΣ',257),(759,'ΜΕΝΗΙΔΟΣ',258),(760,'ΣΚΥΔΡΑΣ',258),(761,'ΑΝΑΤΟΛΙΚΟΥ ΟΛΥΜΠΟΥ',259),(762,'ΔΙΟΥ',259),(763,'ΛΙΤΟΧΩΡΟΥ',259),(764,'ΕΛΑΦΙΝΑΣ',260),(765,'ΚΑΤΕΡΙΝΗΣ',260),(766,'ΚΟΡΙΝΟΥ',260),(767,'ΠΑΡΑΛΙΑΣ',260),(768,'ΠΕΤΡΑΣ',260),(769,'ΠΙΕΡΙΩΝ',260),(770,'ΑΙΓΙΝΙΟΥ',261),(771,'ΚΟΛΙΝΔΡΟΥ',261),(772,'ΜΕΘΩΝΗΣ',261),(773,'ΠΥΔΝΑΣ',261),(774,'ΑΜΦΙΠΟΛΗΣ',262),(775,'ΚΟΡΜΙΣΤΑΣ',262),(776,'ΠΡΩΤΗΣ',262),(777,'ΡΟΔΟΛΙΒΟΥΣ',262),(778,'ΑΧΙΝΟΥ',263),(779,'ΒΙΣΑΛΤΙΑΣ',263),(780,'ΝΙΓΡΙΤΗΣ',263),(781,'ΤΡΑΓΙΛΟΥ',263),(782,'ΕΜΜΑΝΟΥΗΛ ΠΑΠΠΑ',264),(783,'ΣΤΡΥΜΩΝΑ',264),(784,'ΗΡΑΚΛΕΙΑΣ',265),(785,'ΣΚΟΤΟΥΣΣΗΣ',265),(786,'ΣΤΡΥΜΟΝΙΚΟΥ',265),(787,'ΑΛΙΣΤΡΑΤΗΣ',266),(788,'ΝΕΑΣ ΖΙΧΝΗΣ',266),(789,'ΑΝΩ ΒΡΟΝΤΟΥΣ',267),(790,'ΚΑΠΕΤΑΝ  ΜΗΤΡΟΥΣΙΟΥ',267),(791,'ΛΕΥΚΩΝΑ',267),(792,'ΟΡΕΙΝΗΣ',267),(793,'ΣΕΡΡΩΝ',267),(794,'ΣΚΟΥΤΑΡΕΩΣ',267),(795,'ΑΓΚΙΣΤΡΟΥ',268),(796,'ΑΧΛΑΔΟΧΩΡΙΟΥ',268),(797,'ΚΕΡΚΙΝΗΣ',268),(798,'ΠΕΤΡΙΤΣΙΟΥ',268),(799,'ΠΡΟΜΑΧΩΝΟΣ',268),(800,'ΣΙΔΗΡΟΚΑΣΤΡΟΥ',268),(801,'ΑΡΝΑΙΑΣ',269),(802,'ΠΑΝΑΓΙΑΣ',269),(803,'ΣΤΑΓΕΙΡΩΝ-ΑΚΑΝΘΟΥ',269),(804,'ΚΑΣΣΑΝΔΡΑΣ',270),(805,'ΠΑΛΛΗΝΗΣ',270),(806,'ΚΑΛΛΙΚΡΑΤΕΙΑΣ',271),(807,'ΜΟΥΔΑΝΙΩΝ',271),(808,'ΤΡΙΓΛΙΑΣ',271),(809,'ΑΝΘΕΜΟΥΝΤΑ',272),(810,'ΖΕΡΒΟΧΩΡΙΩΝ',272),(811,'ΟΡΜΥΛΙΑΣ',272),(812,'ΠΟΛΥΓΥΡΟΥ',272),(813,'ΣΙΘΩΝΙΑΣ',273),(814,'ΤΟΡΩΝΗΣ',273),(815,'ΑΓΓΕΛΟΚΑΣΤΡΟΥ',274),(816,'ΑΓΡΙΝΙΟΥ',274),(817,'ΑΡΑΚΥΝΘΟΥ',274),(818,'ΘΕΣΤΙΕΩΝ',274),(819,'ΜΑΚΡΥΝΕΙΑΣ',274),(820,'ΝΕΑΠΟΛΗΣ',274),(821,'ΠΑΝΑΙΤΩΛΙΚΟΥ',274),(822,'ΠΑΡΑΒΟΛΑΣ',274),(823,'ΠΑΡΑΚΑΜΠΥΛΙΩΝ',274),(824,'ΣΤΡΑΤΟΥ',274),(825,'ΑΝΑΚΤΟΡΙΟΥ',275),(826,'ΜΕΔΕΩΝΟΣ',275),(827,'ΠΑΛΑΙΡΟΥ',275),(828,'ΑΜΦΙΛΟΧΙΑΣ',276),(829,'ΙΝΑΧΟΥ',276),(830,'ΜΕΝΙΔΙΟΥ',276),(831,'ΘΕΡΜΟΥ',277),(832,'ΑΙΤΩΛΙΚΟΥ',278),(833,'ΙΕΡΑΣ ΠΟΛΗΣ ΜΕΣΟΛΟΓΓΙΟΥ',278),(834,'ΟΙΝΙΑΔΩΝ',278),(835,'ΑΝΤΙΡΡΙΟΥ',279),(836,'ΑΠΟΔΟΤΙΑΣ',279),(837,'ΝΑΥΠΑΚΤΟΥ',279),(838,'ΠΛΑΤΑΝΟΥ',279),(839,'ΠΥΛΛΗΝΗΣ',279),(840,'ΧΑΛΚΕΙΑΣ',279),(841,'ΑΛΥΖΙΑΣ',280),(842,'ΑΣΤΑΚΟΥ',280),(843,'ΦΥΤΕΙΩΝ',280),(844,'ΑΙΓΕΙΡΑΣ',281),(845,'ΑΙΓΙΟΥ',281),(846,'ΑΚΡΑΤΑΣ',281),(847,'ΔΙΑΚΟΠΤΟΥ',281),(848,'ΕΡΙΝΕΟΥ',281),(849,'ΣΥΜΠΟΛΙΤΕΙΑΣ',281),(850,'ΔΥΜΗΣ',282),(851,'ΛΑΡΙΣΣΟΥ',282),(852,'ΜΟΒΡΗΣ',282),(853,'ΩΛΕΝΙΑΣ',282),(854,'ΚΑΛΕΝΤΖΙΟΥ',283),(855,'ΛΕΟΝΤΙΟΥ',283),(856,'ΤΡΙΤΑΙΑΣ',283),(857,'ΦΑΡΡΩΝ',283),(858,'ΑΡΟΑΝΙΑΣ',284),(859,'ΚΑΛΑΒΡΥΤΩΝ',284),(860,'ΚΛΕΙΤΟΡΙΑΣ',284),(861,'ΠΑΪΩΝ',284),(862,'ΒΡΑΧΝΑΙΙΚΩΝ',285),(863,'ΜΕΣΣΑΤΙΔΟΣ',285),(864,'ΠΑΡΑΛΙΑΣ',285),(865,'ΠΑΤΡΕΩΝ',285),(866,'ΡΙΟΥ',285),(867,'ΑΝΔΡΑΒΙΔΑΣ',286),(868,'ΒΟΥΠΡΑΣΙΑΣ',286),(869,'ΚΑΣΤΡΟΥ - ΚΥΛΛΗΝΗΣ',286),(870,'ΛΕΧΑΙΝΩΝ',286),(871,'ΑΛΙΦΕΙΡΑΣ',287),(872,'ΑΝΔΡΙΤΣΑΙΝΗΣ',287),(873,'ΣΚΙΛΛΟΥΝΤΟΣ',287),(874,'ΑΡΧΑΙΑΣ ΟΛΥΜΠΙΑΣ',288),(875,'ΛΑΜΠΕΙΑΣ',288),(876,'ΛΑΣΙΩΝΟΣ',288),(877,'ΦΟΛΟΗΣ',288),(878,'ΖΑΧΑΡΩΣ',289),(879,'ΦΙΓΑΛΕΙΑΣ',289),(880,'ΑΜΑΛΙΑΔΟΣ',290),(881,'ΠΗΝΕΙΑΣ',290),(882,'ΒΑΡΘΟΛΟΜΙΟΥ',291),(883,'ΓΑΣΤΟΥΝΗΣ',291),(884,'ΤΡΑΓΑΝΟΥ',291),(885,'ΒΩΛΑΚΟΣ',292),(886,'ΙΑΡΔΑΝΟΥ',292),(887,'ΠΥΡΓΟΥ',292),(888,'ΩΛΕΝΗΣ',292),(889,'ΑΛΥΚΩΝ',293),(890,'ΑΡΚΑΔΙΩΝ',293),(891,'ΑΡΤΕΜΙΣΙΩΝ',293),(892,'ΕΛΑΤΙΩΝ',293),(893,'ΖΑΚΥΝΘΙΩΝ',293),(894,'ΛΑΓΑΝΑ',293),(895,'ΙΘΑΚΗΣ',294),(896,'ΑΓΙΟΥ ΓΕΩΡΓΙΟΥ',295),(897,'ΑΧΙΛΛΕΙΩΝ',295),(898,'ΕΡΕΙΚΟΥΣΣΗΣ',295),(899,'ΕΣΠΕΡΙΩΝ',295),(900,'ΘΙΝΑΛΙΟΥ',295),(901,'ΚΑΣΣΩΠΑΙΩΝ',295),(902,'ΚΕΡΚΥΡΑΙΩΝ',295),(903,'ΚΟΡΙΣΣΙΩΝ',295),(904,'ΛΕΥΚΙΜΜΑΙΩΝ',295),(905,'ΜΑΘΡΑΚΙΟΥ',295),(906,'ΜΕΛΙΤΕΙΕΩΝ',295),(907,'ΟΘΩΝΩΝ',295),(908,'ΠΑΛΑΙΟΚΑΣΤΡΙΤΩΝ',295),(909,'ΠΑΡΕΛΙΩΝ',295),(910,'ΦΑΙΑΚΩΝ',295),(911,'ΠΑΞΩΝ',296),(912,'ΑΡΓΟΣΤΟΛΙΟΥ',297),(913,'ΕΛΕΙΟΥ - ΠΡΟΝΩΝ',297),(914,'ΕΡΙΣΟΥ',297),(915,'ΛΕΙΒΑΘΟΥΣ',297),(916,'ΟΜΑΛΩΝ',297),(917,'ΠΑΛΙΚΗΣ',297),(918,'ΠΥΛΑΡΕΩΝ',297),(919,'ΣΑΜΗΣ',297),(920,'ΑΠΟΛΛΩΝΙΩΝ',298),(921,'ΕΛΛΟΜΕΝΟΥ',298),(922,'ΚΑΛΑΜΟΥ',298),(923,'ΚΑΡΥΑΣ',298),(924,'ΚΑΣΤΟΥ',298),(925,'ΛΕΥΚΑΔΟΣ',298),(926,'ΣΦΑΚΙΩΤΩΝ',298),(927,'ΜΕΓΑΝΗΣΙΟΥ',299),(928,'ΑΛΕΑΣ',300),(929,'ΑΡΓΟΥΣ',300),(930,'ΑΧΛΑΔΟΚΑΜΠΟΥ',300),(931,'ΚΟΥΤΣΟΠΟΔΙΟΥ',300),(932,'ΛΕΡΝΑΣ',300),(933,'ΛΥΡΚΕΙΑΣ',300),(934,'ΜΥΚΗΝΑΙΩΝ',300),(935,'ΝΕΑΣ ΚΙΟΥ',300),(936,'ΑΣΚΛΗΠΙΕΙΟΥ',301),(937,'ΕΠΙΔΑΥΡΟΥ',301),(938,'ΕΡΜΙΟΝΗΣ',302),(939,'ΚΡΑΝΙΔΙΟΥ',302),(940,'ΑΣΙΝΗΣ',303),(941,'ΜΙΔΕΑΣ',303),(942,'ΝΑΥΠΛΙΟΥ',303),(943,'ΝΕΑΣ ΤΙΡΥΝΘΑΣ',303),(944,'ΒΟΡΕΙΑΣ ΚΥΝΟΥΡΙΑΣ',304),(945,'ΒΥΤΙΝΑΣ',305),(946,'ΔΗΜΗΤΣΑΝΗΣ',305),(947,'ΗΡΑΙΑΣ',305),(948,'ΚΛΕΙΤΟΡΟΣ',305),(949,'ΚΟΝΤΟΒΑΖΑΙΝΗΣ',305),(950,'ΛΑΓΚΑΔΙΩΝ',305),(951,'ΤΡΙΚΟΛΩΝΩΝ',305),(952,'ΤΡΟΠΑΙΩΝ',305),(953,'ΓΟΡΤΥΝΟΣ',306),(954,'ΜΕΓΑΛΟΠΟΛΗΣ',306),(955,'ΦΑΛΑΙΣΙΑΣ',306),(956,'ΚΟΣΜΑ',307),(957,'ΛΕΩΝΙΔΙΟΥ',307),(958,'ΤΥΡΟΥ',307),(959,'ΒΑΛΤΕΤΣΙΟΥ',308),(960,'ΚΟΡΥΘΙΟΥ',308),(961,'ΛΕΒΙΔΙΟΥ',308),(962,'ΜΑΝΤΙΝΕΙΑΣ',308),(963,'ΣΚΙΡΙΤΙΔΑΣ',308),(964,'ΤΕΓΕΑΣ',308),(965,'ΤΡΙΠΟΛΗΣ',308),(966,'ΦΑΛΑΝΘΟΥ',308),(967,'ΒΕΛΟΥ',309),(968,'ΒΟΧΑΣ',309),(969,'ΑΣΣΟΥ-ΛΕΧΑΙΟΥ',310),(970,'ΚΟΡΙΝΘΙΩΝ',310),(971,'ΣΑΡΩΝΙΚΟΥ',310),(972,'ΣΟΛΥΓΕΙΑΣ',310),(973,'ΤΕΝΕΑΣ',310),(974,'ΑΓΙΩΝ ΘΕΟΔΩΡΩΝ',311),(975,'ΛΟΥΤΡΑΚΙΟΥ-ΠΕΡΑΧΩΡΑΣ',311),(976,'ΝΕΜΕΑΣ',312),(977,'ΕΥΡΩΣΤΙΝΗΣ',313),(978,'ΞΥΛΟΚΑΣΤΡΟΥ',313),(979,'ΣΙΚΥΩΝΙΩΝ',314),(980,'ΣΤΥΜΦΑΛΙΑΣ',314),(981,'ΦΕΝΕΟΥ',314),(982,'ΑΝΑΤΟΛΙΚΗΣ ΜΑΝΗΣ',315),(983,'ΓΥΘΕΙΟΥ',315),(984,'ΟΙΤΥΛΟΥ',315),(985,'ΣΜΥΝΟΥΣ',315),(986,'ΕΛΑΦΟΝΗΣΟΥ',316),(987,'ΓΕΡΟΝΘΡΩΝ',317),(988,'ΕΛΟΥΣ',317),(989,'ΚΡΟΚΕΩΝ',317),(990,'ΝΙΑΤΩΝ',317),(991,'ΣΚΑΛΑΣ',317),(992,'ΑΣΩΠΟΥ',318),(993,'ΒΟΙΩΝ',318),(994,'ΖΑΡΑΚΑ',318),(995,'ΜΟΛΑΩΝ',318),(996,'ΜΟΝΕΜΒΑΣΙΑΣ',318),(997,'ΘΕΡΑΠΝΩΝ',319),(998,'ΚΑΡΥΩΝ',319),(999,'ΜΥΣΤΡΑ',319),(1000,'ΟΙΝΟΥΝΤΟΣ',319),(1001,'ΠΕΛΛΑΝΑΣ',319),(1002,'ΣΠΑΡΤΙΑΤΩΝ',319),(1003,'ΦΑΡΙΔΟΣ',319),(1004,'ΑΒΙΑΣ',320),(1005,'ΛΕΥΚΤΡΟΥ',320),(1006,'ΑΡΙΟΣ',321),(1007,'ΑΡΦΑΡΩΝ',321),(1008,'ΘΟΥΡΙΑΣ',321),(1009,'ΚΑΛΑΜΑΤΑΣ',321),(1010,'ΑΙΠΕΙΑΣ',322),(1011,'ΑΝΔΡΟΥΣΑΣ',322),(1012,'ΑΡΙΣΤΟΜΕΝΟΥΣ',322),(1013,'ΒΟΥΦΡΑΔΟΣ',322),(1014,'ΙΘΩΜΗΣ',322),(1015,'ΜΕΣΣΗΝΗΣ',322),(1016,'ΠΕΤΑΛΙΔΙΟΥ',322),(1017,'ΤΡΙΚΟΡΦΟΥ',322),(1018,'ΑΝΔΑΝΙΑΣ',323),(1019,'ΔΩΡΙΟΥ',323),(1020,'ΕΙΡΑΣ',323),(1021,'ΜΕΛΙΓΑΛΑ',323),(1022,'ΟΙΧΑΛΙΑΣ',323),(1023,'ΚΟΡΩΝΗΣ',324),(1024,'ΜΕΘΩΝΗΣ',324),(1025,'ΝΕΣΤΟΡΟΣ',324),(1026,'ΠΑΠΑΦΛΕΣΣΑ',324),(1027,'ΠΥΛΟΥ',324),(1028,'ΧΙΛΙΟΧΩΡΙΩΝ',324),(1029,'ΑΕΤΟΥ',325),(1030,'ΑΥΛΩΝΟΣ',325),(1031,'ΓΑΡΓΑΛΙΑΝΩΝ',325),(1032,'ΚΥΠΑΡΙΣΣΙΑΣ',325),(1033,'ΤΡΙΠΥΛΗΣ',325),(1034,'ΦΙΛΙΑΤΡΩΝ',325);

CREATE TABLE `communities` (
  `id` int UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` varchar(200) NOT NULL,
  `municipal_units_id` int UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `idx_communities_name` (`name`),
  INDEX `idx_municipal_units_id` (`municipal_units_id`),
  CONSTRAINT `communities_ibfk_1` FOREIGN KEY (`municipal_units_id`) 
      REFERENCES `municipal_units` (`id`) 
      ON DELETE CASCADE 
      ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

INSERT INTO `communities` VALUES (1,'ΑΓΙΟΥ ΚΗΡΥΚΟΥ',1),(2,'ΠΕΡΔΙΚΙΟΥ',1),(3,'ΧΡΥΣΟΣΤΟΜΟΥ',1),(4,'ΑΡΕΘΟΥΣΗΣ',2),(5,'ΔΑΦΝΗΣ',2),(6,'ΕΥΔΗΛΟΥ',2),(7,'ΚΑΡΑΒΟΣΤΑΜΟΥ',2),(8,'ΜΑΓΓΑΝΙΤΟΥ',2),(9,'ΦΡΑΝΤΑΤΟΥ',2),(10,'ΑΓΙΟΥ ΠΟΛΥΚΑΡΠΟΥ',3),(11,'ΚΑΡΚΙΝΑΓΡΙΟΥ',3),(12,'ΡΑΧΩΝ',3),(13,'ΦΟΥΡΝΩΝ',4),(14,'ΑΓΙΑΣ ΠΑΡΑΣΚΕΥΗΣ',5),(15,'ΝΑΠΗΣ',5),(16,'ΑΓΙΑΣΟΥ',6),(17,'ΜΕΣΑΓΡΟΥ',7),(18,'ΠΑΛΑΙΟΚΗΠΟΥ',7),(19,'ΠΑΠΠΑΔΟΥ',7),(20,'ΠΕΡΑΜΑΤΟΣ',7),(21,'ΠΛΑΚΑΔΟΥ',7),(22,'ΣΚΟΠΕΛΟΥ',7),(23,'ΑΝΤΙΣΣΗΣ',8),(24,'ΒΑΤΟΥΣΣΗΣ',8),(25,'ΕΡΕΣΟΥ',8),(26,'ΜΕΣΟΤΟΠΟΥ',8),(27,'ΠΤΕΡΟΥΝΤΟΣ',8),(28,'ΣΙΓΡΙΟΥ',8),(29,'ΧΙΔΗΡΩΝ',8),(30,'ΑΣΩΜΑΤΟΥ',9),(31,'ΙΠΠΕΙΟΥ',9),(32,'ΚΑΤΩ ΤΡΙΤΟΥΣ',9),(33,'ΚΕΡΑΜΕΙΩΝ',9),(34,'ΛΑΜΠΟΥ ΜΥΛΩΝ',9),(35,'ΜΥΧΟΥ',9),(36,'ΣΥΚΟΥΝΤΟΣ',9),(37,'ΑΓΡΑΣ',10),(38,'ΑΝΕΜΟΤΙΑΣ',10),(39,'ΑΡΙΣΒΗΣ',10),(40,'ΔΑΦΙΩΝ',10),(41,'ΚΑΛΛΟΝΗΣ',10),(42,'ΚΕΡΑΜΙΟΥ',10),(43,'ΠΑΡΑΚΟΙΛΩΝ',10),(44,'ΣΚΑΛΟΧΩΡΙΟΥ',10),(45,'ΦΙΛΙΑΣ',10),(46,'ΚΩΜΗΣ',11),(47,'ΛΟΥΤΡΟΠΟΛΕΩΣ ΘΕΡΜΗΣ',11),(48,'ΜΙΣΤΕΓΝΩΝ',11),(49,'ΝΕΩΝ ΚΥΔΩΝΙΩΝ',11),(50,'ΠΗΓΗΣ',11),(51,'ΠΥΡΓΩΝ ΘΕΡΜΗΣ',11),(52,'ΚΑΠΗΣ',12),(53,'ΚΛΕΙΟΥΣ',12),(54,'ΜΑΝΤΑΜΑΔΟΥ',12),(55,'ΠΕΛΟΠΗΣ',12),(56,'ΑΡΓΕΝΝΟΥ',13),(57,'ΛΕΠΕΤΥΜΝΟΥ',13),(58,'ΜΗΘΥΜΝΗΣ',13),(59,'ΣΥΚΑΜΙΝΕΑΣ',13),(60,'ΑΓΙΑΣ ΜΑΡΙΝΗΣ',14),(61,'ΑΛΥΦΑΝΤΩΝ',14),(62,'ΑΦΑΛΩΝΟΣ',14),(63,'ΛΟΥΤΡΩΝ',14),(64,'ΜΟΡΙΑΣ',14),(65,'ΜΥΤΙΛΗΝΗΣ',14),(66,'ΠΑΜΦΙΛΩΝ (ΠΑΜΦΥΛΛΩΝ)',14),(67,'ΠΑΝΑΓΙΟΥΔΑΣ',14),(68,'ΤΑΞΙΑΡΧΩΝ',14),(69,'ΛΑΦΙΩΝΑΣ',15),(70,'ΠΕΤΡΑΣ',15),(71,'ΣΚΟΥΤΑΡΟΥ',15),(72,'ΣΤΥΨΗΣ',15),(73,'ΥΨΗΛΟΜΕΤΩΠΟΥ',15),(74,'ΑΚΡΑΣΙΟΥ',16),(75,'ΑΜΠΕΛΙΚΟΥ',16),(76,'ΜΕΓΑΛΟΧΩΡΙΟΥ',16),(77,'ΝΕΟΧΩΡΙΟΥ',16),(78,'ΠΑΛΑΙΟΧΩΡΙΟΥ',16),(79,'ΠΛΑΓΙΑΣ',16),(80,'ΠΛΩΜΑΡΙΟΥ',16),(81,'ΤΡΥΓΟΝΑ',16),(82,'ΒΑΣΙΛΙΚΩΝ',17),(83,'ΒΡΙΣΑΣ',17),(84,'ΛΙΣΒΟΡΙΟΥ',17),(85,'ΠΟΛΙΧΝΙΤΟΥ',17),(86,'ΣΤΑΥΡΟΥ',17),(87,'ΑΓΙΟΥ ΕΥΣΤΡΑΤΙΟΥ',18),(88,'ΑΓΙΟΥ ΔΗΜΗΤΡΙΟΥ',19),(89,'ΑΤΣΙΚΗΣ',19),(90,'ΒΑΡΟΥΣ',19),(91,'ΔΑΦΝΗΣ',19),(92,'ΚΑΡΠΑΣΙΟΥ',19),(93,'ΚΑΤΑΛΑΚΚΟΥ',19),(94,'ΣΑΡΔΩΝ',19),(95,'ΚΑΛΛΙΟΠΗΣ',20),(96,'ΚΑΜΙΝΙΩΝ',20),(97,'ΚΟΝΤΟΠΟΥΛΙΟΥ',20),(98,'ΛΥΧΝΩΝ',20),(99,'ΜΟΥΔΡΟΥ',20),(100,'ΠΑΝΑΓΙΑΣ',20),(101,'ΠΛΑΚΑΣ',20),(102,'ΡΕΠΑΝΙΔΙΟΥ',20),(103,'ΡΟΥΣΣΟΠΟΥΛΙΟΥ',20),(104,'ΡΩΜΑΝΟΥ',20),(105,'ΣΚΑΝΔΑΛΙΟΥ',20),(106,'ΦΙΣΙΝΗΣ',20),(107,'ΘΑΝΟΥΣ',21),(108,'ΚΑΣΠΑΚΑ',21),(109,'ΚΟΡΝΟΥ',21),(110,'ΜΥΡΙΝΑΙΩΝ',21),(111,'ΠΛΑΤΕΟΣ',21),(112,'ΑΓΚΑΡΥΩΝΩΝ',22),(113,'ΚΑΛΛΙΘΕΑΣ',22),(114,'ΚΟΝΤΙΑ',22),(115,'ΛΙΒΑΔΟΧΩΡΙΟΥ',22),(116,'ΝΕΑΣ ΚΟΥΤΑΛΗΣ',22),(117,'ΠΕΔΙΝΟΥ',22),(118,'ΠΟΡΤΙΑΝΟΥ',22),(119,'ΤΣΙΜΑΝΔΡΙΩΝ',22),(120,'ΑΓΙΟΥ ΚΩΝΣΤΑΝΤΙΝΟΥ',23),(121,'ΑΜΠΕΛΟΥ',23),(122,'ΒΑΘΕΟΣ',23),(123,'ΒΟΥΡΛΙΩΤΩΝ',23),(124,'ΚΟΚΚΑΡΙΟΥ',23),(125,'ΜΑΝΟΛΑΤΩΝ',23),(126,'ΠΑΛΑΙΟΚΑΣΤΡΟΥ',23),(127,'ΣΑΜΙΩΝ',23),(128,'ΣΤΑΥΡΙΝΗΔΩΝ',23),(129,'ΑΓΙΩΝ ΘΕΟΔΩΡΩΝ',24),(130,'ΔΡΑΚΑΙΩΝ',24),(131,'ΚΑΡΛΟΒΑΣΙΩΝ',24),(132,'ΚΑΣΤΑΝΕΑΣ',24),(133,'ΚΟΝΤΑΙΙΚΩΝ',24),(134,'ΚΟΝΤΑΚΑΙΙΚΩΝ',24),(135,'ΚΟΣΜΑΔΑΙΩΝ',24),(136,'ΛΕΚΑΣ',24),(137,'ΠΛΑΤΑΝΟΥ',24),(138,'ΥΔΡΟΥΣΣΗΣ',24),(139,'ΚΑΛΛΙΘΕΑΣ',25),(140,'ΚΟΥΜΑΙΙΚΩΝ',25),(141,'ΜΑΡΑΘΟΚΑΜΠΟΥ',25),(142,'ΝΕΟΧΩΡΙΟΥ',25),(143,'ΣΚΟΥΡΑΙΙΚΩΝ',25),(144,'ΚΟΥΜΑΡΑΔΑΙΩΝ',26),(145,'ΜΑΥΡΑΤΖΑΙΩΝ',26),(146,'ΜΕΣΟΓΕΙΟΥ',26),(147,'ΜΥΛΩΝ',26),(148,'ΜΥΤΙΛΗΝΙΩΝ',26),(149,'ΠΑΓΩΝΔΟΥ',26),(150,'ΠΑΝΔΡΟΣΟΥ',26),(151,'ΠΥΘΑΓΟΡΕΙΟΥ',26),(152,'ΠΥΡΓΟΥ',26),(153,'ΣΠΑΘΑΡΑΙΩΝ',26),(154,'ΧΩΡΑΣ',26),(155,'ΟΙΝΟΥΣΣΩΝ',27),(156,'ΘΥΜΙΑΝΩΝ',28),(157,'ΝΕΟΧΩΡΙΟΥ',28),(158,'ΑΓΙΟΥ ΓΑΛΑΚΤΟΣ',29),(159,'ΒΟΛΙΣΣΟΥ',29),(160,'ΔΙΕΥΧΩΝ',29),(161,'ΚΕΡΑΜΟΥ',29),(162,'ΚΟΥΡΟΥΝΙΩΝ',29),(163,'ΛΕΠΤΟΠΟΔΩΝ',29),(164,'ΜΕΛΑΝΙΟΥ',29),(165,'ΝΕΑΣ ΠΟΤΑΜΙΑΣ(ΠΟΤΑΜΙΑΣ)',29),(166,'ΝΕΝΗΤΟΥΡΙΩΝ',29),(167,'ΠΑΡΠΑΡΙΑΣ',29),(168,'ΠΙΡΑΜΑΣ',29),(169,'ΠΙΣΠΙΛΟΥΝΤΟΣ',29),(170,'ΤΡΥΠΩΝ',29),(171,'ΦΥΤΩΝ',29),(172,'ΧΑΛΑΝΔΡΩΝ',29),(173,'ΒΟΥΝΟΥ',30),(174,'ΕΞΩ ΔΙΔΥΜΑΣ',30),(175,'ΘΟΛΟΠΟΤΑΜΙΟΥ',30),(176,'ΚΑΛΛΙΜΑΣΙΑΣ',30),(177,'ΚΑΤΑΡΡΑΚΤΟΥ',30),(178,'ΚΟΙΝΗ',30),(179,'ΜΕΣΑ ΔΙΔΥΜΑΣ',30),(180,'ΜΥΡΜΗΓΚΙΟΥ',30),(181,'ΝΕΝΗΤΩΝ',30),(182,'ΠΑΓΙΔΟΣ',30),(183,'ΦΛΑΤΣΙΩΝ',30),(184,'ΑΓΙΟΥ ΓΕΩΡΓΙΟΥ ΣΥΚΟΥΣΗ',31),(185,'ΒΑΒΙΛΩΝ',31),(186,'ΒΑΣΙΛΕΩΝΟΙΚΟΥ',31),(187,'ΒΕΡΒΕΡΑΤΟΥ',31),(188,'ΔΑΦΝΩΝΟΣ',31),(189,'ΖΥΦΙΑ',31),(190,'ΧΑΛΚΕΙΟΥ',31),(191,'ΑΜΑΔΩΝ',32),(192,'ΒΙΚΙΟΥ',32),(193,'ΚΑΜΠΙΩΝ',32),(194,'ΚΑΡΔΑΜΥΛΩΝ',32),(195,'ΠΙΤΥΟΥΝΤΟΣ',32),(196,'ΣΠΑΡΤΟΥΝΤΟΣ',32),(197,'ΑΡΜΟΛΙΩΝ',33),(198,'ΒΕΣΣΗΣ',33),(199,'ΕΛΑΤΑΣ',33),(200,'ΚΑΛΑΜΩΤΗΣ',33),(201,'ΛΙΘΙΟΥ',33),(202,'ΜΕΣΤΩΝ',33),(203,'ΟΛΥΜΠΩΝ',33),(204,'ΠΑΤΡΙΚΩΝ',33),(205,'ΠΥΡΓΙΟΥ',33),(206,'ΑΝΑΒΑΤΟΥ',34),(207,'ΑΥΓΩΝΥΜΩΝ',34),(208,'ΒΡΟΝΤΑΔΟΥ',34),(209,'ΚΑΡΥΩΝ',34),(210,'ΛΑΓΚΑΔΑΣ',34),(211,'ΣΙΔΗΡΟΥΝΤΟΣ',34),(212,'ΣΥΚΙΑΔΑΣ',34),(213,'ΧΙΟΥ',35),(214,'ΨΑΡΩΝ',36),(215,'ΑΝΔΡΟΥ',37),(216,'ΑΠΟΙΚΙΩΝ',37),(217,'ΒΟΥΡΚΩΤΗΣ',37),(218,'ΛΑΜΥΡΩΝ',37),(219,'ΜΕΣΑΡΙΑΣ',37),(220,'ΠΙΤΡΟΦΟΥ',37),(221,'ΣΤΕΝΙΩΝ',37),(222,'ΚΑΠΠΑΡΙΑΣ',38),(223,'ΚΟΡΘΙΟΥ',38),(224,'ΚΟΧΥΛΟΥ',38),(225,'ΟΡΜΟΥ ΚΟΡΘΙΟΥ',38),(226,'ΠΑΛΑΙΟΚΑΣΤΡΟΥ',38),(227,'ΣΥΝΕΤΙΟΥ',38),(228,'ΑΜΜΟΛΟΧΟΥ',39),(229,'ΑΝΩ ΓΑΥΡΙΟΥ',39),(230,'ΑΠΡΟΒΑΤΟΥ',39),(231,'ΑΡΝΑ',39),(232,'ΒΙΤΑΛΙΟΥ',39),(233,'ΓΑΥΡΙΟΥ',39),(234,'ΚΑΤΑΚΟΙΛΟΥ',39),(235,'ΜΑΚΡΟΤΑΝΤΑΛΟΥ',39),(236,'ΜΠΑΤΣΙΟΥ',39),(237,'ΠΑΛΑΙΟΠΟΛΕΩΣ',39),(238,'ΦΕΛΛΟΥ',39),(239,'ΑΝΑΦΗΣ',40),(240,'ΑΚΡΩΤΗΡΙΟΥ',41),(241,'ΒΟΘΩΝΟΣ',41),(242,'ΒΟΥΡΒΟΥΛΟΥ',41),(243,'ΕΜΠΟΡΕΙΟΥ',41),(244,'ΕΞΩ ΓΩΝΙΑΣ',41),(245,'ΕΠΙΣΚΟΠΗΣ ΓΩΝΙΑΣ',41),(246,'ΗΜΕΡΟΒΙΓΛΙΟΥ',41),(247,'ΘΗΡΑΣ',41),(248,'ΚΑΡΤΕΡΑΔΟΥ',41),(249,'ΜΕΓΑΛΟΧΩΡΙΟΥ',41),(250,'ΜΕΣΑΡΙΑΣ',41),(251,'ΠΥΡΓΟΥ ΚΑΛΛΙΣΤΗΣ',41),(252,'ΘΗΡΑΣΙΑΣ',42),(253,'ΟΙΑΣ',42),(254,'ΙΗΤΩΝ',43),(255,'ΣΙΚΙΝΟΥ',44),(256,'ΑΝΩ ΜΕΡΙΑΣ',45),(257,'ΦΟΛΕΓΑΝΔΡΟΥ',45),(258,'ΑΓΑΘΟΝΗΣΙΟΥ',46),(259,'ΑΣΤΥΠΑΛΑΙΑΣ',47),(260,'ΚΑΛΥΜΝΙΩΝ',48),(261,'ΛΕΙΨΩΝ',49),(262,'ΛΕΡΟΥ',50),(263,'ΠΑΤΜΟΥ',51),(264,'ΑΠΕΡΙΟΥ',52),(265,'ΑΡΚΑΣΑΣ',52),(266,'ΒΩΛΑΔΑΣ',52),(267,'ΚΑΡΠΑΘΟΥ',52),(268,'ΜΕΝΕΤΩΝ',52),(269,'ΜΕΣΟΧΩΡΙΟΥ',52),(270,'ΟΘΟΥΣ',52),(271,'ΠΥΛΩΝ',52),(272,'ΣΠΟΩΝ',52),(273,'ΟΛΥΜΠΟΥ',53),(274,'ΚΑΣΟΥ',54),(275,'ΙΟΥΛΙΔΟΣ',55),(276,'ΚΟΡΗΣΣΙΑΣ',55),(277,'ΔΡΥΟΠΙΔΟΣ',56),(278,'ΚΥΘΝΟΥ',56),(279,'ΑΣΦΕΝΔΙΟΥ',57),(280,'ΠΥΛΙΟΥ',57),(281,'ΑΝΤΙΜΑΧΕΙΑΣ',58),(282,'ΚΑΡΔΑΜΑΙΝΗΣ',58),(283,'ΚΕΦΑΛΟΥ',58),(284,'ΚΩ',59),(285,'ΕΜΠΟΡΕΙΟΥ',60),(286,'ΜΑΝΔΡΑΚΙΟΥ',60),(287,'ΝΙΚΙΩΝ',60),(288,'ΚΙΜΩΛΟΥ',61),(289,'ΑΔΑΜΑΝΤΟΣ',62),(290,'ΜΗΛΟΥ',62),(291,'ΠΕΡΑΝ ΤΡΙΟΒΑΣΑΛΟΥ',62),(292,'ΤΡΙΟΒΑΣΑΛΟΥ',62),(293,'ΤΡΥΠΗΤΗΣ',62),(294,'ΣΕΡΙΦΟΥ',63),(295,'ΑΠΟΛΛΩΝΙΑΣ',64),(296,'ΑΡΤΕΜΩΝΟΣ',64),(297,'ΑΝΩ ΜΕΡΑΣ',65),(298,'ΜΥΚΟΝΙΩΝ',65),(299,'ΑΙΓΙΑΛΗΣ',66),(300,'ΑΜΟΡΓΟΥ',66),(301,'ΑΡΚΕΣΙΝΗΣ',66),(302,'ΒΡΟΥΤΣΗ',66),(303,'ΘΟΛΑΡΙΩΝ',66),(304,'ΚΑΤΑΠΟΛΩΝ (ΑΜΟΡΓΟΥ)',66),(305,'ΔΟΝΟΥΣΗΣ',67),(306,'ΑΠΕΡΑΘΟΥ',68),(307,'ΔΑΜΑΡΙΩΝΟΣ',68),(308,'ΔΑΝΑΚΟΥ',68),(309,'ΚΕΡΑΜΩΤΗΣ',68),(310,'ΚΟΡΩΝΙΔΟΣ',68),(311,'ΚΟΡΩΝΟΥ',68),(312,'ΜΕΣΗΣ',68),(313,'ΜΟΝΗΣ',68),(314,'ΣΚΑΔΟΥ',68),(315,'ΦΙΛΟΤΙΟΥ',68),(316,'ΧΑΛΚΕΙΟΥ',68),(317,'ΗΡΑΚΛΕΙΑΣ',69),(318,'ΚΟΥΦΟΝΗΣΙΩΝ',70),(319,'ΑΓΙΟΥ ΑΡΣΕΝΙΟΥ',71),(320,'ΒΙΒΛΟΥ',71),(321,'ΓΑΛΑΝΑΔΟΥ',71),(322,'ΓΑΛΗΝΗΣ',71),(323,'ΓΛΙΝΑΔΟΥ',71),(324,'ΕΓΓΑΡΩΝ',71),(325,'ΚΙΝΙΔΑΡΟΥ',71),(326,'ΜΕΛΑΝΩΝ',71),(327,'ΝΑΞΟΥ',71),(328,'ΠΟΤΑΜΙΑΣ',71),(329,'ΣΑΓΚΡΙΟΥ',71),(330,'ΣΧΟΙΝΟΥΣΣΗΣ',72),(331,'ΑΝΤΙΠΑΡΟΥ',73),(332,'ΑΓΚΑΙΡΙΑΣ',74),(333,'ΑΡΧΙΛΟΧΟΥ',74),(334,'ΚΩΣΤΟΥ',74),(335,'ΛΕΥΚΩΝ',74),(336,'ΜΑΡΠΗΣΣΗΣ',74),(337,'ΝΑΟΥΣΗΣ',74),(338,'ΠΑΡΟΥ',74),(339,'ΜΕΓΙΣΤΗΣ',75),(340,'ΑΡΧΑΓΓΕΛΟΥ',76),(341,'ΜΑΛΩΝΟΣ',76),(342,'ΜΑΣΑΡΩΝ',76),(343,'ΑΓΙΟΥ ΙΣΙΔΩΡΟΥ',77),(344,'ΕΜΠΩΝΑ',77),(345,'ΚΡΗΤΗΝΙΑΣ',77),(346,'ΜΟΝΟΛΙΘΟΥ',77),(347,'ΣΙΑΝΩΝ',77),(348,'ΑΡΧΙΠΟΛΕΩΣ',78),(349,'ΑΦΑΝΤΟΥ',78),(350,'ΙΑΛΥΣΟΥ (ΤΡΙΑΝΤΑ)',79),(351,'ΚΑΛΥΘΙΩΝ',80),(352,'ΚΟΣΚΙΝΟΥ',80),(353,'ΨΙΝΘΟΥ',80),(354,'ΑΠΟΛΛΩΝΑ',81),(355,'ΔΙΜΥΛΙΑΣ',81),(356,'ΚΑΛΑΒΑΡΔΑ',81),(357,'ΠΛΑΤΑΝΙΩΝ',81),(358,'ΣΑΛΑΚΟΥ',81),(359,'ΣΟΡΩΝΗΣ',81),(360,'ΦΑΝΩΝ',81),(361,'ΚΑΛΑΘΟΥ',82),(362,'ΛΑΕΡΜΩΝ',82),(363,'ΛΑΡΔΟΥ',82),(364,'ΛΙΝΔΟΥ',82),(365,'ΠΥΛΩΝΟΣ',82),(366,'ΑΠΟΛΑΚΚΙΑΣ',83),(367,'ΑΡΝΙΘΑΣ',83),(368,'ΑΣΚΛΗΠΙΕΙΟΥ',83),(369,'ΒΑΤΙΟΥ',83),(370,'ΓΕΝΝΑΔΙΟΥ',83),(371,'ΙΣΤΡΙΟΥ',83),(372,'ΚΑΤΤΑΒΙΑΣ',83),(373,'ΛΑΧΑΝΙΑΣ',83),(374,'ΜΕΣΑΝΑΓΡΟΥ',83),(375,'ΠΡΟΦΙΛΙΑΣ',83),(376,'ΔΑΜΑΤΡΙΑΣ',84),(377,'ΘΕΟΛΟΓΟΥ',84),(378,'ΚΡΕΜΑΣΤΗΣ',84),(379,'ΜΑΡΙΤΣΩΝ',84),(380,'ΠΑΡΑΔΕΙΣΙΟΥ',84),(381,'ΠΑΣΤΙΔΑΣ',84),(382,'ΡΟΔΟΥ',85),(383,'ΣΥΜΗΣ',86),(384,'ΛΙΒΑΔΙΩΝ',87),(385,'ΜΕΓΑΛΟΥ ΧΩΡΙΟΥ',87),(386,'ΧΑΛΚΗΣ',88),(387,'ΑΝΩ ΣΥΡΟΥ',89),(388,'ΓΑΛΗΣΣΑ',89),(389,'ΠΑΓΟΥ',89),(390,'ΧΡΟΥΣΩΝ',89),(391,'ΕΡΜΟΥΠΟΛΕΩΣ',90),(392,'ΜΑΝΝΑ',90),(393,'ΒΑΡΗΣ',91),(394,'ΠΟΣΕΙΔΩΝΙΑΣ',91),(395,'ΦΟΙΝΙΚΟΣ',91),(396,'ΑΓΑΠΗΣ',92),(397,'ΚΑΛΛΟΝΗΣ',92),(398,'ΚΑΜΠΟΥ',92),(399,'ΚΑΡΔΙΑΝΗΣ',92),(400,'ΚΤΙΚΑΔΟΥ',92),(401,'ΚΩΜΗΣ',92),(402,'ΣΤΕΝΗΣ',92),(403,'ΥΣΤΕΡΝΙΩΝ',92),(404,'ΦΑΛΑΤΑΔΟΥ',92),(405,'ΠΑΝΟΡΜΟΥ',93),(406,'ΔΥΟ ΧΩΡΙΩΝ',94),(407,'ΤΗΝΟΥ',94),(408,'ΤΡΙΑΝΤΑΡΟΥ',94),(409,'ΑΧΑΡΝΩΝ',95),(410,'ΘΡΑΚΟΜΑΚΕΔΟΝΩΝ',96),(411,'ΒΑΡΗΣ',97),(412,'ΒΟΥΛΑΣ',98),(413,'ΒΟΥΛΙΑΓΜΕΝΗΣ',99),(414,'ΑΓΙΟΥ ΣΤΕΦΑΝΟΥ',100),(415,'ΑΝΟΙΞΕΩΣ',101),(416,'ΔΙΟΝΥΣΟΥ',102),(417,'ΔΡΟΣΙΑΣ',103),(418,'ΚΡΥΟΝΕΡΙΟΥ',104),(419,'ΡΟΔΟΠΟΛΕΩΣ',105),(420,'ΣΤΑΜΑΤΑΣ',106),(421,'ΚΡΩΠΙΑΣ',107),(422,'ΑΓΙΟΥ ΚΩΝΣΤΑΝΤΙΝΟΥ',108),(423,'ΚΕΡΑΤΕΑΣ',109),(424,'ΛΑΥΡΕΩΤΙΚΗΣ',110),(425,'ΒΑΡΝΑΒΑ',111),(426,'ΓΡΑΜΜΑΤΙΚΟΥ',112),(427,'ΜΑΡΑΘΩΝΟΣ',113),(428,'ΝΕΑΣ ΜΑΚΡΗΣ',114),(429,'ΜΑΡΚΟΠΟΥΛΟΥ ΜΕΣΟΓΑΙΑΣ',115),(430,'ΓΛΥΚΩΝ ΝΕΡΩΝ',116),(431,'ΠΑΙΑΝΙΑΣ',117),(432,'ΑΝΘΟΥΣΑΣ',118),(433,'ΓΕΡΑΚΑ',119),(434,'ΠΑΛΛΗΝΗΣ',120),(435,'ΠΙΚΕΡΜΙΟΥ',121),(436,'ΡΑΦΗΝΑΣ',122),(437,'ΑΝΑΒΥΣΣΟΥ',123),(438,'ΚΑΛΥΒΙΩΝ ΘΟΡΙΚΟΥ',124),(439,'ΚΟΥΒΑΡΑ',125),(440,'ΠΑΛΑΙΑΣ ΦΩΚΑΙΑΣ',126),(441,'ΣΑΡΩΝΙΔΟΣ',127),(442,'ΑΡΤΕΜΙΔΑΣ',128),(443,'ΣΠΑΤΩΝ-ΛΟΥΤΣΑΣ',129),(444,'ΑΥΛΩΝΟΣ',130),(445,'ΑΦΙΔΝΩΝ',131),(446,'ΚΑΛΑΜΟΥ',132),(447,'ΚΑΠΑΝΔΡΙΤΙΟΥ',133),(448,'ΜΑΛΑΚΑΣΗΣ',134),(449,'ΜΑΡΚΟΠΟΥΛΟΥ ΩΡΩΠΟΥ',135),(450,'ΠΟΛΥΔΕΝΔΡΙΟΥ',136),(451,'ΣΥΚΑΜΙΝΟΥ',137),(452,'ΝΕΩΝ ΠΑΛΑΤΙΩΝ',138),(453,'ΣΚΑΛΑΣ ΩΡΩΠΟΥ',138),(454,'ΩΡΩΠΟΥ',138),(455,'ΑΓΙΑΣ ΠΑΡΑΣΚΕΥΗΣ',139),(456,'ΑΜΑΡΟΥΣΙΟΥ',140),(457,'ΒΡΙΛΗΣΣΙΩΝ',141),(458,'ΗΡΑΚΛΕΙΟΥ',142),(459,'ΕΚΑΛΗΣ',143),(460,'ΚΗΦΙΣΙΑΣ',144),(461,'ΝΕΑΣ ΕΡΥΘΡΑΙΑΣ',145),(462,'ΛΥΚΟΒΡΥΣΕΩΣ',146),(463,'ΠΕΥΚΗΣ',147),(464,'ΜΕΤΑΜΟΡΦΩΣΕΩΣ',148),(465,'ΝΕΑΣ ΙΩΝΙΑΣ',149),(466,'ΠΑΠΑΓΟΥ',150),(467,'ΧΟΛΑΡΓΟΥ',151),(468,'ΜΕΛΙΣΣΙΩΝ',152),(469,'ΝΕΑΣ ΠΕΝΤΕΛΗΣ',153),(470,'ΠΕΝΤΕΛΗΣ',154),(471,'ΝΕΟΥ ΨΥΧΙΚΟΥ',155),(472,'ΦΙΛΟΘΕΗΣ',156),(473,'ΨΥΧΙΚΟΥ',157),(474,'ΧΑΛΑΝΔΡΙΟΥ',158),(475,'ΑΣΠΡΟΠΥΡΓΟΥ',159),(476,'ΕΛΕΥΣΙΝΟΣ',160),(477,'ΜΑΓΟΥΛΑΣ',161),(478,'ΒΙΛΙΩΝ',162),(479,'ΕΡΥΘΡΩΝ',163),(480,'ΜΑΝΔΡΑΣ',164),(481,'ΟΙΝΟΗΣ',165),(482,'ΜΕΓΑΡΕΩΝ',166),(483,'ΝΕΑΣ ΠΕΡΑΜΟΥ',167),(484,'ΑΝΩ ΛΙΟΣΙΩΝ',168),(485,'ΖΕΦΥΡΙΟΥ',169),(486,'ΦΥΛΗΣ',170),(487,'ΑΓΙΑΣ ΒΑΡΒΑΡΑΣ',171),(488,'ΑΓΙΩΝ ΑΝΑΡΓΥΡΩΝ',172),(489,'ΚΑΜΑΤΕΡΟΥ',173),(490,'ΑΙΓΑΛΕΩ',174),(491,'ΙΛΙΟΥ (ΝΕΩΝ ΛΙΟΣΙΩΝ)',175),(492,'1ου ΔΗΜ. ΔΙΑΜΕΡ. ΠΕΡΙΣΤΕΡΙΟΥ',176),(493,'2ου ΔΗΜ. ΔΙΑΜΕΡ. ΠΕΡΙΣΤΕΡΙΟΥ',176),(494,'3ου ΔΗΜ. ΔΙΑΜΕΡ. ΠΕΡΙΣΤΕΡΙΟΥ',176),(495,'4ου ΔΗΜ. ΔΙΑΜΕΡ. ΠΕΡΙΣΤΕΡΙΟΥ',176),(496,'ΠΕΤΡΟΥΠΟΛΕΩΣ',177),(497,'ΧΑΙΔΑΡΙΟΥ',178),(498,'1ου ΔΗΜ. ΔΙΑΜΕΡ. ΑΘΗΝΑΙΩΝ',179),(499,'2ου ΔΗΜ. ΔΙΑΜΕΡ. ΑΘΗΝΑΙΩΝ',179),(500,'3ου ΔΗΜ. ΔΙΑΜΕΡ. ΑΘΗΝΑΙΩΝ',179),(501,'4ου ΔΗΜ. ΔΙΑΜΕΡ. ΑΘΗΝΑΙΩΝ',179),(502,'5ου ΔΗΜ. ΔΙΑΜΕΡ. ΑΘΗΝΑΙΩΝ',179),(503,'6ου ΔΗΜ. ΔΙΑΜΕΡ. ΑΘΗΝΑΙΩΝ',179),(504,'7ου ΔΗΜ. ΔΙΑΜΕΡ. ΑΘΗΝΑΙΩΝ',179),(505,'ΒΥΡΩΝΟΣ',180),(506,'ΓΑΛΑΤΣΙΟΥ',181),(507,'ΔΑΦΝΗΣ',182),(508,'ΥΜΗΤΤΟΥ',183),(509,'ΖΩΓΡΑΦΟΥ',184),(510,'ΗΛΙΟΥΠΟΛΕΩΣ',185),(511,'ΚΑΙΣΑΡΙΑΝΗΣ',186),(512,'ΝΕΑΣ ΦΙΛΑΔΕΛΦΕΙΑΣ',187),(513,'ΝΕΑΣ ΧΑΛΚΗΔΟΝΟΣ',188),(514,'ΑΓΚΙΣΤΡΙΟΥ',189),(515,'ΑΙΓΙΝΑΣ',190),(516,'ΒΑΘΕΟΣ',190),(517,'ΚΥΨΕΛΗΣ',190),(518,'ΜΕΣΑΓΡΟΥ',190),(519,'ΠΕΡΔΙΚΑΣ',190),(520,'ΑΝΤΙΚΥΘΗΡΩΝ',191),(521,'ΑΡΩΝΙΑΔΙΚΩΝ',192),(522,'ΚΑΡΑΒΑ',192),(523,'ΚΑΡΒΟΥΝΑΔΩΝ',192),(524,'ΚΟΝΤΟΛΙΑΝΙΚΩΝ',192),(525,'ΚΥΘΗΡΩΝ',192),(526,'ΛΙΒΑΔΙΟΥ',192),(527,'ΛΟΓΟΘΕΤΙΑΝΙΚΩΝ',192),(528,'ΜΗΤΑΤΩΝ',192),(529,'ΜΥΛΟΠΟΤΑΜΟΥ',192),(530,'ΜΥΡΤΙΔΙΩΝ',192),(531,'ΠΟΤΑΜΟΥ',192),(532,'ΦΡΑΤΣΙΩΝ',192),(533,'ΦΡΙΛΙΓΚΙΑΝΙΚΩΝ',192),(534,'ΠΟΡΟΥ',193),(535,'ΑΜΠΕΛΑΚΙΩΝ',194),(536,'ΣΕΛΗΝΙΩΝ',194),(537,'ΑΙΑΝΤΕΙΟΥ',195),(538,'ΣΑΛΑΜΙΝΟΣ',195),(539,'ΣΠΕΤΣΩΝ',196),(540,'ΚΟΥΝΟΥΠΙΤΣΗΣ',197),(541,'ΚΥΨΕΛΗΣ ΜΕΘΑΝΩΝ',197),(542,'ΛΟΥΤΡΟΠΟΛΕΩΣ ΜΕΘΑΝΩΝ',197),(543,'ΜΕΓΑΛΟΧΩΡΙΟΥ',197),(544,'ΑΝΩ ΦΑΝΑΡΙΟΥ',198),(545,'ΓΑΛΑΤΑ',198),(546,'ΔΡΥΟΠΗΣ',198),(547,'ΚΑΡΑΤΖΑ',198),(548,'ΤΑΚΤΙΚΟΥΠΟΛΕΩΣ',198),(549,'ΤΡΟΙΖΗΝΟΣ',198),(550,'ΥΔΡΑΣ',199),(551,'ΑΓΙΟΥ ΔΗΜΗΤΡΙΟΥ',200),(552,'ΑΛΙΜΟΥ',201),(553,'ΓΛΥΦΑΔΑΣ',202),(554,'ΑΡΓΥΡΟΥΠΟΛΗΣ',203),(555,'ΕΛΛΗΝΙΚΟΥ',204),(556,'1ο ΔΗΜ. ΔΙΑΜΕΡ. ΚΑΛΛΙΘΕΑΣ',205),(557,'2ο ΔΗΜ. ΔΙΑΜΕΡ. ΚΑΛΛΙΘΕΑΣ',205),(558,'3ο ΔΗΜ. ΔΙΑΜΕΡ. ΚΑΛΛΙΘΕΑΣ',205),(559,'ΜΟΣΧΑΤΟΥ',206),(560,'ΤΑΥΡΟΥ',207),(561,'ΝΕΑΣ ΣΜΥΡΝΗΣ',208),(562,'ΠΑΛΑΙΟΥ ΦΑΛΗΡΟΥ',209),(563,'ΔΡΑΠΕΤΣΩΝΑΣ',210),(564,'ΚΕΡΑΤΣΙΝΙΟΥ',211),(565,'ΚΟΡΥΔΑΛΛΟΥ',212),(566,'ΑΓΙΟΥ ΙΩΑΝΝΟΥ ΡΕΝΤΗ',213),(567,'ΝΙΚΑΙΑΣ',214),(568,'1ο ΔΗΜ. ΔΙΑΜΕΡ. ΠΕΙΡΑΙΩΣ',215),(569,'2ο ΔΗΜ. ΔΙΑΜΕΡ. ΠΕΙΡΑΙΩΣ',215),(570,'3ο ΔΗΜ. ΔΙΑΜΕΡ. ΠΕΙΡΑΙΩΣ',215),(571,'4ο ΔΗΜ. ΔΙΑΜΕΡ. ΠΕΙΡΑΙΩΣ',215),(572,'5ο ΔΗΜ. ΔΙΑΜΕΡ. ΠΕΙΡΑΙΩΣ',215),(573,'ΠΕΡΑΜΑΤΟΣ',216),(574,'ΑΒΔΕΛΛΑΣ',217),(575,'ΑΓΙΟΥ ΚΟΣΜΑ',218),(576,'ΔΑΣΥΛΛΙΟΥ',218),(577,'ΚΑΛΗΡΑΧΗΣ',218),(578,'ΚΑΛΛΟΝΗΣ',218),(579,'ΚΥΔΩΝΙΩΝ',218),(580,'ΚΥΠΑΡΙΣΣΙΟΥ',218),(581,'ΜΕΓΑΡΟΥ',218),(582,'ΟΡΟΠΕΔΙΟΥ',218),(583,'ΤΡΙΚΟΡΦΟΥ',218),(584,'ΕΞΑΡΧΟΥ',219),(585,'ΚΕΝΤΡΟΥ',219),(586,'ΚΝΙΔΗΣ',219),(587,'ΠΑΛΑΙΟΧΩΡΙΟΥ',219),(588,'ΠΟΝΤΙΝΗΣ',219),(589,'ΠΥΛΩΡΩΝ',219),(590,'ΣΑΡΑΚΗΝΑΣ',219),(591,'ΚΑΛΛΙΘΕΑΣ',220),(592,'ΚΗΠΟΥΡΕΙΟΥ',220),(593,'ΚΡΑΝΕΑΣ',220),(594,'ΜΙΚΡΟΛΙΒΑΔΟΥ',220),(595,'ΠΗΓΑΔΙΤΣΗΣ',220),(596,'ΣΙΤΑΡΑ',220),(597,'ΑΓΙΩΝ ΘΕΟΔΩΡΩΝ',221),(598,'ΑΜΥΓΔΑΛΕΩΝ',221),(599,'ΒΑΤΟΛΑΚΚΟΥ',221),(600,'ΓΡΕΒΕΝΩΝ',221),(601,'ΕΛΑΤΟΥ',221),(602,'ΕΛΕΥΘΕΡΟΥ',221),(603,'ΚΑΛΟΧΙΟΥ',221),(604,'ΚΥΡΑΚΑΛΗΣ',221),(605,'ΜΕΓΑΛΟΥ ΣΕΙΡΗΝΙΟΥ',221),(606,'ΜΥΡΣΙΝΗΣ',221),(607,'ΡΟΔΙΑΣ',221),(608,'ΣΥΝΔΕΝΔΡΟΥ',221),(609,'ΦΕΛΛΙΟΥ',221),(610,'ΔΟΤΣΙΚΟΥ',222),(611,'ΑΓΙΟΥ ΓΕΩΡΓΙΟΥ',223),(612,'ΑΗΔΟΝΙΩΝ',223),(613,'ΚΙΒΩΤΟΥ',223),(614,'ΚΛΗΜΑΤΑΚΙΟΥ',223),(615,'ΚΟΚΚΙΝΙΑΣ',223),(616,'ΜΗΛΕΑΣ',223),(617,'ΠΟΛΥΔΕΝΔΡΟΥ',223),(618,'ΤΑΞΙΑΡΧΟΥ',223),(619,'ΑΛΑΤΟΠΕΤΡΑΣ',224),(620,'ΑΝΑΒΡΥΤΩΝ',224),(621,'ΖΑΚΑ',224),(622,'ΚΟΣΜΑΤΙΟΥ',224),(623,'ΛΑΒΔΑ',224),(624,'ΜΑΥΡΑΝΑΙΩΝ',224),(625,'ΜΟΝΑΧΙΤΙΟΥ',224),(626,'ΠΑΝΟΡΑΜΑΤΟΣ',224),(627,'ΠΟΛΥΝΕΡΙΟΥ',224),(628,'ΠΡΟΣΒΟΡΡΟΥ',224),(629,'ΣΠΗΛΑΙΟΥ',224),(630,'ΤΡΙΚΩΜΟΥ',224),(631,'ΜΕΣΟΛΟΥΡΙΟΥ',225),(632,'ΠΕΡΙΒΟΛΙΟΥ',226),(633,'ΣΑΜΑΡΙΝΑ',227),(634,'ΣΜΙΞΗΣ',228),(635,'ΦΙΛΙΠΠΑΙΩΝ',229),(636,'ΔΑΣΟΧΩΡΙΟΥ',230),(637,'ΔΕΣΚΑΤΗΣ',230),(638,'ΠΑΛΙΟΥΡΙΑΣ',230),(639,'ΠΑΝΑΓΙΑΣ',230),(640,'ΠΑΡΑΣΚΕΥΗΣ',230),(641,'ΚΑΡΠΕΡΟΥ',231),(642,'ΚΑΤΑΚΑΛΗΣ',231),(643,'ΤΡΙΚΟΚΚΙΑΣ',231),(644,'ΑΥΓΗΣ',232),(645,'ΚΟΡΟΜΗΛΕΑΣ',232),(646,'ΛΕΥΚΗΣ',232),(647,'ΜΑΝΙΑΚΩΝ',232),(648,'ΟΜΟΡΦΟΚΚΛΗΣΙΑΣ',232),(649,'ΠΕΝΤΑΒΡΥΣΟΥ',232),(650,'ΤΣΑΚΟΝΗΣ',232),(651,'ΧΙΛΙΟΔΕΝΔΡΟΥ',232),(652,'ΒΑΣΙΛΕΙΑΔΟΣ',233),(653,'ΚΟΡΗΣΟΥ',233),(654,'ΛΙΘΙΑΣ',233),(655,'ΜΕΛΙΣΣΟΤΟΠΟΥ',233),(656,'ΒΥΣΣΙΝΕΑΣ',234),(657,'ΜΕΤΑΜΟΡΦΩΣΕΩΣ',234),(658,'ΟΞΥΑΣ',234),(659,'ΠΟΛΥΚΕΡΑΣΟΥ',234),(660,'ΣΙΔΗΡΟΧΩΡΙΟΥ',234),(661,'ΤΟΙΧΙΟΥ',234),(662,'ΚΑΣΤΟΡΙΑΣ',235),(663,'ΔΕΝΔΡΟΧΩΡΙΟΥ',236),(664,'ΙΕΡΟΠΗΓΗΣ',236),(665,'ΚΛΕΙΣΟΥΡΑΣ',237),(666,'ΑΓΙΟΥ ΑΝΤΩΝΙΟΥ',238),(667,'ΓΑΒΡΟΥ',238),(668,'ΚΡΑΝΙΩΝΟΣ',238),(669,'ΜΑΚΡΟΧΩΡΙΟΥ',238),(670,'ΜΑΥΡΟΚΑΜΠΟΥ',238),(671,'ΜΕΛΑ',238),(672,'ΧΑΛΑΡΩΝ',238),(673,'ΔΙΣΠΗΛΙΟΥ',239),(674,'ΜΑΥΡΟΧΩΡΙΟΥ',239),(675,'ΠΟΛΥΚΑΡΠΗΣ',239),(676,'ΑΓΙΑ ΚΥΡΙΑΚΗ',240),(677,'ΚΑΛΟΧΩΡΙΟΥ',240),(678,'ΜΕΣΟΠΟΤΑΜΙΑΣ',240),(679,'ΟΙΝΟΗΣ',240),(680,'ΠΤΕΡΙΑΣ',240),(681,'ΔΙΠΟΤΑΜΙΑΣ',241),(682,'ΚΟΜΝΗΝΑΔΩΝ',241),(683,'ΠΟΛΥΑΝΕΜΟΥ',241),(684,'ΧΙΟΝΑΤΟΥ',241),(685,'ΕΠΤΑΧΩΡΙΟΥ',242),(686,'ΖΟΥΖΟΥΛΗΣ',242),(687,'ΧΡΥΣΗΣ',242),(688,'ΓΡΑΜΟΥ',243),(689,'ΚΟΤΥΛΗΣ',244),(690,'ΚΥΨΕΛΗΣ',244),(691,'ΝΕΣΤΟΡΙΟΥ',244),(692,'ΠΤΕΛΕΑΣ',244),(693,'ΑΓΙΟΥ ΗΛΙΑ',245),(694,'ΑΜΜΟΥΔΑΡΑΣ',245),(695,'ΑΡΓΟΥΣ ΟΡΕΣΤΙΚΟΥ',245),(696,'ΑΣΠΡΟΚΚΛΗΣΙΑΣ',245),(697,'ΒΡΑΧΟΥ',245),(698,'ΔΙΑΛΕΚΤΟΥ',245),(699,'ΚΑΣΤΑΝΟΦΥΤΟΥ',245),(700,'ΛΑΓΚΑΣ',245),(701,'ΛΑΚΚΩΜΑΤΩΝ',245),(702,'ΜΕΛΑΝΘΙΟΥ',245),(703,'ΝΟΣΤΙΜΟΥ',245),(704,'ΣΠΗΛΑΙΩΝ',245),(705,'ΣΠΗΛΙΟΥ',245),(706,'ΑΜΠΕΛΟΚΗΠΩΝ',246),(707,'ΒΟΓΑΤΣΙΚΟΥ',246),(708,'ΓΕΡΜΑ',246),(709,'ΚΩΣΤΑΡΑΖΙΟΥ',246),(710,'ΜΗΛΙΤΣΑΣ',246),(711,'ΓΑΛΑΤΙΝΗΣ',247),(712,'ΕΡΑΤΥΡΑΣ',247),(713,'ΚΑΛΟΝΕΡΙΟΥ',247),(714,'ΝΑΜΑΤΩΝ',247),(715,'ΠΕΛΕΚΑΝΟΥ',247),(716,'ΣΙΣΑΝΙΟΥ',247),(717,'ΑΗΔΟΝΟΧΩΡΙΟΥ',248),(718,'ΑΛΙΑΚΜΟΝΟΣ',248),(719,'ΑΞΙΟΚΑΣΤΡΟΥ',248),(720,'ΑΣΠΡΟΥΛΑΣ',248),(721,'ΒΕΛΑΝΙΔΙΑΣ',248),(722,'ΔΡΥΟΒΟΥΝΟΥ',248),(723,'ΛΕΥΚΟΘΕΑΣ',248),(724,'ΜΕΣΟΛΟΓΓΟΥ',248),(725,'ΜΟΛΟΧΑΣ',248),(726,'ΝΕΑΠΟΛΗΣ',248),(727,'ΠΕΠΟΝΙΑΣ',248),(728,'ΠΕΡΙΣΤΕΡΑΣ',248),(729,'ΠΛΑΤΑΝΙΑΣ',248),(730,'ΠΟΛΥΛΑΚΚΟΥ',248),(731,'ΠΥΛΩΡΙΟΥ',248),(732,'ΣΗΜΑΝΤΡΟΥ',248),(733,'ΣΚΑΛΟΧΩΡΙΟΥ',248),(734,'ΤΡΑΠΕΖΙΤΣΗΣ',248),(735,'ΧΕΙΜΕΡΙΝΟΥ',248),(736,'ΧΟΡΗΓΟΥ',248),(737,'ΑΓΙΑΣ ΣΩΤΗΡΑΣ',249),(738,'ΒΥΘΟΥ',249),(739,'ΔΙΛΟΦΟΥ',249),(740,'ΠΕΝΤΑΛΟΦΟΥ',249),(741,'ΜΙΚΡΟΚΑΣΤΡΟΥ',250),(742,'ΠΑΛΑΙΟΚΑΣΤΡΟΥ',250),(743,'ΣΙΑΤΙΣΤΗΣ',250),(744,'ΑΓΙΑΣΜΑΤΟΣ',251),(745,'ΑΓΙΩΝ ΑΝΑΡΓΥΡΩΝ',251),(746,'ΑΝΘΟΥΣΗΣ',251),(747,'ΑΝΘΟΧΩΡΙΟΥ',251),(748,'ΑΥΓΕΡΙΝΟΥ',251),(749,'ΒΟΥΧΩΡΙΝΑΣ',251),(750,'ΒΡΟΝΤΗΣ',251),(751,'ΔΑΜΑΣΚΗΝΙΑΣ',251),(752,'ΔΑΦΝΗΣ',251),(753,'ΔΙΧΕΙΜΑΡΡΟΥ',251),(754,'ΔΡΑΓΑΣΙΑΣ',251),(755,'ΖΩΝΗΣ',251),(756,'ΚΛΕΙΣΩΡΕΙΑΣ',251),(757,'ΚΟΡΥΦΗΣ',251),(758,'ΚΡΙΜΗΝΙΟΥ',251),(759,'ΛΙΚΝΑΔΩΝ',251),(760,'ΛΟΥΒΡΗΣ',251),(761,'ΛΟΥΚΟΜΙΟΥ',251),(762,'ΜΟΡΦΗΣ',251),(763,'ΟΜΑΛΗΣ',251),(764,'ΠΛΑΚΙΔΑΣ',251),(765,'ΠΟΛΥΚΑΣΤΑΝΟΥ',251),(766,'ΡΟΔΟΧΩΡΙΟΥ',251),(767,'ΣΤΑΥΡΟΔΡΟΜΙΟΥ',251),(768,'ΤΣΟΤΙΛΙΟΥ',251),(769,'ΧΡΥΣΑΥΓΗΣ',251),(770,'ΑΓΙΟΥ ΧΡΙΣΤΟΦΟΡΟΥ',252),(771,'ΕΡΜΑΚΙΑΣ',252),(772,'ΚΑΡΥΟΧΩΡΙΟΥ',252),(773,'ΣΠΗΛΙΑΣ',252),(774,'ΑΝΑΤΟΛΙΚΟΥ',253),(775,'ΚΟΜΝΗΝΩΝ',253),(776,'ΜΕΣΟΒΟΥΝΟΥ',253),(777,'ΠΥΡΓΩΝ',253),(778,'ΒΛΑΣΤΗΣ',254),(779,'ΑΝΑΡΡΑΧΗΣ',255),(780,'ΑΡΔΑΣΣΗΣ',255),(781,'ΕΜΠΟΡΙΟΥ',255),(782,'ΜΗΛΟΧΩΡΙΟΥ',255),(783,'ΦΟΥΦΑ',255),(784,'ΑΣΒΕΣΤΟΠΕΤΡΑΣ',256),(785,'ΓΑΛΑΤΕΙΑΣ',256),(786,'ΔΡΟΣΕΡΟΥ',256),(787,'ΚΑΡΔΙΑΣ',256),(788,'ΚΟΜΑΝΟΥ',256),(789,'ΜΑΥΡΟΠΗΓΗΣ',256),(790,'ΟΛΥΜΠΙΑΔΟΣ',256),(791,'ΠΕΝΤΑΒΡΥΣΟΥ',256),(792,'ΠΕΡΔΙΚΚΑ',256),(793,'ΠΡΟΑΣΤΙΟΥ',256),(794,'ΠΤΕΛΕΩΝΟΣ',256),(795,'ΠΤΟΛΕΜΑΪΔΟΣ',256),(796,'ΑΓΙΑΣ ΠΑΡΑΣΚΕΥΗΣ',257),(797,'ΑΙΑΝΗΣ',257),(798,'ΚΕΡΑΣΕΑ',257),(799,'ΚΤΕΝΙΟΝ',257),(800,'ΡΟΔΙΑΝΗΣ',257),(801,'ΡΥΜΝΙΟΥ',257),(802,'ΧΡΩΜΙΟΥ',257),(803,'ΛΙΒΕΡΩΝ',258),(804,'ΜΑΥΡΟΔΕΝΔΡΙΟΥ',258),(805,'ΠΟΝΤΟΚΩΜΗΣ',258),(806,'ΣΙΔΕΡΑ',258),(807,'ΑΜΥΓΔΑΛΕΑΣ',259),(808,'ΑΝΩ ΚΩΜΗΣ',259),(809,'ΚΑΙΣΑΡΕΙΑΣ',259),(810,'ΚΑΤΩ ΚΩΜΗΣ',259),(811,'ΚΟΝΤΟΒΟΥΝΙΟΥ',259),(812,'ΚΡΟΚΟΥ',259),(813,'ΜΗΛΕΑ',259),(814,'ΣΠΑΡΤΟΥ',259),(815,'ΑΓΙΟΥ ΔΗΜΗΤΡΙΟΥ',260),(816,'ΑΓΙΟΥ ΧΑΡΑΛΑΜΠΟΥ',260),(817,'ΑΚΡΙΝΗΣ',260),(818,'ΑΥΓΗΣ',260),(819,'ΒΟΣΚΟΧΩΡΙΟΥ',260),(820,'ΔΡΕΠΑΝΟΥ',260),(821,'ΚΑΠΝΟΧΩΡΙΟΥ',260),(822,'ΚΛΕΙΤΟΥ',260),(823,'ΚΟΙΛΑΔΟΣ',260),(824,'ΠΟΛΥΜΥΛΟΥ',260),(825,'ΡΥΑΚΙΟΥ',260),(826,'ΤΕΤΡΑΛΟΦΟΥ',260),(827,'ΑΛΩΝΑΚΙΩΝ',261),(828,'ΑΝΘΟΤΟΠΟΥ',261),(829,'ΑΡΓΙΛΟΥ',261),(830,'ΒΑΤΕΡΟΥ',261),(831,'ΕΞΟΧΗΣ',261),(832,'ΚΑΛΑΜΙΑΣ',261),(833,'ΚΑΡΥΔΙΤΣΑΣ',261),(834,'ΚΟΖΑΝΗΣ',261),(835,'ΚΟΙΛΩΝ',261),(836,'ΛΕΥΚΟΒΡΥΣΗΣ',261),(837,'ΛΕΥΚΟΠΗΓΗΣ',261),(838,'ΛΥΓΕΡΗΣ',261),(839,'ΜΕΤΑΜΟΡΦΩΣΕΩΣ',261),(840,'ΝΕΑΣ ΝΙΚΟΠΟΛΗΣ',261),(841,'ΞΗΡΟΛΙΜΝΗΣ',261),(842,'ΟΙΝΟΗΣ',261),(843,'ΠΕΤΡΑΝΩΝ',261),(844,'ΠΡΩΤΟΧΩΡΙΟΥ',261),(845,'ΠΤΕΛΕΑΣ',261),(846,'ΣΚΗΤΗΣ',261),(847,'ΧΑΡΑΥΓΗΣ',261),(848,'ΑΓΙΑΣ ΚΥΡΙΑΚΗΣ',262),(849,'ΒΕΛΒΕΝΤΟΥ',262),(850,'ΚΑΤΑΦΥΓΙΟΥ',262),(851,'ΠΟΛΥΦΥΤΟΥ',262),(852,'ΕΛΑΤΗΣ',263),(853,'ΜΙΚΡΟΒΑΛΤΟΥ',263),(854,'ΤΡΑΝΟΒΑΛΤΟΥ',263),(855,'ΛΙΒΑΔΕΡΟΥ',264),(856,'ΑΥΛΩΝ',265),(857,'ΒΑΘΥΛΑΚΚΟΥ',265),(858,'ΓΟΥΛΩΝ',265),(859,'ΙΜΕΡΩΝ',265),(860,'ΚΑΣΤΑΝΙΑΣ',265),(861,'ΚΡΑΝΙΔΙΩΝ',265),(862,'ΛΕΥΚΑΡΩΝ',265),(863,'ΜΕΣΙΑΝΗΣ',265),(864,'ΜΕΤΑΞΑ',265),(865,'ΝΕΡΑΙΔΑΣ',265),(866,'ΠΛΑΤΑΝΟΡΡΕΥΜΑΤΟΣ',265),(867,'ΠΟΛΥΡΡΑΧΟΥ',265),(868,'ΡΟΔΙΤΟΥ',265),(869,'ΣΕΡΒΙΩΝ',265),(870,'ΤΡΙΓΩΝΙΚΟΥ',265),(871,'ΑΓΡΑΠΙΔΕΩΝ',266),(872,'ΑΕΤΟΥ',266),(873,'ΑΝΑΡΓΥΡΩΝ',266),(874,'ΑΣΠΡΟΓΕΙΩΝ',266),(875,'ΒΑΛΤΟΝΕΡΩΝ',266),(876,'ΛΙΜΝΟΧΩΡΙΟΥ',266),(877,'ΠΕΔΙΝΟΥ',266),(878,'ΣΚΛΗΘΡΟΥ',266),(879,'ΑΓΙΟΥ ΠΑΝΤΕΛΕΗΜΟΝΟΣ',267),(880,'ΑΜΥΝΤΑΙΟΥ',267),(881,'ΚΕΛΛΗΣ',267),(882,'ΚΛΕΙΔΙΟΥ',267),(883,'ΞΙΝΟΥ ΝΕΡΟΥ',267),(884,'ΠΕΤΡΩΝ',267),(885,'ΡΟΔΩΝΟΣ',267),(886,'ΦΑΝΟΥ',267),(887,'ΒΑΡΙΚΟΥ',268),(888,'ΛΕΧΟΒΟΥ',269),(889,'ΝΥΜΦΑΙΟΥ',270),(890,'ΑΝΤΙΓΟΝΕΙΑΣ',271),(891,'ΒΕΓΟΡΩΝ',271),(892,'ΛΕΒΑΙΑΣ(ΛΑΚΚΙΑΣ)',271),(893,'ΜΑΝΙΑΚΙΟΥ',271),(894,'ΠΕΛΑΡΓΟΥ',271),(895,'ΦΑΡΑΓΓΙΟΥ',271),(896,'ΦΙΛΩΤΑ',271),(897,'ΒΑΤΟΧΩΡΙΟΥ',272),(898,'ΚΡΥΣΤΑΛΛΟΠΗΓΗΣ',272),(899,'ΚΩΤΑ',272),(900,'ΑΓΙΟΥ ΑΧΙΛΛΕΙΟΥ',273),(901,'ΑΓΙΟΥ ΓΕΡΜΑΝΟΥ',273),(902,'ΑΝΤΑΡΤΙΚΟΥ',273),(903,'ΒΡΟΝΤΕΡΟΥ',273),(904,'ΚΑΛΛΙΘΕΑΣ',273),(905,'ΚΑΡΥΩΝ',273),(906,'ΛΑΙΜΟΥ',273),(907,'ΛΕΥΚΩΝΟΣ',273),(908,'ΜΙΚΡΟΛΙΜΝΗΣ',273),(909,'ΠΙΣΟΔΕΡΙΟΥ',273),(910,'ΠΛΑΤΕΟΣ',273),(911,'ΠΡΑΣΙΝΟΥ',273),(912,'ΨΑΡΑΔΩΝ',273),(913,'ΑΓΙΑΣ ΠΑΡΑΣΚΕΥΗΣ',274),(914,'ΑΚΡΙΤΑ',274),(915,'ΑΝΩ ΚΑΛΛΙΝΙΚΗΣ',274),(916,'ΑΝΩ ΚΛΕΙΝΩΝ',274),(917,'ΕΘΝΙΚΟΥ',274),(918,'ΚΑΤΩ ΚΑΛΛΙΝΙΚΗΣ',274),(919,'ΚΑΤΩ ΚΛΕΙΝΩΝ',274),(920,'ΚΛΑΔΟΡΡΑΧΗΣ',274),(921,'ΚΡΑΤΕΡΟΥ',274),(922,'ΜΑΡΙΝΗΣ',274),(923,'ΜΕΣΟΚΑΜΠΟΥ',274),(924,'ΜΕΣΟΧΩΡΙΟΥ',274),(925,'ΝΕΟΥ ΚΑΥΚΑΣΟΥ',274),(926,'ΝΙΚΗΣ',274),(927,'ΠΑΡΟΡΕΙΟΥ',274),(928,'ΠΟΛΥΠΛΑΤΑΝΟΥ',274),(929,'ΑΧΛΑΔΑΣ',275),(930,'ΒΕΥΗΣ',275),(931,'ΙΤΕΑΣ',275),(932,'ΛΟΦΩΝ',275),(933,'ΜΕΛΙΤΗΣ',275),(934,'ΝΕΟΧΩΡΑΚΙΟΥ',275),(935,'ΠΑΛΑΙΣΤΡΑΣ',275),(936,'ΠΑΠΠΑΓΙΑΝΝΗ',275),(937,'ΣΙΤΑΡΙΑΣ',275),(938,'ΣΚΟΠΟΥ',275),(939,'ΤΡΙΠΟΤΑΜΟΥ',275),(940,'ΑΓΙΟΥ ΒΑΡΘΟΛΟΜΑΙΟΥ',276),(941,'ΑΜΜΟΧΩΡΙΟΥ',276),(942,'ΑΝΩ ΥΔΡΟΥΣΣΗΣ',276),(943,'ΑΤΡΑΠΟΥ',276),(944,'ΔΡΟΣΟΠΗΓΗΣ',276),(945,'ΚΟΛΧΙΚΗΣ',276),(946,'ΛΕΠΤΟΚΑΡΥΩΝ',276),(947,'ΠΕΡΑΣΜΑΤΟΣ',276),(948,'ΠΟΛΥΠΟΤΑΜΟΥ',276),(949,'ΤΡΙΑΝΤΑΦΥΛΛΕΑΣ',276),(950,'ΤΡΟΠΑΙΟΥΧΟΥ',276),(951,'ΥΔΡΟΥΣΣΗΣ',276),(952,'ΦΛΑΜΠΟΥΡΟΥ',276),(953,'ΑΛΩΝΩΝ',277),(954,'ΑΡΜΕΝΟΧΩΡΙΟΥ',277),(955,'ΚΟΡΥΦΗΣ',277),(956,'ΜΕΣΟΝΗΣΙΟΥ',277),(957,'ΠΡΩΤΗΣ',277),(958,'ΣΚΟΠΙΑΣ',277),(959,'ΤΡΙΒΟΥΝΟΥ',277),(960,'ΦΛΩΡΙΝΗΣ',277),(961,'ΑΝΕΖΗΣ',278),(962,'ΒΙΓΛΑΣ',278),(963,'ΓΑΒΡΙΑΣ',278),(964,'ΚΑΛΟΓΕΡΙΚΟΥ',278),(965,'ΚΟΡΩΝΗΣΙΑΣ',278),(966,'ΠΟΛΥΔΡΟΣΟΥ',278),(967,'ΡΑΧΗΣ',278),(968,'ΣΤΡΟΓΓΥΛΗΣ',278),(969,'ΨΑΘΟΤΟΠΙΟΥ',278),(970,'ΑΡΤΑΙΩΝ',279),(971,'ΚΕΡΑΜΑΤΩΝ',279),(972,'ΚΩΣΤΑΚΙΩΝ',279),(973,'ΛΙΜΙΝΗΣ',279),(974,'ΒΛΑΧΕΡΝΑΣ',280),(975,'ΓΡΑΜΜΕΝΙΤΣΗΣ',280),(976,'ΓΡΙΜΠΟΒΟΥ',280),(977,'ΚΟΡΦΟΒΟΥΝΙΟΥ',280),(978,'ΑΜΜΟΤΟΠΟΥ',281),(979,'ΔΑΦΝΩΤΗΣ',281),(980,'ΚΑΜΠΗΣ',281),(981,'ΠΑΝΤΑΝΑΣΣΗΣ',281),(982,'ΠΙΣΤΙΑΝΩΝ',281),(983,'ΡΟΔΑΥΓΗΣ',281),(984,'ΣΚΟΥΠΑΣ',281),(985,'ΦΑΝΕΡΩΜΕΝΗΣ',281),(986,'ΑΓΙΟΥ ΣΠΥΡΙΔΩΝΟΣ',282),(987,'ΚΑΛΑΜΙΑΣ',282),(988,'ΚΑΛΟΒΑΤΟΥ',282),(989,'ΚΙΡΚΙΖΑΤΩΝ',282),(990,'ΡΟΚΚΑΣ',282),(991,'ΧΑΛΚΙΑΔΩΝ',282),(992,'ΔΗΜΑΡΙΟΥ',283),(993,'ΔΙΑΣΕΛΛΟΥ',283),(994,'ΚΛΕΙΔΙΟΥ',283),(995,'ΠΕΤΡΑΣ',283),(996,'ΣΚΟΥΛΗΚΑΡΙΑΣ',283),(997,'ΑΝΩ ΚΑΛΕΝΤΙΝΗΣ',284),(998,'ΒΕΛΕΝΤΖΙΚΟΥ',284),(999,'ΔΙΧΟΜΟΙΡΙΟΥ',284),(1000,'ΡΕΤΣΙΑΝΩΝ',284),(1001,'ΑΣΤΡΟΧΩΡΙΟΥ',285),(1002,'ΕΛΑΤΗΣ',285),(1003,'ΚΑΣΤΑΝΕΑΣ',285),(1004,'ΜΕΓΑΛΟΧΑΡΗΣ',285),(1005,'ΜΕΣΟΠΥΡΓΟΥ',285),(1006,'ΜΗΛΙΑΝΩΝ',285),(1007,'ΠΗΓΩΝ',285),(1008,'ΑΓΝΑΝΤΩΝ',286),(1009,'ΓΡΑΙΚΙΚΟΥ',286),(1010,'ΚΑΤΑΡΡΑΚΤΟΥ',286),(1011,'ΚΟΥΚΚΟΥΛΙΩΝ',286),(1012,'ΚΤΙΣΤΑΔΩΝ',286),(1013,'ΛΕΠΙΑΝΩΝ',286),(1014,'ΜΙΚΡΟΣΠΗΛΙΑΣ',286),(1015,'ΡΑΜΙΑΣ',286),(1016,'ΑΘΑΜΑΝΙΟΥ',287),(1017,'ΑΝΕΜΟΡΡΑΧΗΣ',287),(1018,'ΒΟΥΡΓΑΡΕΛΙΟΥ',287),(1019,'ΔΙΣΤΡΑΤΟΥ',287),(1020,'ΚΑΤΩ ΑΘΑΜΑΝΙΟΥ',287),(1021,'ΚΑΤΩ ΚΑΛΕΝΤΙΝΗΣ',287),(1022,'ΚΑΨΑΛΩΝ',287),(1023,'ΚΕΝΤΡΙΚΟΥ',287),(1024,'ΚΥΨΕΛΗΣ',287),(1025,'ΜΕΣΟΥΝΤΑΣ',287),(1026,'ΠΑΛΑΙΟΚΑΤΟΥΝΟΥ',287),(1027,'ΤΕΤΡΑΚΩΜΟΥ',287),(1028,'ΘΕΟΔΩΡΙΑΝΩΝ',288),(1029,'ΜΕΛΙΣΣΟΥΡΓΩΝ',289),(1030,'ΑΓΙΑΣ ΠΑΡΑΣΚΕΥΗΣ',290),(1031,'ΑΚΡΟΠΟΤΑΜΙΑΣ',290),(1032,'ΛΟΥΤΡΟΤΟΠΟΥ',290),(1033,'ΝΕΟΧΩΡΙΟΥ',290),(1034,'ΠΑΧΥΚΑΛΑΜΟΥ',290),(1035,'ΠΕΡΑΝΘΗΣ',290),(1036,'ΣΥΚΕΩΝ',290),(1037,'ΚΟΜΜΕΝΟΥ',291),(1038,'ΚΟΜΠΟΤΙΟΥ',292),(1039,'ΣΕΛΛΑΔΩΝ',292),(1040,'ΦΩΤΕΙΝΟΥ',292),(1041,'ΜΑΡΚΙΝΙΑΔΑΣ',293),(1042,'ΜΕΓΑΡΧΗΣ',293),(1043,'ΠΕΤΑ',293),(1044,'ΑΓΙΑΣ ΜΑΡΙΝΗΣ',294),(1045,'ΑΓΙΟΥ ΒΛΑΣΙΟΥ',294),(1046,'ΓΡΑΙΚΟΧΩΡΙΟΥ',294),(1047,'ΗΓΟΥΜΕΝΙΤΣΗΣ',294),(1048,'ΚΑΣΤΡΙΟΥ',294),(1049,'ΚΡΥΟΒΡΥΣΗΣ',294),(1050,'ΛΑΔΟΧΩΡΙΟΥ',294),(1051,'ΜΑΥΡΟΥΔΙΟΥ',294),(1052,'ΝΕΑΣ ΣΕΛΕΥΚΕΙΑΣ',294),(1053,'ΕΛΕΥΘΕΡΙΟΥ',295),(1054,'ΚΑΡΤΕΡΙΟΥ',295),(1055,'ΚΑΤΑΒΟΘΡΑΣ',295),(1056,'ΜΑΖΑΡΑΚΙΑΣ',295),(1057,'ΜΑΡΓΑΡΙΤΙΟΥ',295),(1058,'ΜΕΣΟΒΟΥΝΙΟΥ',295),(1059,'ΣΠΑΘΑΡΑΙΩΝ',295),(1060,'ΓΕΡΟΠΛΑΤΑΝΟΣ',296),(1061,'ΔΡΑΜΕΣΗ',296),(1062,'ΔΡΙΜΙΤΣΑ',296),(1063,'ΚΟΡΙΤΙΑΝΗΣ',296),(1064,'ΠΑΡΑΠΟΤΑΜΟΥ',296),(1065,'ΠΕΡΔΙΚΑΣ',297),(1066,'ΑΡΓΥΡΟΤΟΠΟΥ',298),(1067,'ΠΛΑΤΑΡΙΑΣ',298),(1068,'ΣΥΒΟΤΩΝ',298),(1069,'ΦΑΣΚΟΜΗΛΙΑΣ',298),(1070,'ΓΑΡΔΙΚΙΟΥ ΣΟΥΛΙΟΥ',299),(1071,'ΓΛΥΚΗΣ',299),(1072,'ΣΚΑΝΔΑΛΟΥ',299),(1073,'ΧΟΙΚΑΣ',299),(1074,'ΑΓΙΑΣ ΚΥΡΙΑΚΗΣ',300),(1075,'ΑΜΠΕΛΙΑΣ',300),(1076,'ΓΚΡΙΚΑΣ',300),(1077,'ΕΛΑΤΑΡΙΑΣ',300),(1078,'ΖΕΡΒΟΧΩΡΙΟΥ',300),(1079,'ΚΑΛΛΙΘΕΑΣ ΣΟΥΛΙΟΥ',300),(1080,'ΚΑΡΒΟΥΝΑΡΙΟΥ',300),(1081,'ΚΑΡΙΩΤΙΟΥ',300),(1082,'ΚΡΥΣΤΑΛΛΟΠΗΓΗΣ',300),(1083,'ΝΕΟΧΩΡΙΟΥ',300),(1084,'ΞΗΡΟΛΟΦΟΥ',300),(1085,'ΠΑΓΚΡΑΤΩΝ',300),(1086,'ΠΑΡΑΜΥΘΙΑΣ',300),(1087,'ΠΕΝΤΕ ΕΚΚΛΗΣΙΩΝ',300),(1088,'ΠΕΤΟΥΣΙΟΥ',300),(1089,'ΠΕΤΡΟΒΙΤΣΑΣ',300),(1090,'ΠΛΑΚΩΤΗΣ',300),(1091,'ΠΟΛΥΔΡΟΣΟΥ',300),(1092,'ΠΡΟΔΡΟΜΙΟΥ',300),(1093,'ΣΑΛΟΝΙΚΗΣ',300),(1094,'ΣΕΒΑΣΤΟΥ',300),(1095,'ΧΡΥΣΑΥΓΗΣ',300),(1096,'ΨΑΚΑΣ',300),(1097,'ΑΥΛΟΤΟΠΟΥ',301),(1098,'ΚΟΥΚΟΥΛΙΩΝ',301),(1099,'ΣΑΜΟΝΙΔΑΣ',301),(1100,'ΤΣΑΓΓΑΡΙΟΥ',301),(1101,'ΦΡΟΣΥΝΗΣ',301),(1102,'ΑΣΠΡΟΚΚΛΗΣΙΟΥ',302),(1103,'ΚΕΣΤΡΙΝΗΣ',302),(1104,'ΡΑΓΙΟΥ',302),(1105,'ΣΑΓΙΑΔΑΣ',302),(1106,'ΣΜΕΡΤΟΥ',302),(1107,'ΑΓΙΟΥ ΝΙΚΟΛΑΟΥ',303),(1108,'ΑΓΙΩΝ ΠΑΝΤΩΝ',303),(1109,'ΑΕΤΟΥ',303),(1110,'ΑΜΠΕΛΩΝΟΣ',303),(1111,'ΑΝΑΒΡΥΤΟΥ',303),(1112,'ΑΧΛΑΔΕΑΣ',303),(1113,'ΒΑΒΟΥΡΙΟΥ',303),(1114,'ΒΡΥΣΕΛΛΑΣ',303),(1115,'ΓΑΡΔΙΚΙΟΥ (ΑΓΙΟΥ ΓΕΩΡΓΙΟΥ)',303),(1116,'ΓΙΡΟΜΕΡΙΟΥ',303),(1117,'ΓΟΛΑΣ',303),(1118,'ΚΑΛΛΙΘΕΑΣ',303),(1119,'ΚΑΤΩ ΞΕΧΩΡΟΥ',303),(1120,'ΚΕΡΑΜΙΤΣΗΣ',303),(1121,'ΚΕΡΑΣΟΧΩΡΙΟΥ',303),(1122,'ΚΕΦΑΛΟΧΩΡΙΟΥ',303),(1123,'ΚΟΚΚΙΝΙΑΣ',303),(1124,'ΚΟΚΚΙΝΟΛΙΘΑΡΙΟΥ',303),(1125,'ΚΟΥΡΕΜΑΔΙΟΥ',303),(1126,'ΚΡΥΟΝΕΡΙΟΥ',303),(1127,'ΚΥΠΑΡΙΣΣΟΥ',303),(1128,'ΛΕΠΤΟΚΑΡΥΑΣ',303),(1129,'ΛΙΑΣ',303),(1130,'ΛΙΣΤΑΣ',303),(1131,'ΜΑΛΟΥΝΙΟΥ',303),(1132,'ΜΗΛΕΑΣ',303),(1133,'ΞΕΧΩΡΟΥ',303),(1134,'ΠΑΛΑΙΟΚΚΛΗΣΙΟΥ',303),(1135,'ΠΑΛΑΙΟΧΩΡΙΟΥ',303),(1136,'ΠΑΛΑΜΠΑ',303),(1137,'ΠΗΓΑΔΟΥΛΙΑ',303),(1138,'ΠΛΑΙΣΙΟΥ',303),(1139,'ΠΛΑΤΑΝΟΥ',303),(1140,'ΡΑΒΕΝΗΣ',303),(1141,'ΡΙΖΟΥ',303),(1142,'ΣΙΔΕΡΗΣ',303),(1143,'ΤΡΙΚΟΡΥΦΟΥ',303),(1144,'ΤΣΑΜΑΝΤΑ',303),(1145,'ΦΑΝΕΡΩΜΕΝΗΣ',303),(1146,'ΦΙΛΙΑΤΩΝ',303),(1147,'ΦΟΙΝΙΚΙΟΥ',303),(1148,'ΧΑΡΑΥΓΗΣ',303),(1149,'ΒΑΘΥΠΕΔΟΥ',304),(1150,'ΚΑΛΑΡΡΥΤΩΝ',305),(1151,'ΑΕΤΟΡΡΑΧΗΣ',306),(1152,'ΕΛΛΗΝΙΚΟΥ',306),(1153,'ΚΑΛΕΝΤΖΙΟΥ',306),(1154,'ΚΟΡΙΤΙΑΝΗΣ',306),(1155,'ΜΟΝΟΛΙΘΙΟΥ',306),(1156,'ΠΗΓΑΔΙΩΝ',306),(1157,'ΠΛΑΙΣΙΩΝ ΜΑΛΑΚΑΣΙΟΥ',306),(1158,'ΠΛΑΤΑΝΟΥΣΣΗΣ',306),(1159,'ΦΟΡΤΟΣΙΟΥ',306),(1160,'ΜΑΤΣΟΥΚΙΟΥ',307),(1161,'ΑΜΠΕΛΟΧΩΡΙΟΥ',308),(1162,'ΠΡΑΜΑΝΤΩΝ',308),(1163,'ΡΑΦΤΑΝΑΙΩΝ',308),(1164,'ΣΥΡΡΑΚΟΥ',309),(1165,'ΒΑΠΤΙΣΤΟΥ',310),(1166,'ΚΕΔΡΟΥ',310),(1167,'ΜΙΧΑΛΙΤΣΙΟΥ',310),(1168,'ΠΑΛΑΙΟΧΩΡΙΟΥ ΣΙΡΑΚΟΥ',310),(1169,'ΠΕΤΡΟΒΟΥΝΙΟΥ',310),(1170,'ΠΟΤΙΣΤΙΚΩΝ',310),(1171,'ΠΡΟΣΗΛΙΟΥ',310),(1172,'ΧΟΥΛΙΑΡΑΔΩΝ',310),(1173,'ΑΒΓΟΥ',311),(1174,'ΑΓΙΑΣ ΤΡΙΑΔΟΣ',311),(1175,'ΒΑΡΛΑΑΜ',311),(1176,'ΒΟΥΛΙΑΣΤΗΣ',311),(1177,'ΕΠΙΣΚΟΠΙΚΟΥ',311),(1178,'ΘΕΡΙΑΚΗΣΙΟΥ',311),(1179,'ΚΟΠΑΝΗΣ',311),(1180,'ΚΟΥΚΛΕΣΙΟΥ',311),(1181,'ΚΡΥΦΟΒΟΥ',311),(1182,'ΜΕΛΙΑΣ',311),(1183,'ΜΟΥΣΙΩΤΙΤΣΗΣ',311),(1184,'ΜΥΡΟΔΑΦΝΗΣ',311),(1185,'ΠΕΡΔΙΚΑΣ',311),(1186,'ΠΕΣΤΩΝ',311),(1187,'ΡΑΒΕΝΙΩΝ',311),(1188,'ΣΕΡΒΙΑΝΩΝ',311),(1189,'ΣΚΛΙΒΑΝΗΣ',311),(1190,'ΤΕΡΟΒΟΥ',311),(1191,'ΑΓΙΑΣ ΑΝΑΣΤΑΣΙΑΣ',312),(1192,'ΔΡΑΓΟΨΑΣ',312),(1193,'ΔΡΑΜΕΣΙΩΝ',312),(1194,'ΔΩΔΩΝΗΣ',312),(1195,'ΚΩΣΤΑΝΙΑΝΗΣ',312),(1196,'ΜΑΝΤΕΙΟΥ',312),(1197,'ΜΕΛΙΓΓΩΝ',312),(1198,'ΠΟΛΥΓΥΡΟΥ',312),(1199,'ΨΗΝΑΣ',312),(1200,'ΑΛΕΠΟΧΩΡΙΟΥ ΜΠΟΤΣΑΡΗ',313),(1201,'ΑΡΔΟΣΕΩΣ',313),(1202,'ΑΧΛΑΔΕΩΝ',313),(1203,'ΒΑΡΓΙΑΔΩΝ',313),(1204,'ΓΕΩΡΓΑΝΩΝ',313),(1205,'ΔΕΡΒΙΖΙΑΝΩΝ',313),(1206,'ΕΛΑΦΟΥ',313),(1207,'ΜΠΕΣΤΙΑΣ',313),(1208,'ΠΑΛΑΙΟΧΩΡΙΟΥ ΜΠΟΤΣΑΡΗ',313),(1209,'ΠΕΝΤΟΛΑΚΚΟΥ',313),(1210,'ΡΩΜΑΝΟΥ',313),(1211,'ΣΕΡΙΖΙΑΝΩΝ',313),(1212,'ΣΙΣΤΡΟΥΝΙΟΥ',313),(1213,'ΣΜΥΡΤΙΑΣ',313),(1214,'ΑΓΙΟΥ ΑΝΔΡΕΟΥ',314),(1215,'ΑΓΙΟΥ ΝΙΚΟΛΑΟΥ',314),(1216,'ΑΝΘΟΧΩΡΙΟΥ',314),(1217,'ΑΡΤΟΠΟΥΛΑΣ',314),(1218,'ΑΣΠΡΟΧΩΡΙΟΥ',314),(1219,'ΒΑΛΑΝΙΔΙΑΣ',314),(1220,'ΖΩΤΙΚΟΥ',314),(1221,'ΚΑΤΑΜΑΧΗΣ',314),(1222,'ΚΕΡΑΣΕΑΣ',314),(1223,'ΚΟΥΜΑΡΙΑΣ',314),(1224,'ΛΙΠΠΑΣ',314),(1225,'ΜΠΑΟΥΣΙΩΝ',314),(1226,'ΠΑΡΔΑΛΙΤΣΗΣ',314),(1227,'ΠΛΑΤΑΝΙΩΝ',314),(1228,'ΣΕΝΙΚΟΥ',314),(1229,'ΑΓΙΑ ΠΑΡΑΣΚΕΥΗ',315),(1230,'ΑΝΘΡΑΚΙΤΗ',315),(1231,'ΓΡΕΒΕΝΙΤΙΟΥ',315),(1232,'ΔΕΜΑΤΙΟΥ',315),(1233,'ΔΟΛΙΑΝΗΣ (ΝΕΟΥ ΑΜΑΡΟΥΣΙΟΥ)',315),(1234,'ΕΛΑΤΟΧΩΡΙΟΥ',315),(1235,'ΙΤΕΑΣ',315),(1236,'ΚΑΒΑΛΛΑΡΙΟΥ',315),(1237,'ΚΑΡΥΩΝ',315),(1238,'ΚΑΣΤΑΝΩΝΟΣ ΖΑΓΟΡΙΟΥ',315),(1239,'ΜΑΚΡΙΝΟΥ',315),(1240,'ΠΕΤΡΑ',315),(1241,'ΠΟΤΑΜΙΑ',315),(1242,'ΤΡΙΣΤΕΝΟΥ',315),(1243,'ΦΛΑΜΠΟΥΡΑΡΙΟΥ',315),(1244,'ΒΟΒΟΥΣΗΣ',316),(1245,'ΑΓΙΟΥ ΜΗΝΑ',317),(1246,'ΑΝΩ ΠΕΔΙΝΩΝ',317),(1247,'ΑΡΙΣΤΗΣ',317),(1248,'ΑΣΠΡΑΓΓΕΛΩΝ',317),(1249,'ΒΙΤΣΗΣ',317),(1250,'ΔΙΚΟΡΥΦΟΥ',317),(1251,'ΔΙΛΟΦΟΥ',317),(1252,'ΔΙΠΟΤΑΜΟΥ',317),(1253,'ΕΛΑΤΗΣ',317),(1254,'ΕΛΑΦΟΤΟΠΟΥ',317),(1255,'ΚΑΛΟΥΤΑ',317),(1256,'ΚΑΤΩ ΠΕΔΙΝΩΝ',317),(1257,'ΜΑΝΑΣΣΗ',317),(1258,'ΜΕΣΟΒΟΥΝΙΟΥ',317),(1259,'ΜΟΝΟΔΕΝΔΡΙΟΥ',317),(1260,'ΠΑΠΙΓΚΟΥ',318),(1261,'ΒΡΑΔΕΤΟΥ',319),(1262,'ΒΡΥΣΟΧΩΡΙΟΥ',319),(1263,'ΗΛΙΟΧΩΡΙΟΥ',319),(1264,'ΚΑΠΕΣΟΒΟΥ',319),(1265,'ΚΗΠΩΝ',319),(1266,'ΚΟΥΚΚΟΥΛΙΟΥ',319),(1267,'ΛΑΙΣΤΗΣ',319),(1268,'ΛΕΠΤΟΚΑΡΥΑΣ ΖΑΓΟΡΙΟΥ',319),(1269,'ΝΕΓΑΔΩΝ',319),(1270,'ΣΚΑΜΝΕΛΛΙΟΥ',319),(1271,'ΤΣΕΠΕΛΟΒΟΥ',319),(1272,'ΦΡΑΓΚΑΔΩΝ',319),(1273,'ΑΣΦΑΚΑΣ',320),(1274,'ΒΑΤΑΤΑΔΩΝ',320),(1275,'ΒΛΑΧΑΤΑΝΟΥ',320),(1276,'ΓΑΒΡΙΣΙΩΝ',320),(1277,'ΛΙΓΟΨΑΣ',320),(1278,'ΜΕΤΑΜΟΡΦΩΣΗΣ',320),(1279,'ΠΕΤΣΑΛΙΟΥ',320),(1280,'ΒΑΣΙΛΟΠΟΥΛΟΥ',321),(1281,'ΔΕΛΒΙΝΑΚΟΠΟΥΛΟΥ',321),(1282,'ΚΛΗΜΑΤΙΑΣ',321),(1283,'ΚΟΚΚΙΝΟΧΩΜΑΤΟΣ',321),(1284,'ΛΕΥΚΟΘΕΑΣ',321),(1285,'ΠΑΛΙΟΥΡΗΣ',321),(1286,'ΡΑΪΚΟΥ',321),(1287,'ΣΟΥΛΟΠΟΥΛΟΥ',321),(1288,'ΔΑΦΝΟΦΥΤΟΥ',322),(1289,'ΖΙΤΣΗΣ',322),(1290,'ΚΑΡΙΤΣΗΣ',322),(1291,'ΛΙΘΙΝΟΥ',322),(1292,'ΠΡΩΤΟΠΑΠΠΑ',322),(1293,'ΑΕΤΟΠΕΤΡΑΣ ΔΩΔΩΝΗΣ',323),(1294,'ΒΕΡΕΝΙΚΗΣ',323),(1295,'ΒΟΥΤΣΑΡΑ',323),(1296,'ΒΡΟΣΙΝΑΣ',323),(1297,'ΒΡΥΣΟΥΛΑΣ',323),(1298,'ΓΙΟΥΡΓΑΝΙΣΤΑΣ',323),(1299,'ΓΚΡΙΜΠΟΒΟΥ',323),(1300,'ΓΡΑΝΙΤΣΗΣ',323),(1301,'ΓΡΑΝΙΤΣΟΠΟΥΛΑΣ',323),(1302,'ΔΕΣΠΟΤΙΚΟΥ',323),(1303,'ΔΟΒΛΑ',323),(1304,'ΕΚΚΛΗΣΟΧΩΡΙΟΥ',323),(1305,'ΖΑΛΟΓΓΟΥ',323),(1306,'ΚΑΛΟΧΩΡΙΟΥ',323),(1307,'ΚΟΥΡΕΝΤΩΝ',323),(1308,'ΠΟΛΥΔΩΡΟΥ',323),(1309,'ΡΑΔΟΒΙΖΙΟΥ',323),(1310,'ΡΙΖΟΥ',323),(1311,'ΦΩΤΕΙΝΟΥ',323),(1312,'ΧΙΝΚΑΣ',323),(1313,'ΑΓΙΟΥ ΙΩΑΝΝΟΥ',324),(1314,'ΑΝΑΡΓΥΡΩΝ',324),(1315,'ΑΝΩ ΛΑΨΙΣΤΗΣ',324),(1316,'ΒΑΓΕΝΙΤΙΟΥ',324),(1317,'ΒΟΥΝΟΠΛΑΓΙΑΣ',324),(1318,'ΓΡΑΜΜΕΝΟΥ',324),(1319,'ΕΛΕΟΥΣΗΣ',324),(1320,'ΖΩΟΔΟΧΟΥ',324),(1321,'ΚΑΤΩ ΛΑΨΙΣΤΗΣ',324),(1322,'ΛΙΓΓΟΥ',324),(1323,'ΛΟΦΙΣΚΟΥ',324),(1324,'ΜΕΓΑΛΟΥ ΓΑΡΔΙΚΙΟΥ',324),(1325,'ΝΕΟΧΩΡΙΟΥ',324),(1326,'ΠΕΡΑΤΗ',324),(1327,'ΠΕΤΡΑΛΩΝΩΝ',324),(1328,'ΠΟΛΥΛΟΦΟΥ',324),(1329,'ΡΟΔΟΤΟΠΙΟΥ',324),(1330,'ΑΝΑΤΟΛΗΣ',325),(1331,'ΜΠΑΦΡΑΣ',325),(1332,'ΝΕΟΚΑΙΣΑΡΕΙΑΣ',325),(1333,'ΕΞΟΧΗ',326),(1334,'ΙΩΑΝΝΙΤΩΝ',326),(1335,'ΜΑΡΜΑΡΩΝ',326),(1336,'ΝΕΟΧΩΡΟΠΟΥΛΟΥ',326),(1337,'ΣΤΑΥΡΑΚΙΟΥ',326),(1338,'ΑΜΠΕΛΕΙΑΣ',327),(1339,'ΑΣΒΕΣΤΟΧΩΡΙΟΥ',327),(1340,'ΚΟΝΤΣΙΚΑΣ',327),(1341,'ΚΟΣΜΗΡΑΣ',327),(1342,'ΜΑΝΟΛΙΑΣΗΣ',327),(1343,'ΜΠΙΖΑΝΙΟΥ',327),(1344,'ΠΕΔΙΝΗΣ',327),(1345,'ΝΗΣΟΥ ΙΩΑΝΝΙΝΩΝ',328),(1346,'ΑΝΑΤΟΛΙΚΗΣ',329),(1347,'ΒΑΣΙΛΙΚΗΣ',329),(1348,'ΔΑΦΝΟΥΛΑΣ',329),(1349,'ΔΡΟΣΟΧΩΡΙΟΥ',329),(1350,'ΗΛΙΟΚΑΛΗΣ',329),(1351,'ΚΑΣΤΡΙΤΣΗΣ',329),(1352,'ΚΑΤΣΙΚΑ',329),(1353,'ΚΟΥΤΣΕΛΙΟΥ',329),(1354,'ΚΡΑΨΗΣ',329),(1355,'ΛΟΓΓΑΔΩΝ',329),(1356,'ΜΟΥΖΑΚΑΙΩΝ',329),(1357,'ΠΛΑΤΑΝΙΑΣ',329),(1358,'ΠΛΑΤΑΝΟΥ',329),(1359,'ΧΑΡΟΚΟΠΙΟΥ(ΧΑΡΟΚΟΠΕΙΟΥ)',329),(1360,'ΑΜΦΙΘΕΑΣ',330),(1361,'ΚΡΑΝΟΥΛΑΣ',330),(1362,'ΚΡΥΑΣ',330),(1363,'ΚΡΥΟΒΡΥΣΗ',330),(1364,'ΛΙΓΚΙΑΔΩΝ',330),(1365,'ΜΑΖΙΑΣ',330),(1366,'ΠΕΡΑΜΑ',330),(1367,'ΠΕΡΙΒΛΕΠΤΟΥ',330),(1368,'ΣΠΟΘΩΝ',330),(1369,'ΑΕΤΟΜΗΛΙΤΣΗΣ',331),(1370,'ΔΙΣΤΡΑΤΟΥ',332),(1371,'ΑΓΙΑΣ ΒΑΡΒΑΡΑΣ',333),(1372,'ΑΓΙΑΣ ΠΑΡΑΣΚΕΥΗΣ',333),(1373,'ΑΕΤΟΠΕΤΡΑΣ',333),(1374,'ΑΗΔΟΝΟΧΩΡΙΟΥ',333),(1375,'ΑΜΑΡΑΝΤΟΥ',333),(1376,'ΑΡΜΑΤΩΝ',333),(1377,'ΓΑΝΑΔΙΟΥ',333),(1378,'ΕΛΕΥΘΕΡΟΥ',333),(1379,'ΕΞΟΧΗΣ',333),(1380,'ΗΛΙΟΡΡΑΧΗΣ',333),(1381,'ΚΑΒΑΣΙΛΩΝ',333),(1382,'ΚΑΛΛΙΘΕΑΣ',333),(1383,'ΚΛΕΙΔΩΝΙΑΣ',333),(1384,'ΚΟΝΙΤΣΗΣ',333),(1385,'ΜΑΖΙΟΥ',333),(1386,'ΜΕΛΙΣΣΟΠΕΤΡΑΣ',333),(1387,'ΜΟΛΙΣΤΗΣ',333),(1388,'ΜΟΛΥΒΔΟΣΚΕΠΑΣΤΟΥ',333),(1389,'ΜΟΝΑΣΤΗΡΙΟΥ',333),(1390,'ΝΙΚΑΝΟΡΟΣ',333),(1391,'ΠΑΔΩΝ',333),(1392,'ΠΑΛΑΙΟΣΕΛΛΙΟΥ',333),(1393,'ΠΗΓΗΣ',333),(1394,'ΠΟΥΡΝΙΑΣ',333),(1395,'ΠΥΡΓΟΥ',333),(1396,'ΑΣΗΜΟΧΩΡΙΟΥ',334),(1397,'ΒΟΥΡΜΠΙΑΝΗΣ',334),(1398,'ΓΟΡΓΟΠΟΤΑΜΟΥ',334),(1399,'ΔΡΟΣΟΠΗΓΗΣ',334),(1400,'ΚΑΣΤΑΝΕΑΣ',334),(1401,'ΚΕΦΑΛΟΧΩΡΙΟΥ ',334),(1402,'ΛΑΓΚΑΔΑΣ',334),(1403,'ΟΞΥΑΣ',334),(1404,'ΠΛΑΓΙΑΣ',334),(1405,'ΠΛΗΚΑΤΙΟΥ',334),(1406,'ΠΥΡΣΟΓΙΑΝΝΗΣ',334),(1407,'ΧΙΟΝΑΔΩΝ',334),(1408,'ΦΟΥΡΚΑΣ',335),(1409,'ΜΕΓΑΛΗΣ ΓΟΤΙΣΤΑΣ',336),(1410,'ΜΕΓΑΛΟΥ ΠΕΡΙΣΤΕΡΙΟΥ',336),(1411,'ΜΙΚΡΑΣ ΓΟΤΙΣΤΑΣ',336),(1412,'ΜΙΚΡΟΥ ΠΕΡΙΣΤΕΡΙΟΥ',336),(1413,'ΣΙΤΣΑΙΝΑ',336),(1414,'ΧΡΥΣΟΒΙΤΣΗΣ',336),(1415,'ΑΝΗΛΙΟΥ',337),(1416,'ΑΝΘΟΧΩΡΙΟΥ',337),(1417,'ΒΟΤΟΝΟΣΙΟΥ',337),(1418,'ΜΕΤΣΟΒΟΥ',337),(1419,'ΜΗΛΕΑΣ',338),(1420,'ΑΡΕΤΗΣ',339),(1421,'ΒΡΟΝΤΙΣΜΕΝΗΣ',339),(1422,'ΙΕΡΟΜΝΗΜΗΣ',339),(1423,'ΚΑΤΑΡΡΑΚΤΟΥ',339),(1424,'ΚΟΥΚΛΙΩΝ',339),(1425,'ΜΑΖΑΡΑΚΙΟΥ',339),(1426,'ΜΑΥΡΟΝΟΡΟΥΣ',339),(1427,'ΠΑΡΑΚΑΛΑΜΟΥ',339),(1428,'ΡΕΠΕΤΙΣΤΗΣ',339),(1429,'ΡΙΑΧΟΒΟΥ',339),(1430,'ΣΙΤΑΡΙΑΣ',339),(1431,'ΑΓΙΟΥ ΚΟΣΜΑ',340),(1432,'ΒΑΣΙΛΙΚΟΥ',340),(1433,'ΚΑΚΟΛΑΚΚΟΥ',340),(1434,'ΚΑΤΩ ΜΕΡΟΠΗΣ',340),(1435,'ΚΕΦΑΛΟΒΡΥΣΟΥ',340),(1436,'ΜΕΡΟΠΗΣ',340),(1437,'ΠΑΛΑΙΟΠΥΡΓΟΥ',340),(1438,'ΡΟΥΨΙΑΣ',340),(1439,'ΩΡΑΙΟΚΑΣΤΡΟΥ',340),(1440,'ΑΓΙΑΣ ΜΑΡΙΝΗΣ',341),(1441,'ΑΡΓΥΡΟΧΩΡΙΟΥ',341),(1442,'ΒΗΣΣΑΝΗΣ',341),(1443,'ΔΕΛΒΙΝΑΚΙΟΥ',341),(1444,'ΚΑΣΤΑΝΙΑΝΗΣ',341),(1445,'ΚΕΡΑΣΟΒΟΥ',341),(1446,'ΚΡΥΟΝΕΡΙΟΥ',341),(1447,'ΚΤΙΣΜΑΤΩΝ',341),(1448,'ΛΙΜΝΗΣ',341),(1449,'ΜΑΥΡΟΠΟΥΛΟΥ',341),(1450,'ΟΡΕΙΝΟΥ ΞΗΡΟΒΑΛΤΟΥ',341),(1451,'ΠΕΡΙΣΤΕΡΙΟΥ',341),(1452,'ΠΟΝΤΙΚΑΤΩΝ',341),(1453,'ΣΤΡΑΤΙΝΙΣΤΗΣ',341),(1454,'ΤΕΡΙΑΧΙΟΥ',341),(1455,'ΦΑΡΑΓΓΙΟΥ',341),(1456,'ΧΑΡΑΥΓΗΣ',341),(1457,'ΑΝΩ ΡΑΒΕΝΙΩΝ',342),(1458,'ΓΕΡΟΠΛΑΤΑΝΟΥ',342),(1459,'ΔΟΛΙΑΝΩΝ',342),(1460,'ΚΑΛΠΑΚΙΟΥ',342),(1461,'ΚΑΤΩ ΡΑΒΕΝΙΩΝ',342),(1462,'ΜΑΥΡΟΒΟΥΝΙΟΥ',342),(1463,'ΝΕΓΡΑΔΩΝ',342),(1464,'ΧΡΥΣΟΡΡΑΧΗΣ',342),(1465,'ΔΙΜΟΚΟΡΙΟΥ',343),(1466,'ΛΑΒΔΑΝΗΣ',343),(1467,'ΔΟΛΟΥ',344),(1468,'ΔΡΥΜΑΔΩΝ',344),(1469,'ΠΩΓΩΝΙΑΝΗΣ',344),(1470,'ΣΤΑΥΡΟΣΚΙΑΔΙΟΥ',344),(1471,'ΑΝΩΓΕΙΟΥ',345),(1472,'ΓΟΡΓΟΜΥΛΟΥ',345),(1473,'ΤΣΑΓΚΑΡΟΠΟΥΛΟΥ',345),(1474,'ΑΣΣΟΥ',346),(1475,'ΓΑΛΑΤΑ',346),(1476,'ΘΕΣΠΡΩΤΙΚΟΥ',346),(1477,'ΜΕΛΙΑΝΩΝ',346),(1478,'ΝΙΚΟΛΙΤΣΙΟΥ',346),(1479,'ΠΑΠΠΑΔΑΤΩΝ',346),(1480,'ΠΟΛΥΣΤΑΦΥΛΟΥ',346),(1481,'ΡΙΖΟΒΟΥΝΙΟΥ',346),(1482,'ΚΡΑΝΕΑΣ',347),(1483,'ΑΓΙΟΥ ΓΕΩΡΓΙΟΥ',348),(1484,'ΓΥΜΝΟΤΟΠΟΥ',348),(1485,'ΔΡΥΟΦΥΤΟΥ',348),(1486,'ΚΕΡΑΣΩΝΟΣ',348),(1487,'ΚΛΕΙΣΟΥΡΑΣ',348),(1488,'ΝΕΑΣ ΚΕΡΑΣΟΥΝΤΟΣ',348),(1489,'ΠΑΝΑΓΙΑΣ',348),(1490,'ΠΕΤΡΑΣ',348),(1491,'ΡΩΜΙΑΣ',348),(1492,'ΦΙΛΙΠΠΙΑΔΟΣ',348),(1493,'ΑΓΙΑΣ',349),(1494,'ΑΝΘΟΥΣΗΣ',349),(1495,'ΛΙΒΑΔΑΡΙΟΥ',349),(1496,'ΠΑΡΓΑΣ',349),(1497,'ΑΗΔΟΝΙΑΣ',350),(1498,'ΑΜΜΟΥΔΙΑΣ',350),(1499,'ΑΝΩ ΣΚΑΦΙΔΩΤΗΣ',350),(1500,'ΑΧΕΡΟΥΣΙΑΣ',350),(1501,'ΒΑΛΑΝΙΔΟΡΑΧΗΣ',350),(1502,'ΒΑΛΑΝΙΔΟΥΣΣΑΣ',350),(1503,'ΒΟΥΒΟΠΟΤΑΜΟΥ',350),(1504,'ΔΕΣΠΟΤΙΚΟΥ',350),(1505,'ΘΕΜΕΛΟΥ',350),(1506,'ΚΑΝΑΛΛΑΚΙΟΥ',350),(1507,'ΚΑΣΤΡΙΟΥ',350),(1508,'ΚΟΡΥΦΟΥΛΑ',350),(1509,'ΚΟΡΩΝΗΣ',350),(1510,'ΚΟΥΚΚΟΥΛΙΟΥ',350),(1511,'ΚΥΨΕΛΗΣ',350),(1512,'ΛΟΥΤΣΗΣ',350),(1513,'ΜΕΣΟΠΟΤΑΜΟΥ',350),(1514,'ΜΟΥΖΑΚΑΙΙΚΩΝ',350),(1515,'ΝΑΡΚΙΣΣΟΥ',350),(1516,'ΣΚΕΠΑΣΤΟΥ',350),(1517,'ΣΤΑΥΡΟΧΩΡΙΟΥ',350),(1518,'ΒΡΑΧΟΥ',351),(1519,'ΕΚΚΛΗΣΙΩΝ',351),(1520,'ΚΑΜΑΡΙΝΑΣ',351),(1521,'ΚΑΝΑΛΙΟΥ',351),(1522,'ΚΡΥΟΠΗΓΗΣ',351),(1523,'ΜΥΡΣΙΝΗΣ',351),(1524,'ΝΕΑΣ ΣΑΜΨΟΥΝΤΟΣ',351),(1525,'ΝΕΑΣ ΣΙΝΩΠΗΣ',351),(1526,'ΡΙΖΩΝ',351),(1527,'ΧΕΙΜΑΔΙΟΥ',351),(1528,'ΑΝΩ ΡΑΧΗ',352),(1529,'ΒΡΥΣΟΥΛΑΣ',352),(1530,'ΚΟΤΣΑΝΟΠΟΥΛΟΥ',352),(1531,'ΛΟΥΡΟΥ',352),(1532,'ΝΕΟΥ ΣΦΗΝΩΤΟΥ(ΣΦΗΝΩΤΟΥ)',352),(1533,'ΡΕΥΜΑΤΙΑΣ',352),(1534,'ΣΚΙΑΔΑ',352),(1535,'ΣΤΕΦΑΝΗΣ',352),(1536,'ΤΡΙΚΑΣΤΡΟΝ',352),(1537,'ΩΡΩΠΟΥ',352),(1538,'ΜΙΧΑΛΙΤΣΙΟΥ',353),(1539,'ΜΥΤΙΚΑ',353),(1540,'ΝΙΚΟΠΟΛΕΩΣ',353),(1541,'ΠΡΕΒΕΖΗΣ',353),(1542,'ΦΛΑΜΠΟΥΡΩΝ',353),(1543,'ΒΛΑΣΙΟΥ',354),(1544,'ΔΡΟΣΑΤΟΥ',354),(1545,'ΚΟΥΜΠΟΥΡΙΑΝΩΝ',354),(1546,'ΛΕΟΝΤΙΤΟΥ',354),(1547,'ΠΕΤΡΙΛΟΥ',354),(1548,'ΠΕΤΡΟΧΩΡΙΟΥ',354),(1549,'ΣΤΕΦΑΝΙΑΔΟΣ',354),(1550,'ΦΟΥΝΤΩΤΟΥ',354),(1551,'ΑΝΘΗΡΟΥ',355),(1552,'ΑΡΓΙΘΕΑΣ',355),(1553,'ΕΛΛΗΝΙΚΩΝ',355),(1554,'ΘΕΡΙΝΟΥ',355),(1555,'ΚΑΛΗΣ ΚΩΜΗΣ',355),(1556,'ΚΑΡΥΑΣ',355),(1557,'ΜΕΣΟΒΟΥΝΙΟΥ',355),(1558,'ΠΕΤΡΩΤΟΥ',355),(1559,'ΑΡΓΥΡΙΟΥ',356),(1560,'ΒΡΑΓΚΙΑΝΩΝ',356),(1561,'ΚΑΤΑΦΥΛΛΙΟΥ',356),(1562,'ΜΑΡΑΘΟΥ',356),(1563,'ΑΜΑΡΑΝΤΟΥ',357),(1564,'ΑΜΠΕΛΙΚΟΥ',357),(1565,'ΚΑΛΛΙΘΗΡΟΥ',357),(1566,'ΚΑΡΟΠΛΕΣΙΟΥ',357),(1567,'ΚΑΣΤΑΝΕΑΣ',357),(1568,'ΚΑΤΑΦΥΓΙΟΥ',357),(1569,'ΝΕΡΑΙΔΑΣ',357),(1570,'ΡΑΧΟΥΛΑΣ',357),(1571,'ΑΠΙΔΕΑΣ',358),(1572,'ΔΑΦΝΟΣΠΗΛΙΑΣ',358),(1573,'ΖΑΪΜΙΟΥ',358),(1574,'ΚΑΛΛΙΦΩΝΙΟΥ',358),(1575,'ΜΟΛΟΧΑΣ',358),(1576,'ΠΑΛΙΟΥΡΙΟΥ',358),(1577,'ΑΓΙΟΥ ΘΕΟΔΩΡΟΥ',359),(1578,'ΜΑΚΡΥΧΩΡΙΟΥ',359),(1579,'ΜΕΛΙΣΣΗΣ',359),(1580,'ΜΥΡΙΝΗΣ',359),(1581,'ΠΡΟΔΡΟΜΟΥ',359),(1582,'ΠΤΕΛΟΠΟΥΛΑΣ',359),(1583,'ΣΤΑΥΡΟΥ',359),(1584,'ΑΓΙΟΠΗΓΗΣ',360),(1585,'ΑΡΤΕΣΙΑΝΟΥ',360),(1586,'ΚΑΡΔΙΤΣΗΣ',360),(1587,'ΚΑΡΔΙΤΣΟΜΑΓΟΥΛΑΣ',360),(1588,'ΠΑΛΑΙΟΚΚΛΗΣΙΟΥ',360),(1589,'ΡΟΥΣΣΟΥ',360),(1590,'ΑΓΙΟΥ ΓΕΩΡΓΙΟΥ',361),(1591,'ΓΕΩΡΓΙΚΟΥ',361),(1592,'ΚΡΥΑΣ ΒΡΥΣΗΣ',361),(1593,'ΜΗΤΡΟΠΟΛΗΣ',361),(1594,'ΞΙΝΟΝΕΡΙΟΥ',361),(1595,'ΠΟΡΤΙΤΣΗΣ',361),(1596,'ΦΡΑΓΚΟΥ',361),(1597,'ΚΑΡΒΑΣΑΡΑ',362),(1598,'ΚΑΡΙΤΣΗΣ ΔΟΛΟΠΩΝ',362),(1599,'ΚΡΥΟΝΕΡΙΟΥ',362),(1600,'ΜΠΕΛΟΚΟΜΙΤΗΣ',362),(1601,'ΝΕΟΧΩΡΙΟΥ',362),(1602,'ΠΕΖΟΥΛΑΣ',362),(1603,'ΦΥΛΑΚΤΗΣ',362),(1604,'ΚΕΡΑΣΕΑΣ',363),(1605,'ΛΑΜΠΕΡΟΥ',363),(1606,'ΜΕΣΕΝΙΚΟΛΑ',363),(1607,'ΜΟΡΦΟΒΟΥΝΙΟΥ',363),(1608,'ΜΟΣΧΑΤΟΥ',363),(1609,'ΑΓΙΟΥ ΑΚΑΚΙΟΥ',364),(1610,'ΕΛΛΗΝΟΠΥΡΓΟΥ',364),(1611,'ΚΑΝΑΛΙΩΝ',364),(1612,'ΚΑΠΠΑ',364),(1613,'ΛΟΞΑΔΑΣ',364),(1614,'ΠΥΡΓΟΥ ΙΘΩΜΗΣ',364),(1615,'ΦΑΝΑΡΙΟΥ',364),(1616,'ΧΑΡΜΑΤΟΣ',364),(1617,'ΑΜΥΓΔΑΛΗΣ',365),(1618,'ΑΝΘΟΧΩΡΙΟΥ',365),(1619,'ΒΑΤΣΟΥΝΙΑΣ',365),(1620,'ΓΕΛΑΝΘΗΣ',365),(1621,'ΔΡΑΚΟΤΡΥΠΑΣ',365),(1622,'ΕΛΛΗΝΟΚΑΣΤΡΟΥ',365),(1623,'ΚΡΥΟΠΗΓΗΣ',365),(1624,'ΛΑΖΑΡΙΝΑΣ',365),(1625,'ΜΑΓΟΥΛΙΤΣΗΣ',365),(1626,'ΜΑΥΡΟΜΜΑΤΙΟΥ',365),(1627,'ΜΟΥΖΑΚΙΟΥ',365),(1628,'ΟΞΥΑΣ',365),(1629,'ΠΕΥΚΟΦΥΤΟΥ',365),(1630,'ΠΟΡΤΗΣ',365),(1631,'ΑΓΝΑΝΤΕΡΟΥ',366),(1632,'ΚΡΑΝΕΑΣ',366),(1633,'ΜΑΓΟΥΛΑΣ',366),(1634,'ΠΑΛΑΙΟΧΩΡΙΟΥ',366),(1635,'ΡΙΖΟΒΟΥΝΙΟΥ',366),(1636,'ΑΓΙΟΥ ΔΗΜΗΤΡΙΟΥ',367),(1637,'ΒΛΟΧΟΥ',367),(1638,'ΓΟΡΓΟΒΙΤΩΝ',367),(1639,'ΚΑΛΥΒΑΚΙΩΝ',367),(1640,'ΚΟΣΚΙΝΑ',367),(1641,'ΜΑΡΚΟΥ',367),(1642,'ΜΕΤΑΜΟΡΦΩΣΕΩΣ',367),(1643,'ΠΑΛΑΜΑ',367),(1644,'ΑΓΙΑΣ ΤΡΙΑΔΟΣ',368),(1645,'ΚΑΛΟΓΡΙΑΝΩΝ',368),(1646,'ΜΑΡΑΘΕΑΣ',368),(1647,'ΠΕΔΙΝΟΥ',368),(1648,'ΠΡΟΑΣΤΙΟΥ',368),(1649,'ΑΣΤΡΙΤΣΗΣ',369),(1650,'ΙΤΕΑΣ',369),(1651,'ΛΕΥΚΗΣ',369),(1652,'ΟΡΦΑΝΩΝ',369),(1653,'ΠΕΤΡΙΝΟΥ',369),(1654,'ΣΥΚΕΩΝ',369),(1655,'ΦΥΛΛΟΥ',369),(1656,'ΕΡΜΗΤΣΙΟΥ',370),(1657,'ΚΥΨΕΛΗΣ',370),(1658,'ΜΑΤΑΡΑΓΚΑΣ',370),(1659,'ΠΥΡΓΟΥ ΚΙΕΡΙΟΥ',370),(1660,'ΑΗΔΟΝΟΧΩΡΙΟΥ',371),(1661,'ΒΑΘΥΛΑΚΚΟΥ',371),(1662,'ΘΡΑΨΙΜΙΟΥ',371),(1663,'ΚΕΔΡΟΥ',371),(1664,'ΛΟΥΤΡΟΠΗΓΗΣ',371),(1665,'ΛΟΥΤΡΟΥ',371),(1666,'ΡΕΝΤΙΝΑΣ',372),(1667,'ΑΓΙΑΣ ΠΑΡΑΣΚΕΥΗΣ',373),(1668,'ΑΓΙΟΥ ΒΗΣΣΑΡΙΟΥ',373),(1669,'ΑΜΠΕΛΟΥ',373),(1670,'ΑΝΩΓΕΙΟΥ',373),(1671,'ΓΕΦΥΡΙΩΝ',373),(1672,'ΔΑΣΟΧΩΡΙΟΥ',373),(1673,'ΚΑΠΠΑΔΟΚΙΚΟΥ',373),(1674,'ΚΑΡΠΟΧΩΡΙΟΥ',373),(1675,'ΜΑΣΧΟΛΟΥΡΙΟΥ',373),(1676,'ΜΑΥΡΑΧΑΔΩΝ',373),(1677,'ΜΕΛΙΣΣΟΧΩΡΙΟΥ',373),(1678,'ΠΑΣΧΑΛΙΤΣΗΣ',373),(1679,'ΣΟΦΑΔΩΝ',373),(1680,'ΦΙΛΙΑΣ',373),(1681,'ΑΝΑΒΡΑΣ',374),(1682,'ΑΣΗΜΟΧΩΡΙΟΥ',374),(1683,'ΑΧΛΑΔΕΑΣ',374),(1684,'ΓΡΑΜΜΑΤΙΚΟΥ',374),(1685,'ΚΤΙΜΕΝΗΣ',374),(1686,'ΛΕΟΝΤΑΡΙΟΥ',374),(1687,'ΑΓΙΑΣ',375),(1688,'ΑΕΤΟΛΟΦΟΥ',375),(1689,'ΑΝΑΒΡΑΣ',375),(1690,'ΓΕΡΑΚΑΡΙΟΥ',375),(1691,'ΕΛΑΦΟΥ',375),(1692,'ΜΕΓΑΛΟΒΡΥΣΟΥ',375),(1693,'ΜΕΤΑΞΟΧΩΡΙΟΥ',375),(1694,'ΝΕΡΟΜΥΛΩΝ',375),(1695,'ΠΟΤΑΜΙΑΣ',375),(1696,'ΚΑΡΙΤΣΗΣ',376),(1697,'ΟΜΟΛΙΟΥ',376),(1698,'ΠΑΛΑΙΟΠΥΡΓΟΥ',376),(1699,'ΣΤΟΜΙΟΥ',376),(1700,'ΑΜΥΓΔΑΛΗΣ',377),(1701,'ΑΝΑΤΟΛΗΣ',377),(1702,'ΔΗΜΗΤΡΑΣ',377),(1703,'ΚΑΣΤΡΙΟΥ',377),(1704,'ΜΑΡΜΑΡΙΝΗΣ',377),(1705,'ΜΕΛΙΒΟΙΑΣ',378),(1706,'ΣΚΗΤΗΣ',378),(1707,'ΣΚΛΗΘΡΟΥ',378),(1708,'ΣΩΤΗΡΙΤΣΗΣ',378),(1709,'ΑΚΡΗΣ',379),(1710,'ΚΡΑΝΕΑΣ ΕΛΑΣΣΟΝΟΣ',379),(1711,'ΛΟΥΤΡΟΥ',379),(1712,'ΒΕΡΔΙΚΟΥΣΣΗΣ',380),(1713,'ΒΑΛΑΝΙΔΑΣ',381),(1714,'ΓΑΛΑΝΟΒΡΥΣΗΣ',381),(1715,'ΔΡΥΜΟΥ',381),(1716,'ΕΛΑΣΣΟΝΟΣ',381),(1717,'ΕΥΑΓΓΕΛΙΣΜΟΥ ΕΛΛΑΣΟΝΟΣ',381),(1718,'ΚΕΦΑΛΟΒΡΥΣΟΥ',381),(1719,'ΠΑΛΑΙΟΚΑΣΤΡΟΥ',381),(1720,'ΣΤΕΦΑΝΟΒΟΥΝΟΥ',381),(1721,'ΚΑΡΥΑΣ',382),(1722,'ΚΡΥΟΒΡΥΣΗΣ',382),(1723,'ΣΥΚΑΜΙΝΕΑΣ',382),(1724,'ΔΟΛΙΧΗΣ',383),(1725,'ΛΙΒΑΔΙΟΥ',383),(1726,'ΚΑΛΛΙΘΕΑΣ ΕΛΛΑΣΟΝΟΣ',384),(1727,'ΚΟΚΚΙΝΟΓΕΙΟΥ',384),(1728,'ΚΟΚΚΙΝΟΠΗΛΟΥ',384),(1729,'ΛΟΦΟΥ',384),(1730,'ΟΛΥΜΠΙΑΔΟΣ',384),(1731,'ΠΥΘΙΟΥ',384),(1732,'ΦΛΑΜΠΟΥΡΟΥ',384),(1733,'ΑΜΟΥΡΙΟΥ',385),(1734,'ΒΛΑΧΟΓΙΑΝΝΙΟΥ',385),(1735,'ΔΟΜΕΝΙΚΟΥ',385),(1736,'ΜΑΓΟΥΛΑΣ',385),(1737,'ΜΕΓΑΛΟΥ ΕΛΕΥΘΕΡΟΧΩΡΙΟΥ',385),(1738,'ΜΕΣΟΧΩΡΙΟΥ',385),(1739,'ΠΡΑΙΤΩΡΙΟΥ',385),(1740,'ΣΥΚΕΑΣ',385),(1741,'ΑΖΩΡΟΥ(ΒΟΥΒΑΛΑΣ)',386),(1742,'ΓΕΡΑΝΙΩΝ',386),(1743,'ΓΙΑΝΝΩΤΩΝ',386),(1744,'ΛΥΚΟΥΔΙΟΥ',386),(1745,'ΜΗΛΕΑΣ',386),(1746,'ΣΑΡΑΝΤΑΠΟΡΟΥ',386),(1747,'ΤΣΑΠΟΥΡΝΙΑΣ',386),(1748,'ΤΣΑΡΙΤΣΑΝΗΣ',387),(1749,'ΑΡΜΕΝΙΟΥ',388),(1750,'ΜΕΓΑΛΟΥ ΜΟΝΑΣΤΗΡΙΟΥ',388),(1751,'ΝΙΚΗΣ',388),(1752,'ΣΩΤΗΡΙΟΥ',388),(1753,'ΑΓΝΑΝΤΕΡΗΣ',389),(1754,'ΚΑΛΑΜΑΚΙΟΥ',389),(1755,'ΚΙΛΕΛΕΡ (ΚΥΨΕΛΗΣ)',389),(1756,'ΜΕΛΙΣΣΗΣ',389),(1757,'ΝΕΟΥ ΠΕΡΙΒΟΛΙΟΥ',389),(1758,'ΑΓΙΟΥ ΓΕΩΡΓΙΟΥ ΛΑΡΙΣΗΣ',390),(1759,'ΑΓΙΩΝ ΑΝΑΡΓΥΡΩΝ',390),(1760,'ΒΟΥΝΑΙΝΩΝ',390),(1761,'ΔΟΞΑΡΑ',390),(1762,'ΚΡΑΝΝΩΝΟΣ',390),(1763,'ΚΥΠΑΡΙΣΣΟΥ',390),(1764,'ΜΑΥΡΟΒΟΥΝΙΟΥ',390),(1765,'ΜΙΚΡΟΥ ΒΟΥΝΟΥ',390),(1766,'ΨΥΧΙΚΟΥ',390),(1767,'ΔΙΛΟΦΟΥ',391),(1768,'ΖΑΠΠΕΙΟΥ',391),(1769,'ΜΟΣΧΟΧΩΡΙΟΥ',391),(1770,'ΜΥΡΩΝ',391),(1771,'ΝΕΑΣ ΛΕΥΚΗΣ',391),(1772,'ΝΕΩΝ ΚΑΡΥΩΝ',391),(1773,'ΝΙΚΑΙΑΣ',391),(1774,'ΧΑΡΑΣ',391),(1775,'ΓΑΛΗΝΗΣ',392),(1776,'ΓΛΑΥΚΗΣ',392),(1777,'ΕΛΕΥΘΕΡΙΟΥ',392),(1778,'ΜΕΛΙΑΣ',392),(1779,'ΜΕΛΙΣΣΟΧΩΡΙΟΥ',392),(1780,'ΝΑΜΑΤΩΝ',392),(1781,'ΟΜΟΡΦΟΧΩΡΙΟΥ',392),(1782,'ΠΛΑΤΥΚΑΜΠΟΥ',392),(1783,'ΧΑΛΚΗΣ',392),(1784,'ΓΙΑΝΝΟΥΛΗΣ',393),(1785,'ΦΑΛΑΝΝΗΣ',393),(1786,'ΑΜΥΓΔΑΛΕΑΣ',394),(1787,'ΕΛΕΥΘΕΡΩΝ',394),(1788,'ΚΟΙΛΑΔΟΣ',394),(1789,'ΚΟΥΤΣΟΧΕΡΟΥ',394),(1790,'ΛΟΥΤΡΟΥ ΛΑΡΙΣΗΣ',394),(1791,'ΜΑΝΔΡΑΣ',394),(1792,'ΡΑΧΟΥΛΑΣ',394),(1793,'1ο ΔΙΑΜΕΡΙΣΜΑ ΛΑΡΙΣΗΣ',395),(1794,'2ο ΔΙΑΜΕΡΙΣΜΑ ΛΑΡΙΣΗΣ',395),(1795,'3ο ΔΙΑΜΕΡΙΣΜΑ ΛΑΡΙΣΗΣ(συμπεριλαμβάνονται οι οικισμοί Κουλουρίου και Αμφιθέας',395),(1796,'4ο ΔΙΑΜΕΡΙΣΜΑ ΛΑΡΙΣΗΣ',395),(1797,'ΤΕΡΨΙΘΕΑΣ',395),(1798,'ΑΜΠΕΛΑΚΙΩΝ',396),(1799,'ΤΕΜΠΩΝ',396),(1800,'ΓΟΝΝΩΝ',397),(1801,'ΙΤΕΑΣ',397),(1802,'ΚΑΛΛΙΠΕΥΚΗΣ',397),(1803,'ΑΙΓΑΝΗΣ',398),(1804,'ΚΡΑΝΕΑΣ',398),(1805,'ΠΥΡΓΕΤΟΥ',398),(1806,'ΡΑΨΑΝΗΣ',398),(1807,'ΕΛΑΤΕΙΑΣ',399),(1808,'ΕΥΑΓΓΕΛΙΣΜΟΥ ΛΑΡΙΣΗΣ',399),(1809,'ΜΑΚΡΥΧΩΡΙΟΥ',399),(1810,'ΠΑΡΑΠΟΤΑΜΟΥ',399),(1811,'ΚΑΛΟΧΩΡΙΟΥ',400),(1812,'ΚΥΨΕΛΟΧΩΡΙΟΥ',400),(1813,'ΝΕΣΣΩΝΟΣ',400),(1814,'ΟΣΣΗΣ',400),(1815,'ΠΟΥΡΝΑΡΙΟΥ',400),(1816,'ΣΠΗΛΙΑΣ',400),(1817,'ΣΥΚΟΥΡΙΟΥ',400),(1818,'ΑΜΠΕΛΩΝΟΣ',401),(1819,'ΒΡΥΟΤΟΠΟΥ',401),(1820,'ΔΕΛΕΡΙΩΝ',401),(1821,'ΡΟΔΙΑΣ',401),(1822,'ΑΡΓΥΡΟΠΟΥΛΕΙΟΥ',402),(1823,'ΔΑΜΑΣΙΟΥ',402),(1824,'ΔΕΝΔΡΩΝ',402),(1825,'ΤΥΡΝΑΒΟΥ',402),(1826,'ΑΓΙΟΥ ΓΕΩΡΓΙΟΥ ΦΑΡΣΑΛΩΝ',403),(1827,'ΒΑΣΙΛΗ',403),(1828,'ΚΑΤΩΧΩΡΙΟΥ',403),(1829,'ΚΡΗΝΗΣ',403),(1830,'ΜΕΓΑΛΟΥ ΕΥΥΔΡΙΟΥ',403),(1831,'ΠΟΛΥΝΕΡΙΟΥ',403),(1832,'ΣΤΑΥΡΟΥ',403),(1833,'ΥΠΕΡΕΙΑΣ',403),(1834,'ΔΕΝΔΡΩΝ ΦΑΡΣΑΛΩΝ',404),(1835,'ΔΙΛΟΦΟΥ ΦΑΡΣΑΛΩΝ',404),(1836,'ΚΑΛΛΙΘΕΑΣ ΦΑΡΣΑΛΩΝ',404),(1837,'ΝΑΡΘΑΚΙΟΥ',404),(1838,'ΣΚΟΠΙΑΣ',404),(1839,'ΑΜΠΕΛΕΙΑΣ',405),(1840,'ΒΑΜΒΑΚΟΥΣ',405),(1841,'ΔΑΣΟΛΟΦΟΥ',405),(1842,'ΕΡΕΤΡΙΑΣ',405),(1843,'ΖΩΟΔΟΧΟΥ ΠΗΓΗΣ',405),(1844,'ΚΑΤΩ ΒΑΣΙΛΙΚΩΝ',405),(1845,'ΝΕΡΑΪΔΑΣ',405),(1846,'ΠΟΛΥΔΑΜΕΙΟΥ',405),(1847,'ΡΕΥΜΑΤΙΑΣ',405),(1848,'ΣΙΤΟΧΩΡΟΥ',405),(1849,'ΣΚΟΤΟΥΣΣΗΣ',405),(1850,'ΧΑΛΚΙΑΔΩΝ',405),(1851,'ΑΧΙΛΛΕΙΟΥ',406),(1852,'ΒΡΥΣΙΩΝ',406),(1853,'ΦΑΡΣΑΛΩΝ',406),(1854,'ΑΛΜΥΡΟΥ',407),(1855,'ΑΝΘΟΤΟΠΟΥ',407),(1856,'ΕΥΞΕΙΝΟΥΠΟΛΕΩΣ',407),(1857,'ΚΟΚΚΩΤΩΝ',407),(1858,'ΚΡΟΚΙΟΥ',407),(1859,'ΚΩΦΩΝ',407),(1860,'ΠΛΑΤΑΝΟΥ',407),(1861,'ΦΥΛΑΚΗΣ',407),(1862,'ΑΝΑΒΡΑΣ',408),(1863,'ΑΓΙΩΝ ΘΕΟΔΩΡΩΝ',409),(1864,'ΑΧΙΛΛΕΙΟΥ',409),(1865,'ΠΤΕΛΕΟΥ',409),(1866,'ΑΓΙΑΣ ΤΡΙΑΔΟΣ',410),(1867,'ΑΓΙΟΥ ΙΩΑΝΝΟΥ',410),(1868,'ΑΜΑΛΙΑΠΟΛΕΩΣ',410),(1869,'ΒΡΥΝΑΙΝΗΣ',410),(1870,'ΔΡΥΜΩΝΟΣ',410),(1871,'ΣΟΥΡΠΗΣ',410),(1872,'ΑΓΡΙΑΣ',411),(1873,'ΔΡΑΚΕΙΑΣ',411),(1874,'ΔΙΜΗΝΙΟΥ',412),(1875,'ΣΕΣΚΛΟΥ',412),(1876,'ΑΓΙΟΥ ΒΛΑΣΙΟΥ',413),(1877,'ΑΓΙΟΥ ΛΑΥΡΕΝΤΙΟΥ',413),(1878,'ΑΝΩ ΛΕΧΩΝΙΩΝ',413),(1879,'ΚΑΤΩ ΛΕΧΩΝΙΩΝ',413),(1880,'ΒΟΛΟΥ',414),(1881,'ΑΓΙΟΥ ΟΝΟΥΦΡΙΟΥ',415),(1882,'ΑΝΑΚΑΣΙΑΣ',415),(1883,'ΑΝΩ ΒΟΛΟΥ',415),(1884,'ΜΑΚΡΙΝΙΤΣΗΣ',416),(1885,'ΑΪΔΙΝΙΟΥ',417),(1886,'ΜΙΚΡΟΘΗΒΩΝ',417),(1887,'ΝΕΑΣ ΑΓΧΙΑΛΟΥ',417),(1888,'ΓΛΑΦΥΡΩΝ',418),(1889,'ΝΕΑΣ ΙΩΝΙΑΣ',418),(1890,'ΑΛΛΗΣ ΜΕΡΙΑΣ',419),(1891,'ΚΑΤΩΧΩΡΙΟΥ',419),(1892,'ΠΟΡΤΑΡΙΑΣ',419),(1893,'ΣΤΑΓΙΑΤΩΝ',419),(1894,'ΖΑΓΟΡΑΣ',420),(1895,'ΜΑΚΡΥΡΡΑΧΗΣ',420),(1896,'ΠΟΥΡΙΟΥ',420),(1897,'ΑΓΙΟΥ ΔΗΜΗΤΡΙΟΥ ΠΗΛΙΟΥ',421),(1898,'ΑΝΗΛΙΟΥ',421),(1899,'ΚΙΣΣΟΥ',421),(1900,'ΜΟΥΡΕΣΙΟΥ',421),(1901,'ΞΟΡΥΧΤΙΟΥ',421),(1902,'ΤΣΑΓΚΑΡΑΔΑΣ',421),(1903,'ΑΡΓΑΛΑΣΤΗΣ',422),(1904,'ΜΕΤΟΧΙΟΥ',422),(1905,'ΞΙΝΟΒΡΥΣΗΣ',422),(1906,'ΑΦΕΤΩΝ',423),(1907,'ΚΑΛΑΜΑΚΙΟΥ',423),(1908,'ΛΑΜΠΙΝΟΥΣ',423),(1909,'ΝΕΟΧΩΡΙΟΥ',423),(1910,'ΣΥΚΗΣ',423),(1911,'ΑΓΙΟΥ ΓΕΩΡΓΙΟΥ ΝΗΛΕΙΑΣ',424),(1912,'ΒΥΖΙΤΣΗΣ',424),(1913,'ΚΑΛΩΝ ΝΕΡΩΝ',424),(1914,'ΜΗΛΕΩΝ',424),(1915,'ΠΙΝΑΚΑΤΩΝ',424),(1916,'ΛΑΥΚΟΥ',425),(1917,'ΜΗΛΙΝΗΣ',425),(1918,'ΠΡΟΜΥΡΙΟΥ',425),(1919,'ΤΡΙΚΕΡΙΟΥ',426),(1920,'ΚΑΝΑΛΙΩΝ',427),(1921,'ΚΕΡΑΣΕΑΣ',427),(1922,'ΡΙΖΟΜΥΛΟΥ',427),(1923,'ΣΤΕΦΑΝΟΒΙΚΕΙΟΥ',427),(1924,'ΚΕΡΑΜΙΔΙΟΥ',428),(1925,'ΑΓΙΟΥ ΓΕΩΡΓΙΟΥ ΦΕΡΩΝ',429),(1926,'ΑΕΡΙΝΟΥ',429),(1927,'ΒΕΛΕΣΤΙΝΟΥ',429),(1928,'ΜΙΚΡΟΥ ΠΕΡΙΒΟΛΑΚΙΟΥ',429),(1929,'ΠΕΡΙΒΛΕΠΤΟΥ',429),(1930,'ΑΛΟΝΝΗΣΟΥ',430),(1931,'ΣΚΙΑΘΟΥ',431),(1932,'ΓΛΩΣΣΗΣ',432),(1933,'ΚΛΗΜΑΤΟΣ',432),(1934,'ΣΚΟΠΕΛΟΥ',432),(1935,'ΑΓΙΑΣ ΠΑΡΑΣΚΕΥΗΣ',433),(1936,'ΑΝΘΟΥΣΗΣ',433),(1937,'ΚΑΛΛΙΡΡΟΗΣ',433),(1938,'ΚΑΤΑΦΥΤΟΥ',433),(1939,'ΚΡΑΝΕΑΣ',433),(1940,'ΠΟΛΥΘΕΑΣ',433),(1941,'ΣΤΕΦΑΝΙΟΥ',433),(1942,'ΧΑΛΙΚΙΟΥ',433),(1943,'ΒΑΣΙΛΙΚΗΣ',434),(1944,'ΘΕΟΠΕΤΡΑΣ',434),(1945,'ΠΕΡΙΣΤΕΡΑΣ',434),(1946,'ΑΥΡΑΣ',435),(1947,'ΒΛΑΧΑΒΑΣ',435),(1948,'ΔΙΑΒΑΣ',435),(1949,'ΚΑΛΑΜΠΑΚΑΣ',435),(1950,'ΚΑΣΤΡΑΚΙΟΥ',435),(1951,'ΚΡΥΑΣ ΒΡΥΣΗΣ',435),(1952,'ΜΕΓΑΛΗΣ ΚΕΡΑΣΕΑΣ',435),(1953,'ΟΡΘΟΒΟΥΝΙΟΥ',435),(1954,'ΣΑΡΑΚΗΝΑΣ',435),(1955,'ΑΜΑΡΑΝΤΟΥ',436),(1956,'ΑΜΠΕΛΟΧΩΡΙΟΥ',436),(1957,'ΚΑΛΟΜΟΙΡΑΣ',436),(1958,'ΚΑΣΤΑΝΕΑΣ',436),(1959,'ΜΑΤΟΝΕΡΙΟΥ',436),(1960,'ΑΗΔΟΝΟΣ',437),(1961,'ΓΛΥΚΟΜΗΛΕΑΣ',437),(1962,'ΚΑΛΟΓΡΙΑΝΗΣ',437),(1963,'ΚΛΕΙΝΟΥ',437),(1964,'ΠΑΛΑΙΟΧΩΡΙΟΥ',437),(1965,'ΧΡΥΣΟΜΗΛΕΑΣ',437),(1966,'ΚΟΡΥΔΑΛΛΟΥ',438),(1967,'ΜΑΛΑΚΑΣΙΟΥ',438),(1968,'ΠΑΝΑΓΙΑΣ',438),(1969,'ΠΕΥΚΗΣ',438),(1970,'ΤΡΥΓΟΝΟΣ',438),(1971,'ΓΕΡΑΚΑΡΙΟΥ',439),(1972,'ΚΑΛΛΙΘΕΑΣ',439),(1973,'ΚΟΝΙΣΚΟΥ',439),(1974,'ΛΟΓΓΑΣ',439),(1975,'ΜΑΥΡΕΛΙΟΥ',439),(1976,'ΦΛΑΜΠΟΥΡΕΣΙΟΥ',439),(1977,'ΦΩΤΕΙΝΟΥ',439),(1978,'ΑΓΙΟΦΥΛΛΟΥ',440),(1979,'ΑΓΝΑΝΤΙΑΣ',440),(1980,'ΑΣΠΡΟΚΚΛΗΣΙΑΣ',440),(1981,'ΑΧΛΑΔΕΑΣ',440),(1982,'ΓΑΒΡΟΥ',440),(1983,'ΚΑΚΟΠΛΕΥΡΙΟΥ',440),(1984,'ΟΞΥΝΕΙΑΣ',440),(1985,'ΣΚΕΠΑΡΙΟΥ',440),(1986,'ΑΓΙΟΥ ΝΙΚΟΛΑΟΥ',441),(1987,'ΑΘΑΜΑΝΙΑΣ',441),(1988,'ΒΡΟΝΤΕΡΟΥ',441),(1989,'ΓΑΡΔΙΚΙΟΥ',441),(1990,'ΔΕΣΗΣ',441),(1991,'ΔΡΟΣΟΧΩΡΙΟΥ',441),(1992,'ΕΛΑΤΗΣ',441),(1993,'ΚΑΛΟΓΗΡΩΝ',441),(1994,'ΝΕΡΑΪΔΟΧΩΡΙΟΥ(ΧΑΤΖΗΠΕΤΡΙΟΥ)',441),(1995,'ΠΕΡΤΟΥΛΙΟΥ',441),(1996,'ΠΥΡΡΑΣ',441),(1997,'ΓΟΜΦΩΝ',442),(1998,'ΔΡΟΣΕΡΟΥ',442),(1999,'ΛΥΓΑΡΙΑΣ',442),(2000,'ΜΟΥΡΙΑΣ',442),(2001,'ΠΑΛΑΙΟΜΟΝΑΣΤΗΡΟΥ',442),(2002,'ΠΗΓΗΣ',442),(2003,'ΜΥΡΟΦΥΛΛΟΥ',443),(2004,'ΑΡΜΑΤΟΛΙΚΟΥ',444),(2005,'ΚΟΡΥΦΗΣ',444),(2006,'ΝΕΡΑΙΔΑΣ',444),(2007,'ΠΑΧΤΟΥΡΙΟΥ',444),(2008,'ΕΛΕΥΘΕΡΟΧΩΡΙΟΥ',445),(2009,'ΠΑΡΑΠΟΤΑΜΟΥ',445),(2010,'ΠΙΑΛΕΙΑΣ',445),(2011,'ΦΗΚΗΣ',445),(2012,'ΦΙΛΥΡΑΣ',445),(2013,'ΒΑΘΥΡΡΕΥΜΑΤΟΣ',446),(2014,'ΒΑΛΚΑΝΟΥ',446),(2015,'ΛΙΒΑΔΟΧΩΡΙΟΥ',446),(2016,'ΜΕΣΟΧΩΡΑΣ',446),(2017,'ΜΟΣΧΟΦΥΤΟΥ',446),(2018,'ΝΕΑΣ ΠΕΥΚΗΣ',446),(2019,'ΠΑΡΑΜΕΡΟΥ',446),(2020,'ΠΟΛΥΝΕΡΙΟΥ',446),(2021,'ΣΤΟΥΡΝΑΡΑΙΙΚΩΝ',446),(2022,'ΑΓΙΟΥ ΒΗΣΣΑΡΙΩΝΟΣ',447),(2023,'ΑΓΙΟΥ ΠΡΟΚΟΠΙΟΥ',447),(2024,'ΚΟΤΡΩΝΙΟΥ',447),(2025,'ΠΑΛΑΙΟΚΑΡΥΑΣ',447),(2026,'ΠΕΤΡΟΧΩΡΙΟΥ',447),(2027,'ΠΥΛΗΣ',447),(2028,'ΡΟΠΟΤΟΥ',447),(2029,'ΛΟΓΓΟΥ',448),(2030,'ΜΕΓΑΛΟΧΩΡΙΟΥ',448),(2031,'ΠΑΤΟΥΛΙΑΣ',448),(2032,'ΧΡΥΣΑΥΓΗΣ',448),(2033,'ΒΑΛΤΙΝΟΥ',449),(2034,'ΔΕΝΔΡΟΧΩΡΙΟΥ',449),(2035,'ΚΑΤΩ ΕΛΑΤΗΣ',449),(2036,'ΦΩΤΑΔΑΣ',449),(2037,'ΓΕΝΕΣΙΟΥ',450),(2038,'ΓΟΡΓΟΓΥΡΙΟΥ',450),(2039,'ΞΥΛΟΠΑΡΟΙΚΟΥ',450),(2040,'ΠΡΙΝΟΥ',450),(2041,'ΠΡΟΔΡΟΜΟΥ',450),(2042,'ΑΓΙΑΣ ΚΥΡΙΑΚΗΣ',451),(2043,'ΓΛΙΝΟΥ',451),(2044,'ΜΕΓΑΛΩΝ ΚΑΛΥΒΙΩΝ',451),(2045,'ΑΓΡΕΛΙΑΣ',452),(2046,'ΑΡΔΑΝΙΟΥ',452),(2047,'ΖΗΛΕΥΤΗΣ',452),(2048,'ΚΟΥΜΑΡΙΑΣ',452),(2049,'ΚΡΗΝΙΤΣΗΣ',452),(2050,'ΛΙΟΠΡΑΣΟΥ',452),(2051,'ΠΑΛΑΙΟΠΥΡΓΟΥ',452),(2052,'ΕΛΛΗΝΟΚΑΣΤΡΟΥ',453),(2053,'ΠΛΑΤΑΝΟΥ',453),(2054,'ΡΑΞΑΣ',453),(2055,'ΡΙΖΩΜΑΤΟΣ',453),(2056,'ΣΠΑΘΑΔΩΝ',453),(2057,'ΤΡΙΚΚΑΙΩΝ',454),(2058,'ΔΙΑΛΕΚΤΟΥ',455),(2059,'ΔΙΠΟΤΑΜΟΥ',455),(2060,'ΚΕΦΑΛΟΒΡΥΣΟΥ',455),(2061,'ΜΕΓΑΛΟΥ ΚΕΦΑΛΟΒΡΥΣΟΥ',455),(2062,'ΜΕΓΑΡΧΗΣ',455),(2063,'ΓΕΩΡΓΑΝΑΔΩΝ',456),(2064,'ΚΛΟΚΟΤΟΥ',456),(2065,'ΚΡΗΝΗΣ',456),(2066,'ΟΙΧΑΛΙΑΣ',456),(2067,'ΠΕΤΡΩΤΟΥ',456),(2068,'ΝΟΜΗΣ',457),(2069,'ΠΕΤΡΟΠΟΡΟΥ',457),(2070,'ΣΕΡΒΩΤΩΝ',457),(2071,'ΤΑΞΙΑΡΧΩΝ',457),(2072,'ΦΑΝΕΡΩΜΕΝΗΣ',457),(2073,'ΑΧΛΑΔΟΧΩΡΙΟΥ',458),(2074,'ΓΡΙΖΑΝΟΥ',458),(2075,'ΔΙΑΣΕΛΛΟΥ',458),(2076,'ΖΑΡΚΟΥ',458),(2077,'ΚΕΡΑΜΙΔΙΟΥ',458),(2078,'ΠΑΝΑΓΙΤΣΑΣ',458),(2079,'ΠΗΝΕΙΑΔΟΣ',458),(2080,'ΦΑΡΚΑΔΟΝΟΣ',458),(2081,'ΑΛΙΑΡΤΟΥ',459),(2082,'ΕΥΑΓΓΕΛΙΣΤΡΙΑΣ',459),(2083,'ΠΕΤΡΑΣ',459),(2084,'ΣΩΛΗΝΑΡΙΟΥ',459),(2085,'ΥΨΗΛΑΝΤΟΥ',459),(2086,'ΑΣΚΡΗΣ',460),(2087,'ΘΕΣΠΙΩΝ',460),(2088,'ΛΕΟΝΤΑΡΙΟΥ',460),(2089,'ΜΑΥΡΟΜΜΑΤΙΟΥ',460),(2090,'ΝΕΟΧΩΡΙΟΥ ΘΕΣΠΙΩΝ',460),(2091,'ΑΝΤΙΚΥΡΑΣ',461),(2092,'ΑΡΑΧΟΒΗΣ',462),(2093,'ΔΙΣΤΟΜΟΥ',463),(2094,'ΣΤΕΙΡΙΟΥ',463),(2095,'ΒΑΓΙΩΝ',464),(2096,'ΑΜΠΕΛΟΧΩΡΙΟΥ',465),(2097,'ΕΛΕΩΝΟΣ',465),(2098,'ΘΗΒΑΙΩΝ',465),(2099,'ΜΟΥΡΙΚΙΟΥ',465),(2100,'ΝΕΟΧΩΡΑΚΙΟΥ',465),(2101,'ΥΠΑΤΟΥ',465),(2102,'ΔΟΜΒΡΑΙΝΗΣ',466),(2103,'ΕΛΛΟΠΙΑΣ',466),(2104,'ΘΙΣΒΗΣ',466),(2105,'ΞΗΡΟΝΟΜΗΣ',466),(2106,'ΧΩΣΤΙΑ ',466),(2107,'ΚΑΠΑΡΕΛΛΙΟΥ',467),(2108,'ΛΕΥΚΤΡΩΝ',467),(2109,'ΛΟΥΤΟΥΦΙΟΥ',467),(2110,'ΜΕΛΙΣΣΟΧΩΡΙΟΥ',467),(2111,'ΠΛΑΤΑΙΩΝ',467),(2112,'ΔΑΥΛΕΙΑΣ',468),(2113,'ΜΑΥΡΟΝΕΡΙΟΥ',468),(2114,'ΠΑΡΟΡΙΟΥ',468),(2115,'ΑΓΙΑΣ ΑΝΝΑΣ',469),(2116,'ΑΓΙΑΣ ΤΡΙΑΔΟΣ',469),(2117,'ΑΓΙΟΥ ΓΕΩΡΓΙΟΥ',469),(2118,'ΑΛΑΛΚΟΜΕΝΩΝ',469),(2119,'ΚΟΡΩΝΕΙΑΣ',469),(2120,'ΚΥΡΙΑΚΙΟΥ',470),(2121,'ΛΑΦΥΣΤΙΟΥ',471),(2122,'ΛΕΒΑΔΕΩΝ',471),(2123,'ΡΩΜΑΙΙΚΟΥ',471),(2124,'ΑΓΙΟΥ ΒΛΑΣΙΟΥ',472),(2125,'ΑΚΟΝΤΙΟΥ',472),(2126,'ΑΝΘΟΧΩΡΙΟΥ',472),(2127,'ΒΑΣΙΛΙΚΩΝ',472),(2128,'ΘΟΥΡΙΟΥ',472),(2129,'ΠΡΟΣΗΛΙΟΥ',472),(2130,'ΠΡΟΦΗΤΟΥ ΗΛΙΑ',472),(2131,'ΧΑΙΡΩΝΕΙΑΣ',472),(2132,'ΑΚΡΑΙΦΝΙΟΥ',473),(2133,'ΚΑΣΤΡΟΥ',473),(2134,'ΚΟΚΚΙΝΟΥ',473),(2135,'ΑΓΙΟΥ ΔΗΜΗΤΡΙΟΥ',474),(2136,'ΑΓΙΟΥ ΣΠΥΡΙΔΩΝΟΣ',474),(2137,'ΔΙΟΝΥΣΟΥ',474),(2138,'ΚΑΡΥΑΣ',474),(2139,'ΛΟΥΤΣΙΟΥ',474),(2140,'ΟΡΧΟΜΕΝΟΥ',474),(2141,'ΠΑΥΛΟΥ',474),(2142,'ΠΥΡΓΟΥ',474),(2143,'ΔΑΦΝΗΣ',475),(2144,'ΠΥΛΗΣ',475),(2145,'ΣΚΟΥΡΤΩΝ',475),(2146,'ΣΤΕΦΑΝΗΣ',475),(2147,'ΑΓΙΟΥ ΘΩΜΑ',476),(2148,'ΚΛΕΙΔΙΟΥ',476),(2149,'ΟΙΝΟΦΥΤΩΝ',476),(2150,'ΣΧΗΜΑΤΑΡΙΟΥ',477),(2151,'ΑΡΜΑΤΟΣ',478),(2152,'ΑΣΩΠΙΑΣ',478),(2153,'ΚΑΛΛΙΘΕΑΣ',478),(2154,'ΤΑΝΑΓΡΑΣ',478),(2155,'ΑΓΙΟΥ ΑΘΑΝΑΣΙΟΥ',479),(2156,'ΑΜΦΙΘΕΑΣ',479),(2157,'ΒΟΥΝΩΝ',479),(2158,'ΓΛΥΦΑΔΑΣ',479),(2159,'ΘΕΟΛΟΓΟΥ',479),(2160,'ΚΑΘΕΝΩΝ',479),(2161,'ΚΑΜΠΙΩΝ',479),(2162,'ΛΟΥΤΣΑΣ',479),(2163,'ΜΙΣΤΡΟΥ',479),(2164,'ΠΑΛΙΟΥΡΑ',479),(2165,'ΠΙΣΣΩΝΟΣ',479),(2166,'ΠΟΥΡΝΟΥ',479),(2167,'ΣΤΕΝΗΣ ΔΙΡΦΥΟΣ',479),(2168,'ΣΤΡΟΠΩΝΩΝ',479),(2169,'ΑΓΙΑΣ ΣΟΦΙΑΣ',480),(2170,'ΑΤΤΑΛΗΣ',480),(2171,'ΚΑΜΑΡΙΤΣΗΣ',480),(2172,'ΚΑΣΤΕΛΛΑΣ',480),(2173,'ΚΟΝΤΟΔΕΣΠΟΤΙΟΥ',480),(2174,'ΚΥΠΑΡΙΣΣΙΟΥ',480),(2175,'ΜΑΚΡΥΚΑΠΑΣ',480),(2176,'ΝΕΡΟΤΡΙΒΙΑΣ',480),(2177,'ΠΑΓΩΝΤΑ',480),(2178,'ΠΟΛΙΤΙΚΩΝ',480),(2179,'ΣΤΑΥΡΟΥ',480),(2180,'ΤΡΙΑΔΟΣ',480),(2181,'ΨΑΧΝΩΝ',480),(2182,'ΑΜΑΡΥΝΘΟΥ',481),(2183,'ΑΝΩ ΒΑΘΕΙΑΣ',481),(2184,'ΓΥΜΝΟΥ',481),(2185,'ΚΑΛΛΙΘΕΑΣ',481),(2186,'ΣΕΤΑΣ',481),(2187,'ΕΡΕΤΡΙΑΣ',482),(2188,'ΑΓΙΟΥ',483),(2189,'ΓΙΑΛΤΡΩΝ',483),(2190,'ΛΟΥΤΡΩΝ ΑΙΔΗΨΟΥ',483),(2191,'ΑΓΔΙΝΩΝ',484),(2192,'ΑΓΡΙΟΒΟΤΑΝΟΥ',484),(2193,'ΑΡΤΕΜΙΣΙΟΥ',484),(2194,'ΑΣΜΗΝΙΟΥ',484),(2195,'ΒΑΣΙΛΙΚΩΝ',484),(2196,'ΓΕΡΑΚΙΟΥΣ',484),(2197,'ΓΟΥΒΩΝ',484),(2198,'ΕΛΛΗΝΙΚΩΝ',484),(2199,'ΑΒΓΑΡΙΑΣ',485),(2200,'ΒΟΥΤΑ',485),(2201,'ΓΑΛΑΤΣΑΔΩΝ',485),(2202,'ΓΑΛΑΤΣΩΝΑΣ',485),(2203,'ΙΣΤΙΑΙΑΣ',485),(2204,'ΚΑΜΑΡΙΩΝ',485),(2205,'ΚΟΚΚΙΝΟΜΗΛΕΑΣ',485),(2206,'ΚΡΥΟΝΕΡΙΤΗ',485),(2207,'ΜΗΛΕΩΝ',485),(2208,'ΜΟΝΟΚΑΡΥΑΣ',485),(2209,'ΛΙΧΑΔΟΣ',486),(2210,'ΚΑΣΤΑΝΙΩΤΙΣΣΗΣ',487),(2211,'ΝΕΟΥ ΠΥΡΓΟΥ',487),(2212,'ΤΑΞΙΑΡΧΟΥ',487),(2213,'ΩΡΕΩΝ',487),(2214,'ΑΕΤΟΥ',488),(2215,'ΓΡΑΜΠΙΑΣ',488),(2216,'ΚΑΛΥΒΙΩΝ',488),(2217,'ΚΑΡΥΣΤΟΥ',488),(2218,'ΜΥΛΩΝ',488),(2219,'ΠΛΑΤΑΝΙΣΤΟΥ',488),(2220,'ΑΜΥΓΔΑΛΕΑΣ',489),(2221,'ΚΟΜΙΤΟΥ',489),(2222,'ΑΓΙΟΥ ΔΗΜΗΤΡΙΟΥ',490),(2223,'ΑΚΤΑΙΟΥ',490),(2224,'ΓΙΑΝΝΙΤΣΙΟΥ',490),(2225,'ΚΑΛΛΙΑΝΟΥ',490),(2226,'ΚΑΤΣΑΡΩΝΙΟΥ',490),(2227,'ΜΑΡΜΑΡΙΟΥ',490),(2228,'ΜΕΛΙΣΣΩΝΟΣ',490),(2229,'ΠΑΡΑΔΕΙΣΙΟΥ',490),(2230,'ΣΤΟΥΠΠΑΙΩΝ',490),(2231,'ΑΛΜΥΡΟΠΟΤΑΜΟΥ',491),(2232,'ΜΕΣΟΧΩΡΙΩΝ',491),(2233,'ΝΕΩΝ ΣΤΥΡΩΝ',491),(2234,'ΠΟΛΥΠΟΤΑΜΟΥ',491),(2235,'ΣΤΥΡΩΝ',491),(2236,'ΑΓΙΟΥ ΓΕΩΡΓΙΟΥ',492),(2237,'ΑΥΛΩΝΑΡΙΟΥ',492),(2238,'ΑΧΛΑΔΕΡΗΣ',492),(2239,'ΝΕΟΧΩΡΙΟΥ',492),(2240,'ΟΚΤΩΝΙΑΣ',492),(2241,'ΟΡΙΟΥ',492),(2242,'ΠΥΡΓΙΟΥ',492),(2243,'ΩΡΟΛΟΓΙΟΥ',492),(2244,'ΑΡΓΥΡΟΥ',493),(2245,'ΒΕΛΟΥΣ',493),(2246,'ΔΥΣΤΟΥ',493),(2247,'ΖΑΡΑΚΩΝ',493),(2248,'ΚΟΣΚΙΝΩΝ',493),(2249,'ΚΡΙΕΖΩΝ',493),(2250,'ΛΕΠΟΥΡΩΝ',493),(2251,'ΠΕΤΡΙΩΝ',493),(2252,'ΑΓΙΟΥ ΒΛΑΣΙΟΥ',494),(2253,'ΑΝΩ ΚΟΥΡΟΥΝΙΟΥ',494),(2254,'ΒΡΥΣΗΣ',494),(2255,'ΚΑΔΙΟΥ',494),(2256,'ΚΑΤΩ ΚΟΥΡΟΥΝΙΟΥ',494),(2257,'ΚΗΠΩΝ',494),(2258,'ΚΟΝΙΣΤΡΩΝ',494),(2259,'ΚΡΕΜΑΣΤΟΥ',494),(2260,'ΜΑΚΡΥΧΩΡΙΟΥ',494),(2261,'ΜΑΝΙΚΙΩΝ',494),(2262,'ΜΟΝΟΔΡΥΟΥ',494),(2263,'ΑΝΔΡΩΝΙΑΝΩΝ',495),(2264,'ΑΝΩ ΠΟΤΑΜΙΑΣ',495),(2265,'ΒΙΤΑΛΩΝ',495),(2266,'ΕΝΟΡΙΑΣ',495),(2267,'ΚΑΛΗΜΕΡΙΑΝΩΝ',495),(2268,'ΚΥΜΗΣ',495),(2269,'ΜΑΛΕΤΙΑΝΩΝ',495),(2270,'ΜΕΤΟΧΙΟΥ ΔΙΡΦΥΩΝ',495),(2271,'ΟΞΥΛΙΘΟΥ',495),(2272,'ΠΛΑΤΑΝΑΣ',495),(2273,'ΠΥΡΓΟΥ',495),(2274,'ΤΑΞΙΑΡΧΩΝ',495),(2275,'ΑΓΙΟΥ ΙΩΑΝΝΟΥ',496),(2276,'ΑΓΙΟΥ ΛΟΥΚΑ',496),(2277,'ΑΛΙΒΕΡΙΟΥ',496),(2278,'ΓΑΒΑΛΑ',496),(2279,'ΘΑΡΟΥΝΙΩΝ',496),(2280,'ΠΑΡΘΕΝΙΟΥ',496),(2281,'ΠΡΑΣΙΝΟΥ',496),(2282,'ΤΡΑΧΗΛΙΟΥ',496),(2283,'ΚΕΧΡΙΩΝ',497),(2284,'ΚΟΥΡΚΟΥΛΩΝ',497),(2285,'ΛΙΜΝΗΣ',497),(2286,'ΡΟΒΙΩΝ',497),(2287,'ΣΚΕΠΑΣΤΗΣ',497),(2288,'ΒΛΑΧΙΑΣ',498),(2289,'ΔΑΦΝΟΥΣΣΗΣ',498),(2290,'ΚΗΡΙΝΘΟΥ',498),(2291,'ΜΑΝΤΟΥΔΙΟΥ',498),(2292,'ΜΕΤΟΧΙΟΥ ΚΗΡΕΩΣ',498),(2293,'ΠΗΛΙΟΥ',498),(2294,'ΠΡΟΚΟΠΙΟΥ',498),(2295,'ΣΠΑΘΑΡΙΟΥ',498),(2296,'ΣΤΡΟΦΥΛΙΑΣ',498),(2297,'ΦΑΡΑΚΛΑΣ',498),(2298,'ΑΓΙΑΣ ΑΝΝΗΣ',499),(2299,'ΑΜΕΛΑΝΤΩΝ',499),(2300,'ΑΧΛΑΔΙΟΥ',499),(2301,'ΚΕΡΑΜΕΙΑΣ',499),(2302,'ΚΕΡΑΣΕΑΣ',499),(2303,'ΚΟΤΣΙΚΙΑΣ',499),(2304,'ΠΑΠΠΑΔΩΝ',499),(2305,'ΣΚΥΡΟΥ',500),(2306,'ΔΡΟΣΙΑΣ',501),(2307,'ΛΟΥΚΙΣΙΩΝ',501),(2308,'ΒΑΘΕΟΣ',502),(2309,'ΚΑΛΟΧΩΡΙΟΥ-ΠΑΝΤΕΙΧΙΟΥ',502),(2310,'ΠΑΡΑΛΙΑΣ ΑΥΛΙΔΟΣ',502),(2311,'ΦΑΡΟΥ',502),(2312,'ΑΓΙΟΥ ΝΙΚΟΛΑΟΥ',503),(2313,'ΑΦΡΑΤΙΟΥ',503),(2314,'ΒΑΣΙΛΙΚΟΥ',503),(2315,'ΜΥΤΙΚΑ',503),(2316,'ΝΕΑΣ ΛΑΜΨΑΚΟΥ',503),(2317,'ΦΥΛΛΩΝ',503),(2318,'ΝΕΑΣ ΑΡΤΑΚΗΣ',504),(2319,'ΧΑΛΚΙΔΕΩΝ',505),(2320,'ΑΓΡΑΦΩΝ',506),(2321,'ΒΡΑΓΓΙΑΝΩΝ',506),(2322,'ΕΠΙΝΙΑΝΩΝ',506),(2323,'ΜΑΡΑΘΟΥ',506),(2324,'ΜΟΝΑΣΤΗΡΑΚΙΟΥ',506),(2325,'ΤΡΙΔΕΝΔΡΟΥ',506),(2326,'ΤΡΟΒΑΤΟΥ',506),(2327,'ΒΑΛΑΩΡΑΣ (ΒΕΛΑΟΡΑΣ)',507),(2328,'ΒΟΥΛΠΗΣ',507),(2329,'ΓΡΑΝΙΤΣΗΣ',507),(2330,'ΛΗΜΕΡΙΟΥ',507),(2331,'ΛΙΘΟΧΩΡΙΟΥ',507),(2332,'ΣΙΒΙΣΤΗΣ',507),(2333,'ΤΟΠΟΛΙΑΝΩΝ',507),(2334,'ΚΕΔΡΩΝ',508),(2335,'ΛΕΠΙΑΝΩΝ',508),(2336,'ΝΕΟΥ ΑΡΓΥΡΙΟΥ',508),(2337,'ΠΡΑΣΙΑΣ',508),(2338,'ΡΑΠΤΟΠΟΥΛΟΥ',508),(2339,'ΑΓΙΟΥ ΔΗΜΗΤΡΙΟΥ',509),(2340,'ΒΙΝΙΑΝΗΣ',509),(2341,'ΔΑΦΝΗΣ',509),(2342,'ΚΕΡΑΣΟΧΩΡΙΟΥ',509),(2343,'ΜΑΥΡΟΜΜΑΤΑΣ',509),(2344,'ΧΡΥΣΩΣ',509),(2345,'ΑΝΑΤΟΛΙΚΗΣ ΦΡΑΓΚΙΣΤΑΣ',510),(2346,'ΔΥΤΙΚΗΣ ΦΡΑΓΚΙΣΤΑΣ',510),(2347,'ΕΠΙΣΚΟΠΗΣ',510),(2348,'ΜΑΡΑΘΙΑΣ',510),(2349,'ΠΑΛΑΙΟΚΑΤΟΥΝΑΣ',510),(2350,'ΠΑΛΑΙΟΧΩΡΙΟΥ',510),(2351,'ΤΡΙΠΟΤΑΜΟΥ',510),(2352,'ΑΜΠΛΙΑΝΗΣ (ΣΤΑΥΡΟΠΗΓΙΟΥ)',511),(2353,'ΔΟΜΝΙΣΤΗΣ',511),(2354,'ΚΡΙΚΕΛΛΟΥ',511),(2355,'ΜΕΣΟΚΩΜΗΣ',511),(2356,'ΡΟΣΚΑΣ',511),(2357,'ΣΤΑΒΛΩΝ',511),(2358,'ΨΙΑΝΩΝ',511),(2359,'ΑΓΙΑΣ ΒΛΑΧΕΡΝΗΣ',512),(2360,'ΑΓΙΟΥ ΑΝΔΡΕΟΥ',512),(2361,'ΑΓΙΟΥ ΝΙΚΟΛΑΟΥ',512),(2362,'ΒΟΥΤΥΡΟΥ',512),(2363,'ΚΑΛΕΣΜΕΝΟΥ',512),(2364,'ΚΑΡΠΕΝΗΣΙΟΥ',512),(2365,'ΚΟΡΥΣΧΑΔΩΝ',512),(2366,'ΜΥΡΙΚΗΣ',512),(2367,'ΠΑΠΠΑΡΟΥΣΙΟΥ',512),(2368,'ΠΑΥΛΟΠΟΥΛΟΥ',512),(2369,'ΣΕΛΛΩΝ',512),(2370,'ΣΤΕΝΩΜΑΤΟΣ',512),(2371,'ΣΤΕΦΑΝΙΟΥ',512),(2372,'ΦΙΔΑΚΙΩΝ',512),(2373,'ΑΓΙΑΣ ΤΡΙΑΔΟΣ',513),(2374,'ΑΓΙΟΥ ΧΑΡΑΛΑΜΠΟΥΣ',513),(2375,'ΔΟΜΙΑΝΩΝ',513),(2376,'ΠΕΤΡΑΛΩΝΩΝ',513),(2377,'ΧΟΧΛΙΑΣ',513),(2378,'ΑΝΙΑΔΑΣ',514),(2379,'ΔΕΡΜΑΤΙΟΥ',514),(2380,'ΚΑΡΙΤΣΗΣ ΚΑΡΠΕΝΗΣΙΟΥ',514),(2381,'ΚΛΑΥΣΙΟΥ',514),(2382,'ΜΕΓΑΛΟΥ ΧΩΡΙΟΥ',514),(2383,'ΜΙΚΡΟΥ ΧΩΡΙΟΥ',514),(2384,'ΜΟΥΖΙΛΟΥ',514),(2385,'ΝΟΣΤΙΜΟΥ',514),(2386,'ΣΥΓΚΡΕΛΛΟΥ',514),(2387,'ΧΕΛΙΔΟΝΟΣ',514),(2388,'ΑΛΕΣΤΙΩΝ',515),(2389,'ΑΣΠΡΟΠΥΡΓΟΥ',515),(2390,'ΒΕΛΩΤΩΝ',515),(2391,'ΕΣΩΧΩΡΙΩΝ',515),(2392,'ΚΑΣΤΑΝΕΑΣ',515),(2393,'ΚΑΤΑΒΟΘΡΑΣ',515),(2394,'ΠΡΟΔΡΟΜΟΥ',515),(2395,'ΠΡΟΥΣΟΥ',515),(2396,'ΣΑΡΚΙΝΗΣ',515),(2397,'ΣΤΑΥΡΟΧΩΡΙΟΥ',515),(2398,'ΤΟΡΝΟΥ',515),(2399,'ΒΡΑΧΑΣ',516),(2400,'ΚΛΕΙΣΤΟΥ',516),(2401,'ΦΟΥΡΝΑΣ',516),(2402,'ΑΜΦΙΚΛΕΙΑΣ',517),(2403,'ΔΡΥΜΑΙΑΣ',517),(2404,'ΜΠΡΑΛΟΥ',517),(2405,'ΞΥΛΙΚΩΝ',517),(2406,'ΠΑΛΑΙΟΧΩΡΙΟΥ ΔΩΡΙΕΩΝ',517),(2407,'ΤΙΘΡΩΝΙΟΥ',517),(2408,'ΕΛΑΤΕΙΑΣ',518),(2409,'ΖΕΛΙΟΥ',518),(2410,'ΛΕΥΚΟΧΩΡΙΟΥ',518),(2411,'ΠΑΝΑΓΙΤΣΑΣ',518),(2412,'ΣΦΑΚΑΣ',518),(2413,'ΑΓΙΑΣ ΜΑΡΙΝΗΣ',519),(2414,'ΑΓΙΑΣ ΠΑΡΑΣΚΕΥΗΣ',519),(2415,'ΚΑΤΩ ΤΙΘΟΡΕΑΣ',519),(2416,'ΜΟΔΙΟΥ',519),(2417,'ΤΙΘΟΡΕΑΣ',519),(2418,'ΑΧΛΑΔΕΑΣ',520),(2419,'ΒΟΥΖΙΟΥ',520),(2420,'ΓΕΡΑΚΛΙΟΥ',520),(2421,'ΔΟΜΟΚΟΥ',520),(2422,'ΚΑΡΥΩΝ',520),(2423,'ΛΕΥΚΑΣ',520),(2424,'ΜΑΚΡΟΛΙΒΑΔΟΥ',520),(2425,'ΜΑΝΤΑΣΙΑΣ',520),(2426,'ΜΕΛΙΤΑΙΑΣ',520),(2427,'ΝΕΑΣ ΜΑΚΡΙΣΗΣ',520),(2428,'ΝΕΟΧΩΡΙΟΥ',520),(2429,'ΠΑΛΑΜΑ',520),(2430,'ΠΕΤΡΩΤΟΥ',520),(2431,'ΠΟΛΥΔΕΝΔΡΙΟΥ',520),(2432,'ΠΟΥΡΝΑΡΙΟΥ',520),(2433,'ΦΥΛΙΑΔΩΝΟΣ',520),(2434,'ΑΓΡΑΠΙΔΙΑΣ',521),(2435,'ΒΑΡΔΑΛΗΣ',521),(2436,'ΒΕΛΕΣΙΩΤΩΝ',521),(2437,'ΓΑΒΡΑΚΙΩΝ',521),(2438,'ΕΚΚΑΡΑΣ',521),(2439,'ΘΑΥΜΑΚΟΥ',521),(2440,'ΝΕΟΥ ΜΟΝΑΣΤΗΡΙΟΥ',521),(2441,'ΣΟΦΙΑΔΑΣ',521),(2442,'ΑΓΙΟΥ ΓΕΩΡΓΙΟΥ',522),(2443,'ΑΓΙΟΥ ΣΤΕΦΑΝΟΥ',522),(2444,'ΚΟΡΟΜΗΛΕΑΣ',522),(2445,'ΜΑΚΡΥΡΡΑΧΗΣ',522),(2446,'ΞΥΝΙΑΔΟΣ',522),(2447,'ΟΜΒΡΙΑΚΗΣ',522),(2448,'ΠΑΝΑΓΙΑΣ',522),(2449,'ΠΕΡΙΒΟΛΙΟΥ ΔΟΜΟΚΟΥ',522),(2450,'ΒΑΡΔΑΤΩΝ',523),(2451,'ΓΟΡΓΟΠΟΤΑΜΟΥ',523),(2452,'ΔΑΜΑΣΤΑΣ',523),(2453,'ΔΕΛΦΙΝΟΥ',523),(2454,'ΔΥΟ ΒΟΥΝΩΝ',523),(2455,'ΕΛΕΥΘΕΡΟΧΩΡΙΟΥ',523),(2456,'ΗΡΑΚΛΕΙΑΣ',523),(2457,'ΚΟΥΜΑΡΙΤΣΙΟΥ',523),(2458,'ΜΟΣΧΟΧΩΡΙΟΥ',523),(2459,'ΝΕΟΥ ΚΡΙΚΕΛΛΟΥ',523),(2460,'ΟΙΤΗΣ',523),(2461,'ΑΓΙΑΣ ΠΑΡΑΣΚΕΥΗΣ',524),(2462,'ΑΝΘΗΛΗΣ',524),(2463,'ΔΙΒΡΗΣ',524),(2464,'ΘΕΡΜΟΠΥΛΩΝ',524),(2465,'ΚΑΛΑΜΑΚΙΟΥ',524),(2466,'ΚΟΜΜΑΤΟΣ',524),(2467,'ΚΩΣΤΑΛΕΞΗ',524),(2468,'ΛΑΜΙΕΩΝ',524),(2469,'ΛΥΓΑΡΙΑΣ',524),(2470,'ΜΕΓΑΛΗΣ ΒΡΥΣΗΣ',524),(2471,'ΡΟΔΙΤΣΗΣ',524),(2472,'ΣΤΑΥΡΟΥ',524),(2473,'ΦΡΑΝΤΖΗ',524),(2474,'ΑΜΟΥΡΙΟΥ',525),(2475,'ΖΗΛΕΥΤΟΥ',525),(2476,'ΛΕΙΑΝΟΚΛΑΔΙΟΥ',525),(2477,'ΜΟΣΧΟΚΑΡΥΑΣ',525),(2478,'ΣΤΙΡΦΑΚΑΣ',525),(2479,'ΠΑΥΛΙΑΝΗΣ',526),(2480,'ΑΡΓΥΡΟΧΩΡΙΟΥ',527),(2481,'ΒΑΣΙΛΙΚΩΝ',527),(2482,'ΔΑΦΝΗΣ',527),(2483,'ΚΑΣΤΑΝΕΑΣ',527),(2484,'ΚΟΜΠΟΤΑΔΩΝ',527),(2485,'ΛΑΔΙΚΟΥΣ',527),(2486,'ΛΟΥΤΡΩΝ ΥΠΑΤΗΣ',527),(2487,'ΛΥΧΝΟΥ',527),(2488,'ΜΕΞΙΑΤΩΝ',527),(2489,'ΜΕΣΟΧΩΡΙΟΥ ΥΠΑΤΗΣ',527),(2490,'ΝΕΟΧΩΡΙΟΥ ΥΠΑΤΗΣ',527),(2491,'ΠΕΡΙΣΤΕΡΙΟΥ',527),(2492,'ΠΥΡΓΟΥ',527),(2493,'ΡΟΔΩΝΙΑΣ',527),(2494,'ΣΥΚΑ ΥΠΑΤΗΣ',527),(2495,'ΥΠΑΤΗΣ',527),(2496,'ΑΤΑΛΑΝΤΗΣ',528),(2497,'ΕΞΑΡΧΟΥ',528),(2498,'ΚΑΛΑΠΟΔΙΟΥ',528),(2499,'ΚΥΠΑΡΙΣΣΙΟΥ',528),(2500,'ΚΥΡΤΩΝΗΣ',528),(2501,'ΜΕΓΑΠΛΑΤΑΝΟΥ',528),(2502,'ΤΡΑΓΑΝΑΣ',528),(2503,'ΑΡΚΙΤΣΑΣ',529),(2504,'ΓΟΥΛΕΜΙΟΥ',529),(2505,'ΛΙΒΑΝΑΤΩΝ',529),(2506,'ΜΑΛΕΣΙΝΗΣ',530),(2507,'ΠΡΟΣΚΥΝΑ',530),(2508,'ΛΑΡΥΜΝΗΣ',531),(2509,'ΜΑΡΤΙΝΟΥ',531),(2510,'ΑΓΙΟΥ ΓΕΩΡΓΙΟΥ ΦΘΙΩΤΙΔΑΣ',532),(2511,'ΒΙΤΟΛΗΣ',532),(2512,'ΔΙΚΑΣΤΡΟΥ',532),(2513,'ΜΑΥΡΙΛΟΥ',532),(2514,'ΜΕΓΑΛΗΣ ΚΑΨΗΣ',532),(2515,'ΜΕΡΚΑΔΑΣ',532),(2516,'ΜΕΣΑΙΑΣ ΚΑΨΗΣ',532),(2517,'ΝΕΟΧΩΡΙΟΥ ΤΥΜΦΡΗΣΤΟΥ',532),(2518,'ΠΑΛΑΙΟΚΑΣΤΡΟΥ',532),(2519,'ΠΕΡΙΒΛΕΠΤΟΥ',532),(2520,'ΠΙΤΣΙΩΤΩΝ',532),(2521,'ΠΤΕΛΕΑΣ',532),(2522,'ΑΡΧΑΝΙΟΥ',533),(2523,'ΑΣΒΕΣΤΙΟΥ',533),(2524,'ΓΙΑΝΝΙΤΣΟΥΣ',533),(2525,'ΓΡΑΜΜΕΝΗΣ',533),(2526,'ΚΑΣΤΡΙΟΥ',533),(2527,'ΛΙΤΟΣΕΛΟΥ',533),(2528,'ΜΑΚΡΑΚΩΜΗΣ',533),(2529,'ΜΑΚΡΗΣ',533),(2530,'ΠΑΛΑΙΑΣ ΓΙΑΝΝΙΤΣΟΥΣ',533),(2531,'ΠΑΠΠΑ',533),(2532,'ΠΛΑΤΥΣΤΟΜΟΥ',533),(2533,'ΡΟΒΟΛΙΑΡΙΟΥ',533),(2534,'ΤΡΙΛΟΦΟΥ',533),(2535,'ΤΣΟΥΚΚΑΣ',533),(2536,'ΑΓΙΟΥ ΣΩΣΤΟΥ (ΔΙΛΟΦΟΥ)',534),(2537,'ΑΝΑΤΟΛΗΣ',534),(2538,'ΑΡΓΥΡΙΩΝ',534),(2539,'ΓΑΡΔΙΚΙΟΥ',534),(2540,'ΚΑΛΛΙΘΕΑΣ ΣΠΕΡΧΕΙΑΔΟΣ',534),(2541,'ΚΑΜΠΙΩΝ',534),(2542,'ΚΑΝΑΛΙΩΝ',534),(2543,'ΚΛΩΝΙΟΥ',534),(2544,'ΚΟΛΟΚΥΘΙΑΣ',534),(2545,'ΚΥΡΙΑΚΟΧΩΡΙΟΥ',534),(2546,'ΛΕΥΚΑΔΟΣ',534),(2547,'ΜΑΡΜΑΡΩΝ',534),(2548,'ΜΕΣΟΠΟΤΑΜΙΑΣ',534),(2549,'ΝΙΚΟΛΙΤΣΙΟΥ',534),(2550,'ΠΑΛΑΙΟΒΡΑΧΑΣ',534),(2551,'ΠΑΛΑΙΟΧΩΡΙΟΥ ΤΥΜΦΡΗΣΤΟΥ',534),(2552,'ΠΕΡΙΒΟΛΙΟΥ ΦΘΙΩΤΙΔΑΣ',534),(2553,'ΠΙΤΣΙΟΥ',534),(2554,'ΠΛΑΤΑΝΟΥ',534),(2555,'ΠΟΥΓΚΑΚΙΩΝ',534),(2556,'ΣΠΕΡΧΕΙΑΔΟΣ',534),(2557,'ΦΤΕΡΗΣ',534),(2558,'ΤΥΜΦΡΗΣΤΟΥ',535),(2559,'ΑΓΙΟΥ ΚΩΝΣΤΑΝΤΙΝΟΥ ΛΟΚΡΙΔΟΣ',536),(2560,'ΑΓΝΑΝΤΗΣ',536),(2561,'ΚΑΙΝΟΥΡΓΙΟΥ',537),(2562,'ΚΑΜΕΝΩΝ ΒΟΥΡΛΩΝ',537),(2563,'ΡΕΓΚΙΝΙΟΥ',537),(2564,'ΑΓΙΑΣ ΤΡΙΑΔΟΣ',538),(2565,'ΑΓΙΟΥ ΣΕΡΑΦΕΙΜ',538),(2566,'ΑΓΙΟΥ ΧΑΡΑΛΑΜΠΟΥΣ',538),(2567,'ΑΝΑΒΡΑΣ',538),(2568,'ΚΑΛΛΙΔΡΟΜΟΥ',538),(2569,'ΚΟΜΝΙΝΗΣ',538),(2570,'ΜΕΝΔΕΝΙΤΣΗΣ',538),(2571,'ΜΩΛΟΥ',538),(2572,'ΣΚΑΡΦΕΙΑΣ',538),(2573,'ΑΧΙΝΟΥ',539),(2574,'ΑΧΛΑΔΙΟΥ',539),(2575,'ΚΑΡΑΒΟΜΥΛΟΥ',539),(2576,'ΠΑΛΑΙΟΚΕΡΑΣΕΑΣ',539),(2577,'ΡΑΧΩΝ',539),(2578,'ΣΠΑΡΤΙΑΣ',539),(2579,'ΒΑΘΥΚΟΙΛΟΥ',540),(2580,'ΓΛΥΦΑΣ',540),(2581,'ΜΥΛΩΝ',540),(2582,'ΠΕΛΑΣΓΙΑΣ',540),(2583,'ΑΓΙΑΣ ΜΑΡΙΝΗΣ ΦΘΙΩΤΙΔΟΣ',541),(2584,'ΑΝΥΔΡΟΥ',541),(2585,'ΑΥΛΑΚΙΟΥ',541),(2586,'ΛΟΓΓΙΤΣΙΟΥ',541),(2587,'ΝΕΡΑΙΔΑΣ',541),(2588,'ΣΤΥΛΙΔΟΣ',541),(2589,'ΑΓΙΑΣ ΕΥΘΥΜΙΑΣ',542),(2590,'ΑΓΙΟΥ ΓΕΩΡΓΙΟΥ',542),(2591,'ΑΓΙΟΥ ΚΩΝΣΤΑΝΤΙΝΟΥ',542),(2592,'ΑΜΦΙΣΣΗΣ',542),(2593,'ΔΡΟΣΟΧΩΡΙΟΥ',542),(2594,'ΕΛΑΙΩΝΟΣ',542),(2595,'ΠΡΟΣΗΛΙΟΥ',542),(2596,'ΣΕΡΝΙΚΑΚΙΟΥ',542),(2597,'ΑΓΙΩΝ ΠΑΝΤΩΝ',543),(2598,'ΒΟΥΝΙΧΩΡΑΣ',543),(2599,'ΓΑΛΑΞΙΔΙΟΥ',543),(2600,'ΠΕΝΤΕΟΡΙΩΝ',543),(2601,'ΑΠΟΣΤΟΛΙΑ',544),(2602,'ΒΑΡΓΙΑΝΗΣ',544),(2603,'ΓΡΑΒΙΑΣ',544),(2604,'ΚΑΛΟΣΚΟΠΗΣ',544),(2605,'ΚΑΣΤΕΛΛΙΩΝ',544),(2606,'ΜΑΡΙΟΛΑΤΑΣ',544),(2607,'ΟΙΝΟΧΩΡΙΟΥ',544),(2608,'ΣΚΛΗΘΡΟΥ',544),(2609,'ΔΕΛΦΩΝ',545),(2610,'ΧΡΙΣΣΟΥ',545),(2611,'ΔΕΣΦΙΝΗΣ',546),(2612,'ΙΤΕΑΣ',547),(2613,'ΚΙΡΡΑΣ',547),(2614,'ΤΡΙΤΑΙΑΣ',547),(2615,'ΑΘΑΝΑΣΙΟΥ ΔΙΑΚΟΥ',548),(2616,'ΚΑΣΤΡΙΩΤΙΣΣΗΣ',548),(2617,'ΜΑΥΡΟΛΙΘΑΡΙΟΥ',548),(2618,'ΜΟΥΣΟΥΝΙΤΣΗΣ',548),(2619,'ΠΑΝΟΥΡΓΙΑ',548),(2620,'ΠΥΡΑΣ',548),(2621,'ΣΤΡΟΜΗΣ',548),(2622,'ΕΠΤΑΛΟΦΟΥ',549),(2623,'ΛΙΛΑΙΑΣ',549),(2624,'ΠΟΛΥΔΡΟΣΟΥ',549),(2625,'ΑΛΠΟΧΩΡΙΟΥ(ΑΛΕΠΟΧΩΡΙΟΥ)',550),(2626,'ΑΡΤΟΤΙΝΑΣ',550),(2627,'ΔΙΧΩΡΙΟΥ',550),(2628,'ΖΟΡΙΑΝΟΥ',550),(2629,'ΚΕΡΑΣΕΩΝ',550),(2630,'ΚΟΚΚΙΝΟΥ',550),(2631,'ΚΟΥΠΑΚΙΟΥ',550),(2632,'ΚΡΙΑΤΣΙΟΥ',550),(2633,'ΚΡΟΚΥΛΕΙΟΥ',550),(2634,'ΠΕΝΤΑΓΙΩΝ',550),(2635,'ΠΕΡΙΒΟΛΙΟΥ',550),(2636,'ΤΡΙΣΤΕΝΟΥ',550),(2637,'ΥΨΗΛΟΥ ΧΩΡΙΟΥ',550),(2638,'ΔΡΟΣΑΤΟΥ',551),(2639,'ΕΥΠΑΛΙΟΥ',551),(2640,'ΚΑΜΠΟΥ',551),(2641,'ΚΑΣΤΡΑΚΙΟΥ',551),(2642,'ΚΛΗΜΑΤΟΣ ΕΥΠΑΛΙΟΥ',551),(2643,'ΜΑΛΑΜΑΤΩΝ',551),(2644,'ΜΑΝΑΓΟΥΛΗΣ',551),(2645,'ΜΑΡΑΘΙΑ',551),(2646,'ΜΟΝΑΣΤΗΡΑΚΙΟΥ',551),(2647,'ΠΑΛΑΙΟΞΑΡΙΟΥ',551),(2648,'ΠΟΤΙΔΑΝΕΙΑΣ',551),(2649,'ΠΥΡΓΟΥ',551),(2650,'ΣΕΡΓΟΥΛΑΣ',551),(2651,'ΤΕΙΧΙΟΥ',551),(2652,'ΤΡΙΚΟΡΦΟΥ',551),(2653,'ΦΙΛΟΘΕΗΣ',551),(2654,'ΑΒΟΡΟΥ',552),(2655,'ΑΜΥΓΔΑΛΙΑΣ',552),(2656,'ΒΡΑΪΛΑΣ',552),(2657,'ΔΑΦΝΟΥ',552),(2658,'ΔΙΑΚΟΠΙΟΥ',552),(2659,'ΔΩΡΙΚΟΥ',552),(2660,'ΚΑΛΛΙΟΥ',552),(2661,'ΚΑΡΟΥΤΩΝ',552),(2662,'ΚΟΝΙΑΚΟΥ',552),(2663,'ΛΕΥΚΑΔΙΤΙΟΥ',552),(2664,'ΛΙΔΩΡΙΚΙΟΥ',552),(2665,'ΜΑΛΑΝΔΡΙΝΟΥ',552),(2666,'ΠΕΝΤΑΠΟΛΕΩΣ',552),(2667,'ΠΕΡΙΘΙΩΤΙΣΣΗΣ',552),(2668,'ΣΤΙΛΙΑΣ',552),(2669,'ΣΥΚΕΑΣ',552),(2670,'ΣΩΤΑΙΝΗΣ',552),(2671,'ΓΛΥΦΑΔΑΣ',553),(2672,'ΕΛΑΙΑΣ',553),(2673,'ΕΡΑΤΕΙΝΗΣ',553),(2674,'ΚΑΛΛΙΘΕΑΣ',553),(2675,'ΜΑΚΡΙΝΗΣ',553),(2676,'ΜΗΛΕΑΣ',553),(2677,'ΠΑΝΟΡΜΟΥ',553),(2678,'ΤΟΛΟΦΩΝΟΣ',553),(2679,'ΤΡΙΖΟΝΙΩΝ',553),(2680,'ΑΡΧΑΝΩΝ',554),(2681,'ΚΑΤΩ ΑΡΧΑΝΩΝ',554),(2682,'ΑΧΕΝΤΡΙΑ',555),(2683,'ΕΘΙΑΣ',555),(2684,'ΚΑΛΥΒΙΩΝ',555),(2685,'ΛΙΓΟΡΤΥΝΟΥ',555),(2686,'ΜΕΣΟΧΩΡΙΟΥ',555),(2687,'ΠΑΡΑΝΥΜΦΩΝ',555),(2688,'ΠΡΑΙΤΟΡΙΩΝ',555),(2689,'ΠΥΡΓΟΥ',555),(2690,'ΤΕΦΕΛΙΟΥ',555),(2691,'ΧΑΡΑΚΙΟΥ',555),(2692,'ΧΑΡΑΚΟΣ',555),(2693,'ΑΓΙΟΥ ΒΑΣΙΛΕΙΟΥ',556),(2694,'ΑΓΙΩΝ ΠΑΡΑΣΚΙΩΝ',556),(2695,'ΑΛΑΓΝΙΟΥ',556),(2696,'ΑΣΤΡΑΚΩΝ',556),(2697,'ΑΣΤΡΙΤΣΙΟΥ',556),(2698,'ΔΑΜΑΝΙΩΝ',556),(2699,'ΚΑΛΛΟΝΗΣ',556),(2700,'ΚΑΤΑΛΑΓΑΡΙΟΥ',556),(2701,'ΚΟΥΝΑΒΩΝ',556),(2702,'ΜΕΛΕΣΩΝ',556),(2703,'ΜΕΤΑΞΟΧΩΡΙΟΥ',556),(2704,'ΜΥΡΤΙΑΣ',556),(2705,'ΠΕΖΩΝ',556),(2706,'ΧΟΥΔΕΤΣΙΟΥ',556),(2707,'ΑΓΙΟΥ ΒΑΣΙΛΕΙΟΥ',557),(2708,'ΑΜΙΡΑ',557),(2709,'ΑΝΩ ΒΙΑΝΝΟΥ',557),(2710,'ΑΦΡΑΤΙΟΥ',557),(2711,'ΒΑΧΟΥ',557),(2712,'ΕΜΠΑΡΟΥ',557),(2713,'ΚΑΛΑΜΙΟΥ',557),(2714,'ΚΑΤΩ ΒΙΑΝΝΟΥ',557),(2715,'ΚΑΤΩ ΣΥΜΗΣ',557),(2716,'ΚΕΦΑΛΟΒΡΥΣΙΟΥ',557),(2717,'ΜΑΡΘΑΣ',557),(2718,'ΜΙΛΛΙΑΡΑΔΩΝ',557),(2719,'ΞΕΝΙΑΚΟΥ',557),(2720,'ΠΕΥΚΟΥ',557),(2721,'ΣΥΚΟΛΟΓΟΥ',557),(2722,'ΧΟΝΔΡΟΥ',557),(2723,'ΑΓΙΑΣ ΒΑΡΒΑΡΑΣ',558),(2724,'ΑΓΙΟΥ ΘΩΜΑ',558),(2725,'ΑΝΩ ΜΟΥΛΙΩΝ',558),(2726,'ΔΟΥΛΙΟΥ',558),(2727,'ΛΑΡΑΝΙΟΥ',558),(2728,'ΜΕΓΑΛΗΣ ΒΡΥΣΗΣ',558),(2729,'ΠΡΙΝΙΑ',558),(2730,'ΑΓΙΟΥ ΚΥΡΙΛΛΟΥ',559),(2731,'ΑΓΙΩΝ ΔΕΚΑ',559),(2732,'ΑΜΠΕΛΟΥΖΟΥ',559),(2733,'ΑΠΕΣΩΚΑΡΙΟΥ',559),(2734,'ΒΑΓΙΟΝΙΑΣ',559),(2735,'ΒΑΣΙΛΙΚΗΣ',559),(2736,'ΒΑΣΙΛΙΚΩΝ ΑΝΩΓΕΙΩΝ',559),(2737,'ΓΚΑΓΚΑΛΩΝ',559),(2738,'ΜΗΤΡΟΠΟΛΕΩΣ',559),(2739,'ΜΙΑΜΟΥΣ',559),(2740,'ΠΛΑΤΑΝΟΥ',559),(2741,'ΠΛΩΡΑΣ',559),(2742,'ΧΟΥΣΤΟΥΛΙΑΝΩΝ',559),(2743,'ΑΝΩ ΑΚΡΙΩΝ',560),(2744,'ΑΣΗΜΙΟΥ',560),(2745,'ΔΙΟΝΥΣΙΟΥ',560),(2746,'ΛΟΥΡΩΝ',560),(2747,'ΣΟΚΑΡΑ',560),(2748,'ΣΤΑΒΙΩΝ',560),(2749,'ΣΤΕΡΝΩΝ',560),(2750,'ΣΤΟΛΩΝ',560),(2751,'ΓΕΡΓΕΡΗΣ',561),(2752,'ΝΥΒΡΙΤΟΥ',561),(2753,'ΠΑΝΑΣΟΥ',561),(2754,'ΑΓΙΟΥ ΜΥΡΩΝΟΣ',562),(2755,'ΑΝΩ ΑΣΙΤΩΝ',562),(2756,'ΚΑΤΩ ΑΣΙΤΩΝ',562),(2757,'ΠΕΝΤΑΜΟΔΙΟΥ',562),(2758,'ΠΕΤΡΟΚΕΦΑΛΟΥ',562),(2759,'ΠΥΡΓΟΥΣ',562),(2760,'1ο ΔΗΜ. ΔΙΑΜΕΡ. ΗΡΑΚΛΕΙΟΥ',563),(2761,'2ο ΔΗΜ. ΔΙΑΜΕΡ. ΗΡΑΚΛΕΙΟΥ',563),(2762,'3ο ΔΗΜ. ΔΙΑΜΕΡ. ΗΡΑΚΛΕΙΟΥ(συμπεριλαμβάνονται οι οικισμοί Αθάνατων, Γουρνών, Δρακουλιάρη, Λοφουπόλεως Σέμελης και Φοινικιά)',563),(2763,'4ο ΔΗΜ. ΔΙΑΜΕΡ. ΗΡΑΚΛΕΙΟΥ(συμπεριλαμβάνονται οι οικισμοί Αγίας Ειρήνης, Βλυχιάς, Κνωσού και Μαραθίτη',563),(2764,'ΒΑΣΙΛΕΙΩΝ',563),(2765,'ΒΟΥΤΩΝ',563),(2766,'ΔΑΦΝΕ',563),(2767,'ΣΚΑΛΑΝΙΟΥ',563),(2768,'ΣΤΑΥΡΑΚΙΩΝ',563),(2769,'ΚΑΛΛΙΘΕΑΣ',564),(2770,'ΝΕΑΣ ΑΛΙΚΑΡΝΑΣΣΟΥ',564),(2771,'ΑΥΓΕΝΙΚΗΣ',565),(2772,'ΒΕΝΕΡΑΤΟΥ',565),(2773,'ΚΕΡΑΣΙΩΝ',565),(2774,'ΣΙΒΑΣ',565),(2775,'ΑΓΙΟΥ ΣΥΛΛΑ',566),(2776,'ΚΥΠΑΡΙΣΣΟΥ',566),(2777,'ΠΡΟΦΗΤΟΥ ΗΛΙΑ',566),(2778,'ΑΧΛΑΔΑΣ',567),(2779,'ΓΑΖΙΟΥ',567),(2780,'ΚΑΛΕΣΙΩΝ',567),(2781,'ΡΟΔΙΑΣ',567),(2782,'ΦΟΔΕΛΕ',567),(2783,'ΚΟΡΦΩΝ',568),(2784,'ΚΡΟΥΣΩΝΟΣ',568),(2785,'ΛΟΥΤΡΑΚΙΟΥ',568),(2786,'ΣΑΡΧΟΥ',568),(2787,'ΑΗΔΟΝΟΧΩΡΙΟΥ',569),(2788,'ΑΣΤΥΡΑΚΙΟΥ',569),(2789,'ΓΩΝΙΩΝ ΜΑΛΕΒΙΖΙΟΥ',569),(2790,'ΔΑΜΑΣΤΑΣ',569),(2791,'ΚΑΜΑΡΙΟΥ',569),(2792,'ΚΑΜΑΡΙΩΤΟΥ',569),(2793,'ΚΕΡΑΜΟΥΤΣΙΟΥ',569),(2794,'ΜΑΡΑΘΟΥ',569),(2795,'ΜΟΝΗΣ',569),(2796,'ΤΥΛΙΣΟΥ',569),(2797,'ΑΡΚΑΛΟΧΩΡΙΟΥ',570),(2798,'ΓΑΡΙΠΑΣ',570),(2799,'ΔΕΜΑΤΙΟΥ',570),(2800,'ΙΝΙΟΥ',570),(2801,'ΚΑΡΑΒΑΔΟΥ',570),(2802,'ΚΑΣΑΝΟΥ',570),(2803,'ΚΑΣΤΕΛΛΙΑΝΩΝ',570),(2804,'ΛΕΥΚΟΧΩΡΙΟΥ',570),(2805,'ΝΙΠΙΔΙΤΟΥ',570),(2806,'ΠΑΝΑΓΙΑΣ',570),(2807,'ΠΑΝΟΡΑΜΑΤΟΣ',570),(2808,'ΠΑΡΤΙΡΩΝ',570),(2809,'ΠΑΤΣΙΔΕΡΟΥ',570),(2810,'ΣΚΙΝΙΑ',570),(2811,'ΒΟΝΗΣ',571),(2812,'ΖΩΦΟΡΩΝ',571),(2813,'ΘΡΑΨΑΝΟΥ',571),(2814,'ΣΑΜΠΑ',571),(2815,'ΑΜΑΡΙΑΝΟΥ',572),(2816,'ΑΠΟΣΤΟΛΩΝ',572),(2817,'ΑΡΧΑΓΓΕΛΟΥ',572),(2818,'ΑΣΚΩΝ',572),(2819,'ΓΕΡΑΚΙΟΥ',572),(2820,'ΕΥΑΓΓΕΛΙΣΜΟΥ',572),(2821,'ΚΑΡΟΥΖΑΝΩΝ',572),(2822,'ΚΑΣΤΑΜΟΝΙΤΣΗΣ',572),(2823,'ΚΑΣΤΕΛΛΙΟΥ',572),(2824,'ΛΙΛΙΑΝΟΥ',572),(2825,'ΛΥΤΤΟΥ (ΞΥΔΑ)',572),(2826,'ΜΑΘΙΑΣ',572),(2827,'ΠΟΛΥΘΕΑΣ',572),(2828,'ΣΜΑΡΙΟΥ',572),(2829,'ΒΟΡΙΖΙΩΝ',573),(2830,'ΖΑΡΟΥ',573),(2831,'ΜΟΡΟΝΙΟΥ',573),(2832,'ΑΛΗΘΙΝΗΣ',574),(2833,'ΑΝΤΙΣΚΑΡΙΟΥ',574),(2834,'ΓΑΛΙΑΣ',574),(2835,'ΚΑΣΤΕΛΛΙΟΥ',574),(2836,'ΚΟΥΣΕ',574),(2837,'ΜΟΙΡΩΝ',574),(2838,'ΠΕΡΙΟΥ',574),(2839,'ΠΕΤΡΟΚΕΦΑΛΙΟΥ',574),(2840,'ΠΗΓΑΪΔΑΚΙΩΝ',574),(2841,'ΠΟΜΠΙΑΣ',574),(2842,'ΡΟΥΦΑ',574),(2843,'ΣΚΟΥΡΒΟΥΛΩΝ',574),(2844,'ΒΩΡΩΝ',575),(2845,'ΓΡΗΓΟΡΙΑΣ',575),(2846,'ΚΑΜΑΡΩΝ',575),(2847,'ΚΑΜΗΛΑΡΙΟΥ',575),(2848,'ΚΛΗΜΑΤΟΣ',575),(2849,'ΛΑΓΟΛΙΟΥ',575),(2850,'ΜΑΓΑΡΙΚΑΡΙΟΥ',575),(2851,'ΠΙΤΣΙΔΙΩΝ',575),(2852,'ΣΙΒΑ',575),(2853,'ΤΥΜΠΑΚΙΟΥ',575),(2854,'ΦΑΝΕΡΩΜΕΝΗΣ',575),(2855,'ΑΝΩΠΟΛΕΩΣ',576),(2856,'ΓΟΥΒΩΝ',576),(2857,'ΕΛΑΙΑΣ',576),(2858,'ΕΠΑΝΩ ΒΑΘΕΙΑΣ',576),(2859,'ΚΑΛΟΥ ΧΩΡΙΟΥ',576),(2860,'ΚΑΤΩ ΒΑΘΕΙΑΣ',576),(2861,'ΚΟΞΑΡΗΣ',576),(2862,'ΧΑΡΑΣΟΥ',576),(2863,'ΑΪΤΑΝΙΩΝ',577),(2864,'ΓΑΛΙΦΑΣ',577),(2865,'ΕΠΙΣΚΟΠΗΣ',577),(2866,'ΚΑΙΝΟΥΡΓΙΟΥ ΧΩΡΙΟΥ',577),(2867,'ΣΓΟΥΡΟΚΕΦΑΛΙΟΥ',577),(2868,'ΚΡΑΣΙΟΥ',578),(2869,'ΜΑΛΙΩΝ',578),(2870,'ΜΟΧΟΥ',578),(2871,'ΑΒΔΟΥ',579),(2872,'ΓΩΝΙΩΝ ΠΕΔΙΑΔΟΣ',579),(2873,'ΚΕΡΑΣ',579),(2874,'ΛΙΜΕΝΟΣ ΧΕΡΣΟΝΗΣΟΥ',579),(2875,'ΠΟΤΑΜΙΩΝ',579),(2876,'ΧΕΡΣΟΝΗΣΟΥ',579),(2877,'ΑΓΙΟΥ ΝΙΚΟΛΑΟΥ',580),(2878,'ΒΡΟΥΧΑ',580),(2879,'ΕΛΟΥΝΤΑΣ',580),(2880,'ΕΞΩ ΛΑΚΚΩΝΙΩΝ',580),(2881,'ΕΞΩ ΠΟΤΑΜΩΝ',580),(2882,'ΖΕΝΙΩΝ',580),(2883,'ΚΑΛΟΥ ΧΩΡΙΟΥ',580),(2884,'ΚΡΙΤΣΑΣ',580),(2885,'ΚΡΟΥΣΤΑ',580),(2886,'ΛΙΜΝΩΝ',580),(2887,'ΛΟΥΜΑ',580),(2888,'ΜΕΣΑ ΛΑΚΚΩΝΙΩΝ',580),(2889,'ΠΡΙΝΑΣ',580),(2890,'ΣΚΙΝΙΑ',580),(2891,'ΒΡΑΧΑΣΙΟΥ',581),(2892,'ΑΓΙΟΥ ΑΝΤΩΝΙΟΥ',582),(2893,'ΒΟΥΛΙΣΜΕΝΗΣ',582),(2894,'ΒΡΥΣΩΝ',582),(2895,'ΚΑΡΥΔΙΟΥ ΜΙΡΑΜΠΕΛΛΟΥ',582),(2896,'ΚΑΣΤΕΛΛΙΟΥ ΦΟΥΡΝΗΣ',582),(2897,'ΛΑΤΣΙΔΑΣ',582),(2898,'ΝΕΑΠΟΛΕΩΣ',582),(2899,'ΝΙΚΗΘΙΑΝΟΥ',582),(2900,'ΦΟΥΡΝΗΣ',582),(2901,'ΧΟΥΜΕΡΙΑΚΟΥ',582),(2902,'ΑΓΙΟΥ ΙΩΑΝΝΟΥ',583),(2903,'ΑΝΑΤΟΛΗΣ',583),(2904,'ΓΔΟΧΙΩΝ',583),(2905,'ΙΕΡΑΠΕΤΡΑΣ',583),(2906,'ΚΑΒΟΥΣΙΟΥ',583),(2907,'ΚΑΛΑΜΑΥΚΑΣ',583),(2908,'ΚΑΤΩ ΧΩΡΙΟΥ',583),(2909,'ΜΑΚΡΥΛΙΑΣ',583),(2910,'ΜΑΛΩΝ',583),(2911,'ΜΕΣΕΛΕΡΩΝ',583),(2912,'ΜΕΤΑΞΟΧΩΡΙΟΥ',583),(2913,'ΜΟΥΡΝΙΩΝ',583),(2914,'ΜΥΘΩΝ',583),(2915,'ΜΥΡΤΟΥ',583),(2916,'ΠΑΧΕΙΑΣ ΑΜΜΟΥ',583),(2917,'ΡΙΖΗΣ',583),(2918,'ΧΡΙΣΤΟΥ',583),(2919,'ΑΓΙΟΥ ΣΤΕΦΑΝΟΥ',584),(2920,'ΛΙΘΙΝΩΝ',584),(2921,'ΟΡΕΙΝΟΥ',584),(2922,'ΠΕΡΙΒΟΛΑΚΙΩΝ',584),(2923,'ΠΕΥΚΩΝ',584),(2924,'ΣΤΑΥΡΟΧΩΡΙΟΥ',584),(2925,'ΣΧΙΝΟΚΑΨΑΛΩΝ',584),(2926,'ΧΡΥΣΟΠΗΓΗΣ',584),(2927,'ΑΒΡΑΚΟΝΤΕ',585),(2928,'ΑΓΙΟΥ ΓΕΩΡΓΙΟΥ',585),(2929,'ΑΓΙΟΥ ΚΩΝΣΤΑΝΤΙΝΟΥ',585),(2930,'ΚΑΜΙΝΑΚΙΟΥ',585),(2931,'ΚΑΤΩ ΜΕΤΟΧΙΟΥ',585),(2932,'ΛΑΓΟΥ',585),(2933,'ΜΑΡΜΑΚΕΤΟΥ',585),(2934,'ΜΕΣΑ ΛΑΣΙΘΙΟΥ',585),(2935,'ΠΛΑΤΗΣ',585),(2936,'ΤΖΕΡΜΙΑΔΟΥ',585),(2937,'ΨΥΧΡΟΥ',585),(2938,'ΖΑΚΡΟΥ',586),(2939,'ΚΑΡΥΔΙΟΥ(ΣΗΤΕΙΑΣ)',586),(2940,'ΜΗΤΑΤΟΥ',586),(2941,'ΠΑΛΑΙΚΑΣΤΡΟΥ',586),(2942,'ΑΓΙΑΣ ΤΡΙΑΔΟΣ',587),(2943,'ΑΠΙΔΙΩΝ (ΜΕΣΑ ΑΠΙΔΙΟΥ)',587),(2944,'ΑΡΜΕΝΩΝ',587),(2945,'ΖΙΡΟΥ',587),(2946,'ΠΑΠΠΑΓΙΑΝΝΑΔΩΝ',587),(2947,'ΧΑΝΔΡΑ',587),(2948,'ΑΓΙΟΥ ΓΕΩΡΓΙΟΥ',588),(2949,'ΑΧΛΑΔΙΩΝ',588),(2950,'ΕΞΩ ΜΟΥΛΙΑΝΩΝ',588),(2951,'ΚΑΤΣΙΔΩΝΙΟΥ',588),(2952,'ΚΡΥΩΝ',588),(2953,'ΛΑΣΤΡΟΥ',588),(2954,'ΜΑΡΩΝΙΑΣ',588),(2955,'ΜΕΣΑ ΜΟΥΛΙΑΝΩΝ',588),(2956,'ΜΥΡΣΙΝΗΣ',588),(2957,'ΠΙΣΚΟΚΕΦΑΛΟΥ',588),(2958,'ΠΡΑΙΣΟΥ',588),(2959,'ΡΟΥΣΣΑΣ ΕΚΚΛΗΣΙΑΣ',588),(2960,'ΣΗΤΕΙΑΣ',588),(2961,'ΣΚΟΠΗΣ',588),(2962,'ΣΤΑΥΡΩΜΕΝΟΥ',588),(2963,'ΣΦΑΚΑΣ',588),(2964,'ΤΟΥΡΛΩΤΗΣ',588),(2965,'ΧΑΜΕΖΙΟΥ',588),(2966,'ΑΓΙΑΣ ΓΑΛΗΝΗΣ',589),(2967,'ΑΚΟΥΜΙΩΝ',589),(2968,'ΑΡΔΑΚΤΟΥ',589),(2969,'ΔΡΙΜΙΣΚΟΥ',589),(2970,'ΚΑΡΙΝΩΝ',589),(2971,'ΚΕΝΤΡΟΧΩΡΙΟΥ',589),(2972,'ΚΕΡΑΜΕ',589),(2973,'ΚΙΣΣΟΥ',589),(2974,'ΚΡΥΑΣ ΒΡΥΣΗΣ',589),(2975,'ΛΑΜΠΙΝΗΣ',589),(2976,'ΜΕΛΑΜΠΩΝ',589),(2977,'ΜΟΥΡΝΕΣ',589),(2978,'ΜΥΞΟΡΡΟΥΜΑ',589),(2979,'ΟΡΝΕΣ',589),(2980,'ΣΑΚΤΟΥΡΙΩΝ',589),(2981,'ΣΠΗΛΙΟΥ',589),(2982,'ΑΓΙΟΥ ΒΑΣΙΛΕΙΟΥ',590),(2983,'ΑΓΙΟΥ ΙΩΑΝΝΟΥ',590),(2984,'ΑΓΚΟΥΣΕΛΙΑΝΩΝ',590),(2985,'ΑΣΩΜΑΤΟΥ',590),(2986,'ΚΟΞΑΡΕΣ',590),(2987,'ΛΕΥΚΟΓΕΙΩΝ',590),(2988,'ΜΑΡΙΟΥ',590),(2989,'ΜΥΡΘΙΟΥ',590),(2990,'ΡΟΔΑΚΙΝΟΥ',590),(2991,'ΣΕΛΛΙΩΝ',590),(2992,'ΑΓΙΑΣ ΠΑΡΑΣΚΕΥΗΣ',591),(2993,'ΑΓΙΟΥ ΙΩΑΝΝΟΥ',591),(2994,'ΑΠΟΔΟΥΛΟΥ',591),(2995,'ΒΙΖΑΡΙΟΥ',591),(2996,'ΚΟΥΡΟΥΤΩΝ',591),(2997,'ΛΑΜΠΙΩΤΩΝ',591),(2998,'ΛΟΧΡΙΑΣ',591),(2999,'ΝΙΘΑΥΡΕΩΣ',591),(3000,'ΠΕΤΡΟΧΩΡΙΟΥ',591),(3001,'ΠΛΑΤΑΝΙΩΝ',591),(3002,'ΠΛΑΤΑΝΟΥ',591),(3003,'ΦΟΥΡΦΟΥΡΑ',591),(3004,'ΑΜΑΡΙΟΥ',592),(3005,'ΑΝΩ ΜΕΡΟΥΣ',592),(3006,'ΑΠΟΣΤΟΛΩΝ',592),(3007,'ΒΙΣΤΑΓΗΣ',592),(3008,'ΒΡΥΣΩΝ',592),(3009,'ΒΩΛΕΩΝΩΝ',592),(3010,'ΓΕΡΑΚΑΡΙΟΥ',592),(3011,'ΕΛΕΝΩΝ',592),(3012,'ΘΡΟΝΟΥ',592),(3013,'ΚΑΛΟΓΕΡΟΥ',592),(3014,'ΜΕΡΩΝΑ',592),(3015,'ΜΟΝΑΣΤΗΡΑΚΙΟΥ',592),(3016,'ΠΑΝΤΑΝΑΣΣΗΣ',592),(3017,'ΠΑΤΣΟΥ',592),(3018,'ΑΝΩΓΕΙΩΝ',593),(3019,'ΑΓΓΕΛΙΑΝΩΝ',594),(3020,'ΑΓΙΟΥ ΜΑΜΑΝΤΟΣ',594),(3021,'ΑΛΦΑΣ',594),(3022,'ΑΧΛΑΔΕ',594),(3023,'ΚΑΛΑΝΔΑΡΕΣ',594),(3024,'ΜΑΡΓΑΡΙΤΩΝ',594),(3025,'ΜΕΛΙΔΟΝΙΟΥ',594),(3026,'ΜΕΛΙΣΣΟΥΡΓΑΚΙΟΥ',594),(3027,'ΟΡΘΕ',594),(3028,'ΠΑΝΟΡΜΟΥ',594),(3029,'ΠΑΣΑΛΙΤΩΝ',594),(3030,'ΠΕΡΑΜΑΤΟΣ',594),(3031,'ΡΟΥΜΕΛΗΣ',594),(3032,'ΣΙΣΩΝ',594),(3033,'ΣΚΕΠΑΣΤΗΣ',594),(3034,'ΧΟΥΜΕΡΙΟΥ',594),(3035,'ΖΩΝΙΑΝΩΝ',595),(3036,'ΑΓΙΑΣ',596),(3037,'ΑΓΙΟΥ ΙΩΑΝΝΟΥ ΜΥΛΟΠΟΤΑΜΟΥ',596),(3038,'ΑΪΜΟΝΑ',596),(3039,'ΑΛΟΪΔΩΝ',596),(3040,'ΑΞΟΥ',596),(3041,'ΑΠΛΑΔΙΑΝΩΝ',596),(3042,'ΒΕΝΙΟΥ',596),(3043,'ΓΑΡΑΖΟΥ',596),(3044,'ΔΑΜΑΒΟΛΟΥ',596),(3045,'ΔΟΞΑΡΟΥ',596),(3046,'ΕΠΙΣΚΟΠΗΣ',596),(3047,'ΘΕΟΔΩΡΑΣ',596),(3048,'ΚΑΛΥΒΟΥ',596),(3049,'ΚΡΥΟΝΕΡΙΟΥ',596),(3050,'ΛΙΒΑΔΙΩΝ',596),(3051,'ΧΩΝΟΥ',596),(3052,'ΑΔΕΛΕ',597),(3053,'ΑΜΝΑΤΟΥ',597),(3054,'ΑΡΧΑΙΑΣ ΕΛΕΥΘΕΡΝΑΣ(ΠΡΙΝΕ)',597),(3055,'ΕΛΕΥΘΕΡΝΗΣ',597),(3056,'ΕΡΦΩΝ',597),(3057,'ΚΥΡΙΑΝΝΑΣ',597),(3058,'ΜΕΣΗΣ',597),(3059,'ΠΑΓΚΑΛΟΧΩΡΙΟΥ',597),(3060,'ΠΗΓΗΣ',597),(3061,'ΠΡΙΝΟΥ',597),(3062,'ΣΚΟΥΛΟΥΦΙΩΝ',597),(3063,'ΧΑΜΑΛΕΥΡΙΟΥ',597),(3064,'ΧΑΡΚΙΩΝ',597),(3065,'ΑΡΓΥΡΟΥΠΟΛΕΩΣ',598),(3066,'ΑΡΧΟΝΤΙΚΗΣ',598),(3067,'ΒΙΛΑΝΔΡΕΔΟΥ',598),(3068,'ΕΠΙΣΚΟΠΗΣ',598),(3069,'ΚΑΡΩΤΗ',598),(3070,'ΚΑΤΩ ΠΟΡΟΥ',598),(3071,'ΚΟΥΦΗΣ',598),(3072,'ΜΥΡΙΟΚΕΦΑΛΩΝ',598),(3073,'ΑΓΙΟΥ ΚΩΝΣΤΑΝΤΙΝΟΥ',599),(3074,'ΑΝΩ ΒΑΛΣΑΜΟΝΕΡΟΥ',599),(3075,'ΑΤΣΙΠΟΠΟΥΛΟΥ',599),(3076,'ΓΕΡΑΝΙΟΥ',599),(3077,'ΓΩΝΙΑΣ',599),(3078,'ΖΟΥΡΙΔΙΟΥ',599),(3079,'ΚΑΛΟΝΥΚΤΟΥ',599),(3080,'ΚΑΤΩ ΒΑΛΣΑΜΟΝΕΡΟΥ',599),(3081,'ΜΑΛΑΚΙΩΝ',599),(3082,'ΜΟΥΝΤΡΟΥ',599),(3083,'ΠΡΙΝΕ',599),(3084,'ΡΟΥΣΤΙΚΩΝ',599),(3085,'ΣΑΪΤΟΥΡΩΝ',599),(3086,'ΦΡΑΝΤΖΕΣΚΙΑΝΩΝ ΜΕΤΟΧΙΩΝ',599),(3087,'ΑΡΜΕΝΩΝ',600),(3088,'ΓΟΥΛΕΔΙΑΝΩΝ',600),(3089,'ΚΑΡΕΣ',600),(3090,'ΚΑΣΤΕΛΛΟΥ',600),(3091,'ΚΟΥΜΩΝ',600),(3092,'ΜΑΡΟΥΛΑ',600),(3093,'ΟΡΟΥΣ',600),(3094,'ΠΡΑΣΙΩΝ',600),(3095,'ΡΕΘΥΜΝΗΣ',600),(3096,'ΡΟΥΣΣΟΣΠΙΤΙΟΥ',600),(3097,'ΣΕΛΛΙΟΥ',600),(3098,'ΧΡΟΜΟΝΑΣΤΗΡΙΟΥ',600),(3099,'ΑΡΜΕΝΩΝ',601),(3100,'ΚΑΛΥΒΩΝ',601),(3101,'ΚΑΡΩΝ ΑΠΟΚΟΡΩΝΟΥ',601),(3102,'ΜΑΧΑΙΡΩΝ',601),(3103,'ΝΕΟΥ ΧΩΡΙΟΥ',601),(3104,'ΡΑΜΝΗΣ',601),(3105,'ΣΤΥΛΟΥ',601),(3106,'ΑΣΗ ΓΩΝΙΑΣ',602),(3107,'ΒΑΜΟΥ',603),(3108,'ΓΑΒΑΛΟΧΩΡΙΟΥ',603),(3109,'ΚΑΙΝΑΣ',603),(3110,'ΚΑΛΑΜΙΤΣΙΟΥ ΑΛΕΞΑΝΔΡΟΥ',603),(3111,'ΚΕΦΑΛΑ',603),(3112,'ΚΟΚΚΙΝΟΥ ΧΩΡΙΟΥ',603),(3113,'ΞΗΡΟΣΤΕΡΝΙΟΥ',603),(3114,'ΠΛΑΚΑΣ',603),(3115,'ΣΕΛΛΙΩΝ',603),(3116,'ΓΕΩΡΓΙΟΥΠΟΛΕΩΣ',604),(3117,'ΚΑΛΑΜΙΤΣΙΟΥ ΑΜΥΓΔΑΛΙΟΥ',604),(3118,'ΚΑΣΤΕΛΛΟΥ',604),(3119,'ΚΟΥΡΝΑ',604),(3120,'ΦΥΛΑΚΗΣ',604),(3121,'ΑΛΙΚΑΜΠΟΥ',605),(3122,'ΒΑΦΕ',605),(3123,'ΒΡΥΣΩΝ',605),(3124,'ΕΜΠΡΟΣΝΕΡΟΥ',605),(3125,'ΜΑΖΗΣ',605),(3126,'ΝΙΠΟΥΣ',605),(3127,'ΜΕΛΙΔΟΝΙΟΥ',606),(3128,'ΠΑΪΔΟΧΩΡΙΟΥ',606),(3129,'ΠΕΜΟΝΙΩΝ',606),(3130,'ΤΖΙΤΖΙΦΕ',606),(3131,'ΦΡΕ',606),(3132,'ΓΑΥΔΟΥ',607),(3133,'ΕΠΑΝΩΧΩΡΙΟΥ',608),(3134,'ΚΑΜΠΑΝΟΥ',608),(3135,'ΡΟΔΟΒΑΝΙΟΥ',608),(3136,'ΣΚΑΦΗΣ',608),(3137,'ΣΟΥΓΙΑΣ',608),(3138,'ΤΕΜΕΝΙΩΝ',608),(3139,'ΚΑΚΟΔΙΚΙΟΥ',609),(3140,'ΚΑΝΔΑΝΟΥ (ΚΑΝΤΑΝΟΥ)',609),(3141,'ΠΛΕΜΕΝΙΑΝΩΝ',609),(3142,'ΒΟΘΙΑΝΩΝ',610),(3143,'ΒΟΥΤΑ',610),(3144,'ΠΑΛΑΙΟΧΩΡΑΣ',610),(3145,'ΣΑΡΑΚΗΝΑΣ',610),(3146,'ΣΚΛΑΒΟΠΟΥΛΑΣ',610),(3147,'ΑΜΥΓΔΑΛΟΚΕΦΑΛΙΟΥ',611),(3148,'ΒΑΘΗΣ',611),(3149,'ΒΛΑΤΟΥΣ',611),(3150,'ΕΛΟΥΣ',611),(3151,'ΚΑΜΠΟΥ',611),(3152,'ΚΕΦΑΛΙΟΥ',611),(3153,'ΠΕΡΙΒΟΛΙΩΝ',611),(3154,'ΣΤΡΟΒΛΩΝ',611),(3155,'ΓΡΑΜΒΟΥΣΗΣ',612),(3156,'ΚΑΛΑΘΕΝΩΝ',612),(3157,'ΚΑΛΛΕΡΓΙΑΝΩΝ',612),(3158,'ΚΙΣΣΑΜΟΥ',612),(3159,'ΚΟΥΚΟΥΝΑΡΑΣ',612),(3160,'ΛΟΥΣΑΚΙΩΝ',612),(3161,'ΠΛΑΤΑΝΟΥ',612),(3162,'ΠΟΛΥΡΡΗΝΙΑΣ',612),(3163,'ΣΗΡΙΚΑΡΙΟΥ',612),(3164,'ΒΟΥΛΓΑΡΩ',613),(3165,'ΔΡΑΠΑΝΙΑ',613),(3166,'ΚΑΛΟΥΔΙΑΝΩΝ',613),(3167,'ΜΑΛΑΘΥΡΟΥ',613),(3168,'ΠΕΡΒΟΛΑΚΙΩΝ',613),(3169,'ΠΟΤΑΜΙΔΑΣ',613),(3170,'ΡΟΚΚΑΣ',613),(3171,'ΣΑΣΑΛΟΥ',613),(3172,'ΣΦΑΚΟΠΗΓΑΔΙΟΥ',613),(3173,'ΤΟΠΟΛΙΩΝ',613),(3174,'ΦΑΛΕΛΙΑΝΩΝ',613),(3175,'ΧΑΙΡΕΘΙΑΝΩΝ',613),(3176,'ΑΝΩΣΚΕΛΗΣ',614),(3177,'ΒΟΥΚΟΛΙΩΝ',614),(3178,'ΚΑΚΟΠΕΤΡΟΥ',614),(3179,'ΝΕΟΥ ΧΩΡΙΟΥ',614),(3180,'ΝΕΡΙΑΝΩΝ',614),(3181,'ΠΑΛΑΙΩΝ ΡΟΥΜΑΤΩΝ',614),(3182,'ΠΟΛΕΜΑΡΧΙΟΥ',614),(3183,'ΤΑΥΡΩΝΙΤΟΥ',614),(3184,'ΧΡΥΣΑΥΓΗΣ',614),(3185,'ΑΦΡΑΤΩΝ',615),(3186,'ΒΑΣΙΛΟΠΟΥΛΟΥ',615),(3187,'ΒΟΥΒΩΝ',615),(3188,'ΓΛΩΣΣΗΣ',615),(3189,'ΔΕΛΙΑΝΩΝ',615),(3190,'ΔΡΑΚΟΝΑΣ',615),(3191,'ΕΠΙΣΚΟΠΗΣ',615),(3192,'ΖΥΜΠΡΑΓΟΥ',615),(3193,'ΚΑΛΥΔΟΝΙΑΣ',615),(3194,'ΚΑΜΙΣΙΑΝΩΝ',615),(3195,'ΚΑΡΩΝ ΚΙΣΣΑΜΟΥ',615),(3196,'ΚΟΛΥΜΒΑΡΙΟΥ',615),(3197,'ΝΟΧΙΩΝ',615),(3198,'ΠΑΝΕΘΗΜΟΥ',615),(3199,'ΡΑΒΔΟΥΧΑΣ',615),(3200,'ΡΟΔΩΠΟΥ',615),(3201,'ΣΠΗΛΙΑΣ',615),(3202,'ΑΛΙΚΙΑΝΟΥ',616),(3203,'ΒΑΤΟΛΑΚΚΟΥ',616),(3204,'ΚΑΡΑΝΟΥ (ΚΑΡΩΝ)',616),(3205,'ΚΟΥΦΟΥ',616),(3206,'ΛΑΚΚΩΝ',616),(3207,'ΜΕΣΚΛΩΝ',616),(3208,'ΟΡΘΟΥΝΙΟΥ',616),(3209,'ΠΡΑΣΕ',616),(3210,'ΣΕΜΠΡΩΝΑ',616),(3211,'ΣΚΙΝΕ',616),(3212,'ΦΟΥΡΝΕ',616),(3213,'ΨΑΘΟΓΙΑΝΝΟΥ',616),(3214,'ΒΛΑΧΕΡΩΝΙΤΙΣΣΗΣ',617),(3215,'ΒΡΥΣΩΝ ΚΥΔΩΝΙΑΣ',617),(3216,'ΓΕΡΑΝΙΟΥ',617),(3217,'ΖΟΥΝΑΚΙΟΥ',617),(3218,'ΚΟΝΤΟΜΑΡΙΟΥ',617),(3219,'ΚΥΠΑΡΙΣΣΟΥ',617),(3220,'ΜΑΛΕΜΕ',617),(3221,'ΜΑΝΟΛΙΟΠΟΥΛΟΥ',617),(3222,'ΜΟΔΙΟΥ',617),(3223,'ΝΤΕΡΕ',617),(3224,'ΞΑΜΟΥΔΟΧΩΡΙΟΥ',617),(3225,'ΠΛΑΤΑΝΙΑ',617),(3226,'ΣΙΡΙΛΙΟΥ',617),(3227,'ΑΓΙΑΣ ΡΟΥΜΕΛΗΣ',618),(3228,'ΑΓΙΟΥ ΙΩΑΝΝΟΥ',618),(3229,'ΑΝΩΠΟΛΕΩΣ',618),(3230,'ΑΣΚΥΦΟΥ',618),(3231,'ΑΣΦΕΝΔΟΥ',618),(3232,'ΙΜΠΡΟΥ',618),(3233,'ΠΑΤΣΙΑΝΟΥ',618),(3234,'ΣΚΑΛΩΤΗΣ',618),(3235,'ΧΩΡΑΣ ΣΦΑΚΙΩΝ',618),(3236,'ΑΡΩΝΙΟΥ',619),(3237,'ΚΟΥΝΟΥΠΙΔΙΑΝΩΝ',619),(3238,'ΜΟΥΖΟΥΡΑ',619),(3239,'ΣΤΕΡΝΩΝ',619),(3240,'ΧΩΡΔΑΚΙΟΥ',619),(3241,'ΜΟΥΡΝΙΩΝ',620),(3242,'ΝΕΡΟΚΟΥΡΟΥ',620),(3243,'ΑΓΙΑΣ',621),(3244,'ΒΑΜΒΑΚΟΠΟΥΛΟΥ',621),(3245,'ΒΑΡΥΠΕΤΡΟΥ',621),(3246,'ΘΕΡΙΣΟΥ',621),(3247,'ΠΕΡΙΒΟΛΙΩΝ ΚΥΔΩΝΙΑΣ',621),(3248,'ΔΡΑΚΟΝΑΣ',622),(3249,'ΚΑΜΠΩΝ',622),(3250,'ΚΟΝΤΟΠΟΥΛΩΝ',622),(3251,'ΜΑΛΑΞΑΣ',622),(3252,'ΠΑΠΠΑΔΙΑΝΩΝ',622),(3253,'ΠΛΑΤΥΒΟΛΑΣ',622),(3254,'ΑΓΙΑΣ ΜΑΡΙΝΗΣ',623),(3255,'ΓΑΛΑΤΑ',623),(3256,'ΔΑΡΑΤΣΟΥ',623),(3257,'ΣΤΑΛΟΥ',623),(3258,'ΑΠΤΕΡΩΝ',624),(3259,'ΣΟΥΔΑΣ',624),(3260,'ΤΣΙΚΑΛΑΡΙΩΝ',624),(3261,'ΧΑΝΙΩΝ',625),(3262,'ΑΓΙΟΥ ΑΘΑΝΑΣΙΟΥ',626),(3263,'ΑΓΟΡΑΣ',626),(3264,'ΔΟΞΑΤΟΥ',626),(3265,'ΚΕΦΑΛΑΡΙΟΥ',626),(3266,'ΚΥΡΙΩΝ',626),(3267,'ΠΗΓΑΔΙΩΝ',626),(3268,'ΑΓΙΑΣ ΠΑΡΑΣΚΕΥΗΣ',627),(3269,'ΚΑΛΑΜΠΑΚΙΟΥ',627),(3270,'ΚΑΛΑΜΩΝΟΣ',627),(3271,'ΝΕΡΟΦΡΑΚΤΟΥ',627),(3272,'ΦΤΕΛΙΑΣ',627),(3273,'ΔΡΑΜΑΣ',628),(3274,'ΚΑΛΛΙΦΥΤΟΥ',628),(3275,'ΚΑΛΟΥ ΑΓΡΟΥ',628),(3276,'ΚΟΥΔΟΥΝΙΩΝ',628),(3277,'ΛΙΒΑΔΕΡΟΥ',628),(3278,'ΜΑΚΡΥΠΛΑΓΙΟΥ',628),(3279,'ΜΑΥΡΟΒΑΤΟΥ',628),(3280,'ΜΙΚΡΟΧΩΡΙΟΥ',628),(3281,'ΜΟΝΑΣΤΗΡΑΚΙΟΥ',628),(3282,'ΜΥΛΟΠΟΤΑΜΟΥ',628),(3283,'ΝΙΚΟΤΣΑΡΑΣ',628),(3284,'ΞΗΡΟΠΟΤΑΜΟΥ',628),(3285,'ΧΩΡΙΣΤΗΣ',628),(3286,'ΣΙΔΗΡΟΝΕΡΟΥ',629),(3287,'ΣΚΑΛΩΤΗΣ',629),(3288,'ΑΧΛΑΔΕΑΣ',630),(3289,'ΒΑΘΥΤΟΠΟΥ',630),(3290,'ΒΩΛΑΚΟΣ',630),(3291,'ΓΡΑΝΙΤΟΥ',630),(3292,'ΔΑΣΩΤΟΥ',630),(3293,'ΕΞΟΧΗΣ',630),(3294,'ΚΑΤΑΦΥΤΟΥ',630),(3295,'ΚΑΤΩ ΒΡΟΝΤΟΥΣ',630),(3296,'ΚΑΤΩ ΝΕΥΡΟΚΟΠΙΟΥ',630),(3297,'ΛΕΥΚΟΓΕΙΩΝ',630),(3298,'ΜΙΚΡΟΚΛΕΙΣΟΥΡΑΣ',630),(3299,'ΜΙΚΡΟΜΗΛΕΑΣ',630),(3300,'ΟΧΥΡΟΥ',630),(3301,'ΠΑΓΟΝΕΡΙΟΥ',630),(3302,'ΠΕΡΙΘΩΡΙΟΥ',630),(3303,'ΠΟΤΑΜΩΝ',630),(3304,'ΧΡΥΣΟΚΕΦΑΛΟΥ',630),(3305,'ΑΔΡΙΑΝΗΣ',631),(3306,'ΑΝΩ ΠΥΞΑΡΙΟΥ',631),(3307,'ΝΙΚΗΦΟΡΟΥ',631),(3308,'ΠΛΑΤΑΝΙΑΣ',631),(3309,'ΠΛΑΤΑΝΟΒΡΥΣΗΣ',631),(3310,'ΠΤΕΛΕΑΣ ΠΛΑΤΑΝΙΑΣ',631),(3311,'ΥΨΗΛΗΣ ΡΑΧΗΣ',631),(3312,'ΘΟΛΟΥ',632),(3313,'ΠΑΡΑΝΕΣΤΙΟΥ',632),(3314,'ΣΙΛΗΣ',632),(3315,'ΑΝΘΟΧΩΡΙΟΥ',633),(3316,'ΓΡΑΜΜΕΝΗΣ',633),(3317,'ΚΑΛΗΣ ΒΡΥΣΗΣ',633),(3318,'ΚΑΛΛΙΘΕΑΣ',633),(3319,'ΚΟΚΚΙΝΟΓΕΙΩΝ',633),(3320,'ΜΙΚΡΟΠΟΛΕΩΣ',633),(3321,'ΠΑΝΟΡΑΜΑΤΟΣ',633),(3322,'ΠΕΤΡΟΥΣΣΗΣ',633),(3323,'ΠΡΟΣΟΤΣΑΝΗΣ',633),(3324,'ΠΥΡΓΩΝ',633),(3325,'ΧΑΡΙΤΩΜΕΝΗΣ',633),(3326,'ΑΡΓΥΡΟΥΠΟΛΙΣ',634),(3327,'ΜΑΥΡΟΛΕΥΚΗΣ',634),(3328,'ΜΕΓΑΛΟΚΑΜΠΟΥ',634),(3329,'ΜΙΚΡΟΚΑΜΠΟΥ',634),(3330,'ΠΕΡΙΧΩΡΑΣ',634),(3331,'ΣΙΤΑΓΡΩΝ',634),(3332,'ΦΩΤΟΛΙΒΟΥΣ',634),(3333,'ΑΒΑΝΤΟΣ',635),(3334,'ΑΙΣΥΜΗΣ',635),(3335,'ΑΛΕΞΑΝΔΡΟΥΠΟΛΗΣ',635),(3336,'ΚΙΡΚΗΣ',635),(3337,'ΜΑΚΡΗΣ',635),(3338,'ΣΥΚΟΡΡΑΧΗΣ',635),(3339,'ΑΝΘΕΙΑΣ',636),(3340,'ΔΩΡΙΚΟΥ',636),(3341,'ΛΟΥΤΡΟΥ',636),(3342,'ΝΙΨΗΣ',636),(3343,'ΑΡΔΑΝΙΟΥ',637),(3344,'ΔΟΡΙΣΚΟΥ',637),(3345,'ΚΑΒΗΣΟΥ',637),(3346,'ΠΕΠΛΟΥ',637),(3347,'ΠΥΛΑΙΑΣ',637),(3348,'ΤΡΙΦΥΛΛΙΟΥ',637),(3349,'ΦΕΡΩΝ',637),(3350,'ΑΣΒΕΣΤΑΔΩΝ',638),(3351,'ΑΣΗΜΕΝΙΟΥ',638),(3352,'ΔΙΔΥΜΟΤΕΙΧΟΥ',638),(3353,'ΕΛΛΗΝΟΧΩΡΙΟΥ',638),(3354,'ΙΣΑΑΚΙΟΥ',638),(3355,'ΚΑΡΩΤΗΣ',638),(3356,'ΚΟΥΦΟΒΟΥΝΟΥ',638),(3357,'ΚΥΑΝΗΣ',638),(3358,'ΜΑΝΗΣ',638),(3359,'ΠΕΤΡΑΔΩΝ',638),(3360,'ΠΟΙΜΕΝΙΚΟΥ',638),(3361,'ΠΡΑΓΓΙΟΥ',638),(3362,'ΠΥΘΙΟΥ',638),(3363,'ΣΙΤΟΧΩΡΙΟΥ',638),(3364,'ΣΟΦΙΚΟ',638),(3365,'ΑΛΕΠΟΧΩΡΙΟΥ',639),(3366,'ΑΣΠΡΟΝΕΡΙΟΥ',639),(3367,'ΒΡΥΣΙΚΩΝ',639),(3368,'ΔΟΞΗΣ',639),(3369,'ΕΛΑΦΟΧΩΡΙΟΥ',639),(3370,'ΛΑΔΗΣ',639),(3371,'ΜΕΤΑΞΑΔΩΝ',639),(3372,'ΠΑΛΙΟΥΡΙΟΥ',639),(3373,'ΚΑΒΥΛΗΣ',640),(3374,'ΚΑΣΤΑΝΕΩΝ',640),(3375,'ΝΕΑΣ ΒΥΣΣΗΣ',640),(3376,'ΡΙΖΙΩΝ',640),(3377,'ΣΤΕΡΝΑΣ',640),(3378,'ΓΑΛΗΝΗ',641),(3379,'ΖΩΝΗΣ',641),(3380,'ΚΥΠΡΙΝΟΣ',641),(3381,'ΦΥΛΑΚΙΟΥ',641),(3382,'ΑΜΠΕΛΑΚΙΩΝ',642),(3383,'ΒΑΛΤΟΥ',642),(3384,'ΘΟΥΡΙΟ',642),(3385,'ΜΕΓΑΛΗΣ ΔΟΞΙΠΑΡΑΣ',642),(3386,'ΝΕΟΥ ΧΕΙΜΩΝΙΟΥ',642),(3387,'ΝΕΟΧΩΡΙΟΥ',642),(3388,'ΟΡΕΣΤΙΑΔΟΣ',642),(3389,'ΧΑΝΔΡΑ',642),(3390,'ΑΡΖΟΥ',643),(3391,'ΔΙΚΑΙΩΝ',643),(3392,'ΕΛΑΙΑΣ',643),(3393,'ΘΕΡΑΠΕΙΟ',643),(3394,'ΚΟΜΑΡΩΝ',643),(3395,'ΜΑΡΑΣΙΩΝ',643),(3396,'ΜΗΛΕΑ',643),(3397,'ΟΡΜΕΝΙΟΥ',643),(3398,'ΠΕΝΤΑΛΟΦΟΥ',643),(3399,'ΠΕΤΡΩΤΩΝ',643),(3400,'ΠΛΑΤΗΣ',643),(3401,'ΠΤΕΛΕΑΣ',643),(3402,'ΣΠΗΛΑΙΟΥ',643),(3403,'ΣΑΜΟΘΡΑΚΗΣ',644),(3404,'ΑΜΟΡΙΟΥ',645),(3405,'ΚΥΡΙΑΚΗΣ',645),(3406,'ΛΑΒΑΡΩΝ',645),(3407,'ΜΑΝΔΡΑΣ',645),(3408,'ΜΑΥΡΟΚΚΛΗΣΙΟΥ',645),(3409,'ΜΙΚΡΟΥ ΔΕΡΕΙΟΥ',645),(3410,'ΠΡΩΤΟΚΚΛΗΣΙΟΥ',645),(3411,'ΔΑΔΙΑΣ',646),(3412,'ΚΟΡΝΟΦΩΛΕΑΣ',646),(3413,'ΛΑΓΥΝΩΝ',646),(3414,'ΛΥΚΟΦΩΤΟΣ',646),(3415,'ΣΟΥΦΛΙΟΥ',646),(3416,'ΛΕΥΚΙΜΜΗΣ',647),(3417,'ΛΥΡΑΣ',647),(3418,'ΠΡΟΒΑΤΩΝΟΣ',647),(3419,'ΤΥΧΕΡΟΥ',647),(3420,'ΦΥΛΑΚΤΟΥ',647),(3421,'ΘΑΣΟΥ',648),(3422,'ΘΕΟΛΟΓΟΥ',648),(3423,'ΚΑΛΛΙΡΑΧΗΣ',648),(3424,'ΛΙΜΕΝΑΡΙΩΝ',648),(3425,'ΜΑΡΙΩΝ',648),(3426,'ΠΑΝΑΓΙΑΣ',648),(3427,'ΠΟΤΑΜΙΑΣ',648),(3428,'ΠΡΙΝΟΥ',648),(3429,'ΡΑΧΩΝΙΟΥ',648),(3430,'ΣΩΤΗΡΟΣ',648),(3431,'ΚΑΒΑΛΑΣ',649),(3432,'ΝΕΑΣ ΚΑΡΒΑΛΗΣ',649),(3433,'ΧΑΛΚΕΡΟΥ',649),(3434,'ΑΜΥΓΔΑΛΕΩΝΟΣ',650),(3435,'ΖΥΓΟΥ',650),(3436,'ΚΟΡΥΦΩΝ',650),(3437,'ΚΡΗΝΙΔΩΝ',650),(3438,'ΚΡΥΟΝΕΡΙΟΥ',650),(3439,'ΛΙΜΝΙΩΝ',650),(3440,'ΛΥΔΙΑΣ',650),(3441,'ΠΑΛΑΙΑΣ ΚΑΒΑΛΑΣ',650),(3442,'ΠΟΛΥΝΕΡΟΥ',650),(3443,'ΠΟΛΥΣΤΥΛΟΥ',650),(3444,'ΦΙΛΙΠΠΩΝ',650),(3445,'ΑΓΙΑΣΜΑΤΟΣ',651),(3446,'ΚΕΡΑΜΩΤΗΣ',651),(3447,'ΝΕΑΣ ΚΑΡΥΑΣ',651),(3448,'ΠΗΓΩΝ',651),(3449,'ΑΓΙΟΥ ΚΟΣΜΑ',652),(3450,'ΔΙΠΟΤΑΜΟΥ',652),(3451,'ΔΥΣΒΑΤΟΥ',652),(3452,'ΕΛΑΦΟΧΩΡΙΟΥ',652),(3453,'ΚΕΧΡΟΚΑΜΠΟΥ',652),(3454,'ΛΕΚΑΝΗΣ',652),(3455,'ΜΑΚΡΥΧΩΡΙΟΥ',652),(3456,'ΠΛΑΤΑΜΩΝΟΣ',652),(3457,'ΑΒΡΑΜΥΛΙΑΣ',653),(3458,'ΓΕΡΟΝΤΑ',653),(3459,'ΓΡΑΒΟΥΝΗΣ',653),(3460,'ΔΙΑΛΕΚΤΟΥ',653),(3461,'ΕΡΑΤΕΙΝΟΥ',653),(3462,'ΖΑΡΚΑΔΙΑΣ',653),(3463,'ΞΕΡΙΑ',653),(3464,'ΠΑΡΑΔΕΙΣΟΥ',653),(3465,'ΠΕΡΝΗΣ',653),(3466,'ΠΕΤΡΟΠΗΓΗΣ',653),(3467,'ΠΟΝΤΟΛΙΒΑΔΟΥ',653),(3468,'ΧΡΥΣΟΥΠΟΛΗΣ',653),(3469,'ΧΡΥΣΟΧΩΡΙΟΥ',653),(3470,'ΑΜΙΣΙΑΝΩΝ',654),(3471,'ΑΝΤΙΦΙΛΙΠΠΩΝ',654),(3472,'ΕΛΕΥΘΕΡΟΥΠΟΛΗΣ',654),(3473,'ΚΗΠΙΩΝ',654),(3474,'ΚΟΚΚΙΝΟΧΩΜΑΤΟΣ',654),(3475,'ΧΡΥΣΟΚΑΣΤΡΟΥ',654),(3476,'ΑΓΙΟΥ ΑΝΔΡΕΟΥ',655),(3477,'ΕΛΑΙΟΧΩΡΙΟΥ',655),(3478,'ΕΛΕΥΘΕΡΩΝ',655),(3479,'ΜΥΡΤΟΦΥΤΟΥ',655),(3480,'ΝΕΑΣ ΗΡΑΚΛΙΤΣΗΣ',655),(3481,'ΝΕΑΣ ΠΕΡΑΜΟΥ',655),(3482,'ΦΩΛΕΑΣ',655),(3483,'ΑΚΡΟΠΟΤΑΜΟΥ',656),(3484,'ΓΑΛΗΨΟΥ',656),(3485,'ΚΑΡΙΑΝΗΣ',656),(3486,'ΟΡΦΑΝΙΟΥ',656),(3487,'ΟΦΡΥΝΙΟΥ',656),(3488,'ΠΟΔΟΧΩΡΙΟΥ',656),(3489,'ΓΕΩΡΓΙΑΝΗΣ',657),(3490,'ΝΙΚΗΣΙΑΝΗΣ',657),(3491,'ΠΑΛΑΙΟΧΩΡΙΟΥ',657),(3492,'ΑΥΛΗΣ',658),(3493,'ΔΩΜΑΤΙΩΝ',658),(3494,'ΜΕΛΙΣΣΟΚΟΜΕΙΟΥ',658),(3495,'ΜΕΣΙΑΣ',658),(3496,'ΜΕΣΟΡΟΠΗΣ',658),(3497,'ΜΟΥΣΘΕΝΗΣ',658),(3498,'ΠΛΑΤΑΝΟΤΟΠΟΥ',658),(3499,'ΣΙΔΗΡΟΧΩΡΙΟΥ',658),(3500,'ΑΒΔΗΡΩΝ',659),(3501,'ΜΑΝΔΡΑΣ',659),(3502,'ΜΥΡΩΔΑΤΟΥ',659),(3503,'ΝΕΑΣ ΚΕΣΣΑΝΗΣ',659),(3504,'ΓΕΝΙΣΕΑΣ',660),(3505,'ΔΙΟΜΗΔΕΙΑΣ',660),(3506,'ΚΟΥΤΣΟΥ',660),(3507,'ΜΑΓΙΚΟΥ',660),(3508,'ΠΗΓΑΔΙΩΝ',660),(3509,'ΠΟΛΥΣΙΤΟΥ',660),(3510,'ΣΕΛΙΝΟΥ',660),(3511,'ΣΟΥΝΙΟΥ',660),(3512,'ΣΕΛΕΡΟΥ',661),(3513,'ΘΕΡΜΩΝ',662),(3514,'ΚΟΤΥΛΗΣ',663),(3515,'ΕΧΙΝΟΥ',664),(3516,'ΜΥΚΗΣ',664),(3517,'ΩΡΑΙΟΥ',664),(3518,'ΣΑΤΡΩΝ',665),(3519,'ΕΥΜΟΙΡΟΥ',666),(3520,'ΚΙΜΜΕΡΙΩΝ',666),(3521,'ΞΑΝΘΗΣ',666),(3522,'ΓΕΡΑΚΑ',667),(3523,'ΔΑΦΝΩΝΟΣ',667),(3524,'ΚΑΡΥΟΦΥΤΟΥ',667),(3525,'ΚΟΜΝΗΝΩΝ',667),(3526,'ΝΕΟΧΩΡΙΟΥ',667),(3527,'ΠΑΣΧΑΛΙΑΣ',667),(3528,'ΣΤΑΥΡΟΥΠΟΛΕΩΣ',667),(3529,'ΑΒΑΤΟΥ',668),(3530,'ΓΑΛΑΝΗΣ',668),(3531,'ΕΞΟΧΗΣ',668),(3532,'ΕΡΑΣΜΙΟΥ',668),(3533,'ΕΥΛΑΛΟΥ',668),(3534,'ΜΑΓΓΑΝΩΝ',668),(3535,'ΟΛΒΙΟΥ',668),(3536,'ΤΟΞΟΤΩΝ',668),(3537,'ΑΓΙΟΧΩΡΙΟΥ',669),(3538,'ΑΡΡΙΑΝΩΝ',669),(3539,'ΔΑΡΜΕΝΗ',669),(3540,'ΔΕΙΛΙΝΩΝ',669),(3541,'ΗΠΙΟΥ',669),(3542,'ΚΙΝΥΡΩΝ',669),(3543,'ΛΥΚΕΙΟΥ',669),(3544,'ΜΙΚΡΟΥ ΠΙΣΤΟΥ',669),(3545,'ΜΥΣΤΑΚΑ',669),(3546,'ΝΕΔΑ',669),(3547,'ΝΙΚΗΤΩΝ',669),(3548,'ΠΛΑΓΙΑ',669),(3549,'ΣΚΑΛΩΜΑ',669),(3550,'ΣΤΡΟΦΗ',669),(3551,'ΚΕΧΡΟΥ',670),(3552,'ΟΡΓΑΝΗΣ',671),(3553,'ΑΓΡΑΣ',672),(3554,'ΑΝΩ ΔΡΟΣΙΝΗΣ',672),(3555,'ΑΡΑΤΟΥ',672),(3556,'ΑΡΔΕΙΑ',672),(3557,'ΑΡΧΟΝΤΙΚΩΝ',672),(3558,'ΒΡΑΓΙΑΣ',672),(3559,'ΔΟΚΟΥ',672),(3560,'ΔΡΟΣΙΑ',672),(3561,'ΔΡΥΜΗΣ',672),(3562,'ΕΣΟΧΗΣ',672),(3563,'ΚΑΤΩ ΔΡΟΣΙΝΗ',672),(3564,'ΛΑΜΠΡΟΥ',672),(3565,'ΝΕΟΥ ΚΑΛΛΥΝΤΗΡΙΟΥ',672),(3566,'ΝΕΥΡΩΝ',672),(3567,'ΟΜΗΡΙΚΟΥ',672),(3568,'ΠΑΣΣΟΥ',672),(3569,'ΠΑΤΕΡΜΩΝ',672),(3570,'ΡΑΓΑΔΑΣ',672),(3571,'ΣΚΙΑΔΑΣ',672),(3572,'ΦΙΛΛΥΡΑΣ',672),(3573,'ΑΜΑΞΑΔΩΝ',673),(3574,'ΑΜΒΡΟΣΙΑΣ',674),(3575,'ΙΑΣΜΟΥ',674),(3576,'ΣΑΛΠΗΣ',674),(3577,'ΑΣΩΜΑΤΩΝ',675),(3578,'ΚΕΡΑΣΕΑΣ',675),(3579,'ΛΗΝΟΥ',675),(3580,'ΜΕΓΑ ΠΙΣΤΟΥ',675),(3581,'ΜΙΣΧΟΥ',675),(3582,'ΠΟΛΥΑΝΘΟΥ',675),(3583,'ΣΩΣΤΗ',675),(3584,'ΑΙΓΕΙΡΟΥ',676),(3585,'ΑΡΩΓΗ',676),(3586,'ΓΛΥΦΑΔΑΣ',676),(3587,'ΚΑΛΛΙΣΤΗΣ',676),(3588,'ΜΕΛΕΤΗΣ',676),(3589,'ΜΕΣΗΣ',676),(3590,'ΝΕΑΣ ΚΑΛΛΙΣΤΗΣ',676),(3591,'ΠΑΡΑΛΙΑΣ ΜΕΣΗΣ',676),(3592,'ΠΟΡΠΗΣ',676),(3593,'ΦΑΝΑΡΙΟΥ',676),(3594,'ΑΝΘΟΧΩΡΙΟΥ',677),(3595,'ΓΡΑΤΙΝΗ',677),(3596,'ΘΡΥΛΟΡΙΟΥ',677),(3597,'ΙΤΕΑ',677),(3598,'ΚΑΛΧΑΝΤΟΣ',677),(3599,'ΚΑΡΥΔΙΑΣ',677),(3600,'ΚΗΚΙΔΙΟΥ',677),(3601,'ΚΟΜΟΤΗΝΗΣ',677),(3602,'ΚΟΣΜΙΟΥ',677),(3603,'ΠΑΝΔΡΟΣΟΥ',677),(3604,'ΣΙΔΗΡΑΔΩΝ',677),(3605,'ΣΤΥΛΑΡΙΟΥ',677),(3606,'ΑΓΙΩΝ ΘΕΟΔΩΡΩΝ',678),(3607,'ΜΕΓΑΛΟΥ ΔΟΥΚΑΤΟΥ',678),(3608,'ΝΕΟΥ ΣΙΔΗΡΟΧΩΡΙΟΥ',678),(3609,'ΠΑΓΟΥΡΙΩΝ',678),(3610,'ΑΜΑΡΑΝΤΩΝ',679),(3611,'ΙΜΕΡΟΥ',679),(3612,'ΜΑΡΩΝΕΙΑΣ',679),(3613,'ΜΙΡΑΝΩΝ',679),(3614,'ΞΥΛΑΓΑΝΗΣ',679),(3615,'ΠΕΛΑΓΙΑΣ',679),(3616,'ΠΡΟΣΚΥΝΗΤΩΝ',679),(3617,'ΑΜΦΙΑΣ',680),(3618,'ΑΡΙΣΒΗΣ',680),(3619,'ΕΒΡΙΝΟΥ',680),(3620,'ΙΑΣΙΟΥ',680),(3621,'ΚΙΖΑΡΙΟΥ',680),(3622,'ΚΡΩΒΥΛΗΣ',680),(3623,'ΛΟΦΑΡΙΟΥ',680),(3624,'ΝΕΑΣ ΣΑΝΤΑΣ',680),(3625,'ΣΑΠΩΝ',680),(3626,'ΣΤΡΥΜΝΗΣ',680),(3627,'ΑΛΕΞΑΝΔΡΕΙΑΣ',681),(3628,'ΒΡΥΣΑΚΙΟΥ',681),(3629,'ΚΑΜΠΟΧΩΡΙΟΥ',681),(3630,'ΛΟΥΤΡΟΥ',681),(3631,'ΝΕΟΧΩΡΙΟΥ',681),(3632,'ΝΗΣΙΟΥ',681),(3633,'ΕΠΙΣΚΟΠΗΣ',682),(3634,'ΚΑΒΑΣΙΛΩΝ',682),(3635,'ΚΕΦΑΛΟΧΩΡΙΟΥ',682),(3636,'ΞΕΧΑΣΜΕΝΗΣ',682),(3637,'ΠΑΛΑΙΟΥ ΣΚΥΛΛΙΤΣΙΟΥ',682),(3638,'ΣΤΑΥΡΟΥ',682),(3639,'ΑΓΚΑΘΙΑΣ',683),(3640,'ΚΥΨΕΛΗΣ',683),(3641,'ΜΕΛΙΚΗΣ',683),(3642,'ΝΕΟΚΑΣΤΡΟΥ',683),(3643,'ΠΡΟΔΡΟΜΟΥ',683),(3644,'ΑΡΑΧΟΥ',684),(3645,'ΚΛΕΙΔΙΟΥ',684),(3646,'ΚΟΡΥΦΗΣ',684),(3647,'ΛΙΑΝΟΒΕΡΓΙΟΥ',684),(3648,'ΠΛΑΤΑΝΟΥ',684),(3649,'ΠΛΑΤΕΟΣ',684),(3650,'ΠΡΑΣΙΝΑΔΑΣ',684),(3651,'ΤΡΙΚΑΛΩΝ',684),(3652,'ΔΙΑΒΑΤΟΥ',685),(3653,'ΚΟΥΛΟΥΡΑΣ',685),(3654,'ΛΥΚΟΓΙΑΝΝΗΣ',685),(3655,'ΜΑΚΡΟΧΩΡΙΟΥ',685),(3656,'ΝΕΑΣ ΝΙΚΟΜΗΔΕΙΑΣ',685),(3657,'ΒΕΡΓΙΝΗΣ',686),(3658,'ΜΕΤΟΧΙΟ ΠΡΟΔΡΟΜΟΥ',686),(3659,'ΠΑΛΑΤΙΤΣΙΩΝ',686),(3660,'ΣΥΚΕΑΣ',686),(3661,'ΑΓΙΑΣ ΒΑΡΒΑΡΑΣ',687),(3662,'ΑΜΜΟΣ',687),(3663,'ΑΣΩΜΑΤΑ',687),(3664,'ΒΕΡΟΙΑΣ',687),(3665,'ΓΕΩΡΓΙΑΝΩΝ',687),(3666,'ΚΑΣΤΑΝΕΑΣ',687),(3667,'ΚΑΤΩ ΒΕΡΜΙΟΥ',687),(3668,'ΚΟΥΜΑΡΙΑΣ',687),(3669,'ΠΡΟΦΗΤΗΣ ΗΛΙΑΣ',687),(3670,'ΡΑΧΗΣ',687),(3671,'ΤΡΙΠΟΤΑΜΟΥ',687),(3672,'ΑΓΙΑΣ ΜΑΡΙΝΗΣ',688),(3673,'ΑΓΙΟΥ ΓΕΩΡΓΙΟΥ',688),(3674,'ΠΑΤΡΙΔΟΣ',688),(3675,'ΤΡΙΛΟΦΟΥ',688),(3676,'ΦΥΤΕΙΑΣ',688),(3677,'ΔΑΣΚΙΟΥ',689),(3678,'ΠΟΛΥΔΕΝΔΡΟΥ',689),(3679,'ΡΙΖΩΜΑΤΩΝ',689),(3680,'ΣΦΗΚΙΑΣ',689),(3681,'ΕΠΙΣΚΟΠΗΣ ΝΑΟΥΣΑΣ',690),(3682,'ΚΟΠΑΝΟΥ',690),(3683,'ΛΕΥΚΑΔΙΩΝ',690),(3684,'ΜΑΡΙΝΗΣ',690),(3685,'ΜΟΝΟΣΠΙΤΩΝ',690),(3686,'ΧΑΡΙΕΣΣΗΣ',690),(3687,'ΑΓΓΕΛΟΧΩΡΙΟΥ',691),(3688,'ΖΕΡΒΟΧΩΡΙΟΥ',691),(3689,'ΠΟΛΥΠΛΑΤΑΝΟΥ',691),(3690,'ΑΡΚΟΧΩΡΙΟΥ',692),(3691,'ΓΙΑΝΝΑΚΟΧΩΡΙΟΥ',692),(3692,'ΝΑΟΥΣΑΣ',692),(3693,'ΡΟΔΟΧΩΡΙΟΥ',692),(3694,'ΣΤΕΝΗΜΑΧΟΥ',692),(3695,'ΑΜΠΕΛΟΚΗΠΩΝ',693),(3696,'ΜΕΝΕΜΕΝΗΣ',694),(3697,'ΑΣΠΡΟΒΑΛΤΑΣ',695),(3698,'ΒΡΑΣΝΩΝ',695),(3699,'ΜΕΛΙΣΣΟΥΡΓΟΥ',696),(3700,'ΝΕΑΣ ΑΠΟΛΛΩΝΙΑΣ',696),(3701,'ΝΙΚΟΜΗΔΙΝΟΥ',696),(3702,'ΠΕΡΙΣΤΕΡΩΝΑΣ',696),(3703,'ΣΤΙΒΟΥ',696),(3704,'ΑΡΕΘΟΥΣΑΣ',697),(3705,'ΜΑΥΡΟΥΔΑΣ',697),(3706,'ΣΚΕΠΑΣΤΟΥ',697),(3707,'ΣΤΕΦΑΝΙΝΩΝ',697),(3708,'ΦΙΛΑΔΕΛΦΙΟΥ',697),(3709,'ΕΥΑΓΓΕΛΙΣΜΟΥ',698),(3710,'ΝΥΜΦΟΠΕΤΡΑΣ',698),(3711,'ΠΡΟΦΗΤΟΥ',698),(3712,'ΣΧΟΛΑΡΙΟΥ',698),(3713,'ΑΠΟΛΛΩΝΙΑΣ',699),(3714,'ΜΟΔΙΟΥ',699),(3715,'ΝΕΑΣ ΜΑΔΥΤΟΥ',699),(3716,'ΑΝΩ ΣΤΑΥΡΟΥ',700),(3717,'ΒΟΛΒΗΣ',700),(3718,'ΣΤΑΥΡΟΥ',700),(3719,'ΒΡΑΧΙΑΣ',701),(3720,'ΚΥΜΙΝΩΝ',701),(3721,'ΝΕΩΝ ΜΑΛΓΑΡΩΝ',701),(3722,'ΔΙΑΒΑΤΩΝ',702),(3723,'ΚΑΛΟΧΩΡΙΟΥ',702),(3724,'ΝΕΑΣ ΜΑΓΝΗΣΙΑΣ',702),(3725,'ΣΙΝΔΟΥ',702),(3726,'ΑΝΑΤΟΛΙΚΟΥ',703),(3727,'ΧΑΛΑΣΤΡΑΣ',703),(3728,'ΕΠΑΝΟΜΗΣ',704),(3729,'ΜΕΣΗΜΕΡΙΟΥ',704),(3730,'ΑΓΙΑΣ ΤΡΙΑΔΟΣ',705),(3731,'ΝΕΩΝ ΕΠΙΒΑΤΩΝ',705),(3732,'ΠΕΡΑΙΑΣ',705),(3733,'ΑΓΓΕΛΟΧΩΡΙΟΥ',706),(3734,'ΝΕΑΣ ΚΕΡΑΣΙΑΣ',706),(3735,'ΝΕΑΣ ΜΗΧΑΝΙΩΝΑΣ',706),(3736,'ΑΓΙΑΣ ΠΑΡΑΣΚΕΥΗΣ',707),(3737,'ΑΓΙΟΥ ΑΝΤΩΝΙΟΥ',707),(3738,'ΒΑΣΙΛΙΚΩΝ',707),(3739,'ΛΙΒΑΔΙΟΥ',707),(3740,'ΠΕΡΙΣΤΕΡΑΣ',707),(3741,'ΣΟΥΡΩΤΗΣ',707),(3742,'ΘΕΡΜΗΣ',708),(3743,'ΝΕΑΣ ΡΑΙΔΕΣΤΟΥ',708),(3744,'ΝΕΟΥ ΡΥΣΙΟΥ',708),(3745,'ΤΑΓΑΡΑΔΩΝ',708),(3746,'ΚΑΡΔΙΑΣ',709),(3747,'ΚΑΤΩ ΣΧΟΛΑΡΙΟΥ',709),(3748,'ΠΛΑΓΙΑΡΙΟΥ',709),(3749,'ΤΡΙΛΟΦΟΥ',709),(3750,'1ου ΔΗΜ.ΔΙΑΜΕΡ.ΘΕΣΣΑΛΟΝΙΚΗΣ',710),(3751,'2ου ΔΗΜ.ΔΙΑΜΕΡ.ΘΕΣΣΑΛΟΝΙΚΗΣ',710),(3752,'3ου ΔΗΜ.ΔΙΑΜΕΡ.ΘΕΣΣΑΛΟΝΙΚΗΣ',710),(3753,'4ου ΔΗΜ.ΔΙΑΜΕΡ.ΘΕΣΣΑΛΟΝΙΚΗΣ',710),(3754,'5ου ΔΗΜ.ΔΙΑΜΕΡ.ΘΕΣΣΑΛΟΝΙΚΗΣ',710),(3755,'ΥΠΟΛΟΙΠΑ ΘΕΣΣΑΛΟΝΙΚΗΣ',710),(3756,'ΤΡΙΑΝΔΡΙΑΣ',711),(3757,'ΚΑΛΑΜΑΡΙΑΣ',712),(3758,'ΕΛΕΥΘΕΡΙΟΥ-ΚΟΡΔΕΛΙΟΥ',713),(3759,'ΕΥΟΣΜΟΥ',714),(3760,'ΑΣΣΗΡΟΥ',715),(3761,'ΚΡΙΘΙΑΣ (ΚΡΙΘΕΑΣ)',715),(3762,'ΒΕΡΤΙΣΚΟΥ',716),(3763,'ΕΞΑΛΟΦΟΥ',716),(3764,'ΛΟΦΙΣΚΟΥ',716),(3765,'ΟΣΣΗΣ',716),(3766,'ΑΔΑΜ',717),(3767,'ΖΑΓΚΛΙΒΕΡΙΟΥ',717),(3768,'ΝΕΩΝ ΚΑΛΛΙΝΔΟΙΩΝ',717),(3769,'ΠΕΤΡΟΚΕΡΑΣΩΝ',717),(3770,'ΣΑΡΑΚΗΝΑΣ',717),(3771,'ΑΓΙΟΥ ΒΑΣΙΛΕΙΟΥ',718),(3772,'ΑΡΔΑΜΕΡΙΟΥ',718),(3773,'ΒΑΣΙΛΟΥΔΙΟΥ',718),(3774,'ΓΕΡΑΚΑΡΟΥΣ',718),(3775,'ΛΑΓΚΑΔΙΚΙΩΝ',718),(3776,'ΑΝΑΛΗΨΕΩΣ',719),(3777,'ΗΡΑΚΛΕΙΟΥ',719),(3778,'ΚΑΒΑΛΛΑΡΙΟΥ',719),(3779,'ΚΟΛΧΙΚΟΥ',719),(3780,'ΛΑΓΚΑΔΑ',719),(3781,'ΛΑΓΥΝΩΝ',719),(3782,'ΠΕΡΙΒΟΛΑΚΙΟΥ',719),(3783,'ΧΡΥΣΑΥΓΗΣ',719),(3784,'ΚΑΡΤΕΡΩΝ',720),(3785,'ΛΑΧΑΝΑ',720),(3786,'ΛΕΥΚΟΧΩΡΙΟΥ',720),(3787,'ΝΙΚΟΠΟΛΕΩΣ',720),(3788,'ΞΥΛΟΠΟΛΕΩΣ',720),(3789,'ΑΣΚΟΥ',721),(3790,'ΚΡΥΟΝΕΡΙΟΥ',721),(3791,'ΣΟΧΟΥ',721),(3792,'ΑΓΙΟΥ ΠΑΥΛΟΥ',722),(3793,'ΝΕΑΠΟΛΕΩΣ',723),(3794,'ΠΕΥΚΩΝ',724),(3795,'ΣΥΚΕΩΝ',725),(3796,'ΕΥΚΑΡΠΙΑΣ',726),(3797,'ΠΟΛΙΧΝΗΣ',727),(3798,'ΣΤΑΥΡΟΥΠΟΛΕΩΣ',728),(3799,'ΠΑΝΟΡΑΜΑΤΟΣ',729),(3800,'ΠΥΛΑΙΑΣ',730),(3801,'ΑΣΒΕΣΤΟΧΩΡΙΟΥ',731),(3802,'ΕΞΟΧΗΣ',731),(3803,'ΦΙΛΥΡΟΥ',731),(3804,'ΧΟΡΤΙΑΤΗ',731),(3805,'ΑΓΙΟΥ ΑΘΑΝΑΣΙΟΥ',732),(3806,'ΑΓΧΙΑΛΟΥ',732),(3807,'ΒΑΘΥΛΑΚΚΟΥ',732),(3808,'ΓΕΦΥΡΑΣ',732),(3809,'ΝΕΑΣ ΜΕΣΗΜΒΡΙΑΣ',732),(3810,'ΞΗΡΟΧΩΡΙΟΥ',732),(3811,'ΚΟΥΦΑΛΙΩΝ',733),(3812,'ΠΡΟΧΩΜΑΤΟΣ',733),(3813,'ΑΔΕΝΔΡΟΥ',734),(3814,'ΒΑΛΤΟΧΩΡΙΟΥ',734),(3815,'ΕΛΕΟΥΣΗΣ',734),(3816,'ΜΙΚΡΟΥ ΜΟΝΑΣΤΗΡΙΟΥ',734),(3817,'ΠΑΡΘΕΝΙΟΥ',734),(3818,'ΧΑΛΚΗΔΟΝΟΣ',734),(3819,'ΜΕΣΑΙΟΥ',735),(3820,'ΝΕΑΣ ΦΙΛΑΔΕΛΦΕΙΑΣ',735),(3821,'ΝΕΟΧΩΡΟΥΔΑΣ',735),(3822,'ΠΕΝΤΑΛΟΦΟΥ',735),(3823,'ΔΡΥΜΟΥ',736),(3824,'ΛΗΤΗΣ',736),(3825,'ΜΕΛΙΣΣΟΧΩΡΙΟΥ',736),(3826,'ΩΡΑΙΟΚΑΣΤΡΟΥ',737),(3827,'ΓΑΛΛΙΚΟΥ',738),(3828,'ΚΑΜΠΑΝΗ',738),(3829,'ΜΑΝΔΡΩΝ',738),(3830,'ΝΕΑΣ ΣΑΝΤΑΣ',738),(3831,'ΠΕΔΙΝΟΥ',738),(3832,'ΧΡΥΣΟΠΕΤΡΑΣ',738),(3833,'ΑΚΡΙΤΑΣ',739),(3834,'ΑΜΑΡΑΝΤΩΝ',739),(3835,'ΔΡΟΣΑΤΟΥ',739),(3836,'ΒΑΠΤΙΣΤΟΥ',740),(3837,'ΚΑΣΤΑΝΕΩΝ',740),(3838,'ΚΙΛΚΙΣ',740),(3839,'ΚΡΗΣΤΩΝΗΣ',740),(3840,'ΛΕΙΨΥΔΡΙΟΥ',740),(3841,'ΜΕΓΑΛΗΣ ΒΡΥΣΗΣ',740),(3842,'ΜΕΛΑΝΘΙΟΥ',740),(3843,'ΜΕΣΙΑΝΟΥ',740),(3844,'ΣΤΑΥΡΟΧΩΡΙΟΥ',740),(3845,'ΧΩΡΥΓΙΟΥ',740),(3846,'ΑΓΙΟΥ ΜΑΡΚΟΥ',741),(3847,'ΑΝΑΒΡΥΤΟΥ',741),(3848,'ΑΝΤΙΓΟΝΕΙΑΣ',741),(3849,'ΒΑΘΗΣ',741),(3850,'ΓΕΡΑΚΑΡΙΟΥ',741),(3851,'ΕΛΛΗΝΙΚΟΥ',741),(3852,'ΕΠΤΑΛΟΦΟΥ',741),(3853,'ΕΥΚΑΡΠΙΑΣ',741),(3854,'ΘΕΟΔΟΣΙΩΝ',741),(3855,'ΙΣΩΜΑΤΟΣ',741),(3856,'ΚΑΤΩ ΘΕΟΔΩΡΑΚΙΟΥ',741),(3857,'ΚΕΝΤΡΙΚΟΥ',741),(3858,'ΚΟΙΛΑΔΙΟΥ',741),(3859,'ΚΟΚΚΙΝΙΑΣ',741),(3860,'ΚΟΡΩΝΟΥΔΑΣ',741),(3861,'ΠΟΝΤΟΚΕΡΑΣΕΑΣ',741),(3862,'ΤΕΡΠΥΛΛΟΥ',741),(3863,'ΤΡΙΠΟΤΑΜΟΥ',741),(3864,'ΦΥΣΚΑΣ',741),(3865,'ΑΓΙΑΣ ΠΑΡΑΣΚΕΥΗΣ',742),(3866,'ΜΟΥΡΙΩΝ',742),(3867,'ΜΥΡΙΟΦΥΤΟΥ',742),(3868,'ΣΤΑΘΜΟΥ ΜΟΥΡΙΩΝ',742),(3869,'ΑΝΘΟΦΥΤΟΥ',743),(3870,'ΜΑΥΡΟΝΕΡΙΟΥ',743),(3871,'ΜΙΚΡΟΚΑΜΠΟΥ',743),(3872,'ΝΕΟΥ ΑΓΙΟΝΕΡΙΟΥ',743),(3873,'ΝΕΟΥ ΓΥΝΑΙΚΟΚΑΣΤΡΟΥ',743),(3874,'ΞΥΛΟΚΕΡΑΤΕΑΣ',743),(3875,'ΠΑΛΑΙΟΥ ΑΓΙΟΝΕΡΙΟΥ',743),(3876,'ΗΛΙΟΛΟΥΣΤΟ',744),(3877,'ΜΕΓΑΛΗΣ ΣΤΕΡΝΑΣ',744),(3878,'ΠΛΑΓΙΑΣ',744),(3879,'ΧΕΡΣΟΥ',744),(3880,'ΑΞΙΟΥΠΟΛΕΩΣ',745),(3881,'ΓΟΡΓΟΠΗ',745),(3882,'ΕΙΔΟΜΕΝΗΣ',745),(3883,'ΠΛΑΓΙΩΝ',745),(3884,'ΡΥΖΙΩΝ',745),(3885,'ΣΚΡΑ',745),(3886,'ΦΑΝΟΥ',745),(3887,'ΓΟΥΜΕΝΙΣΣΑΣ',746),(3888,'ΓΡΙΒΑΣ',746),(3889,'ΚΑΡΠΗΣ',746),(3890,'ΚΑΣΤΑΝΕΡΗΣ',746),(3891,'ΠΕΝΤΑΛΟΦΟΥ',746),(3892,'ΣΤΑΘΗΣ',746),(3893,'ΦΙΛΥΡΙΑΣ',746),(3894,'ΑΓΙΟΥ ΠΕΤΡΟΥ',747),(3895,'ΕΥΡΩΠΟΥ',747),(3896,'ΜΕΣΙΑΣ',747),(3897,'ΠΟΛΥΠΕΤΡΟΥ',747),(3898,'ΤΟΥΜΠΑΣ',747),(3899,'ΛΙΒΑΔΙΩΝ',748),(3900,'ΑΞΙΟΧΩΡΙΟΥ',749),(3901,'ΑΣΠΡΟΥ',749),(3902,'ΒΑΦΙΟΧΩΡΙΟΥ',749),(3903,'ΕΙΡΗΝΙΚΟ',749),(3904,'ΕΥΖΩΝΩΝ',749),(3905,'ΚΟΡΩΝΑ',749),(3906,'ΛΙΜΝΟΤΟΠΟΥ',749),(3907,'ΜΙΚΡΟΥ ΔΑΣΟΥΣ',749),(3908,'ΠΕΥΚΟΔΑΣΟΥΣ',749),(3909,'ΠΟΛΥΚΑΣΤΡΟΥ',749),(3910,'ΠΟΝΤΟΗΡΑΚΛΕΙΑΣ',749),(3911,'ΑΛΩΡΟΥ',750),(3912,'ΑΡΙΔΑΙΑΣ',750),(3913,'ΑΨΑΛΟΥ',750),(3914,'ΒΟΡΕΙΝΟΥ',750),(3915,'ΓΑΡΕΦΕΙΟΥ',750),(3916,'ΔΩΡΟΘΕΑΣ',750),(3917,'ΛΟΥΤΡΑΚΙΟΥ',750),(3918,'ΛΥΚΟΣΤΟΜΟΥ',750),(3919,'ΜΕΓΑΠΛΑΤΑΝΟΥ',750),(3920,'ΞΙΦΙΑΝΗΣ',750),(3921,'ΟΡΜΗΣ',750),(3922,'ΠΙΠΕΡΙΩΝ',750),(3923,'ΠΟΛΥΚΑΡΠΙΟΥ',750),(3924,'ΠΡΟΜΑΧΩΝ',750),(3925,'ΣΑΡΑΚΗΝΩΝ',750),(3926,'ΣΩΣΑΝΔΡΑΣ',750),(3927,'ΤΣΑΚΩΝ',750),(3928,'ΑΡΧΑΓΓΕΛΟΥ',751),(3929,'ΕΞΑΠΛΑΤΑΝΟΥ',751),(3930,'ΘΕΟΔΩΡΑΚΕΙΟΥ',751),(3931,'ΘΗΡΙΟΠΕΤΡΑΣ',751),(3932,'ΙΔΑΣ',751),(3933,'ΚΩΝΣΤΑΝΤΙΑΣ',751),(3934,'ΜΗΛΕΑΣ',751),(3935,'ΝΕΡΟΜΥΛΩΝ',751),(3936,'ΝΟΤΙΑΣ',751),(3937,'ΠΕΡΙΚΛΕΙΑΣ',751),(3938,'ΦΙΛΩΤΕΙΑΣ',751),(3939,'ΦΟΥΣΤΑΝΗΣ',751),(3940,'ΧΡΥΣΗΣ',751),(3941,'ΑΓΙΟΥ ΑΘΑΝΑΣΙΟΥ',752),(3942,'ΑΡΝΙΣΣΗΣ',752),(3943,'ΓΡΑΜΜΑΤΙΚΟΥ',752),(3944,'ΠΑΝΑΓΙΤΣΑΣ',752),(3945,'ΠΕΡΑΙΑΣ',752),(3946,'ΑΓΡΑ',753),(3947,'ΒΡΥΤΩΝ',753),(3948,'ΕΔΕΣΣΗΣ',753),(3949,'ΚΑΡΥΔΙΑΣ',753),(3950,'ΜΕΣΗΜΕΡΙΟΥ',753),(3951,'ΝΗΣΙΟΥ',753),(3952,'ΠΛΑΤΑΝΗΣ',753),(3953,'ΡΙΖΑΡΙΟΥ',753),(3954,'ΣΩΤΗΡΑΣ',753),(3955,'ΦΛΑΜΟΥΡΙΑΣ',753),(3956,'ΑΜΠΕΛΕΙΩΝ',754),(3957,'ΓΙΑΝΝΙΤΣΩΝ',754),(3958,'ΜΕΛΙΣΣΙΟΥ',754),(3959,'ΑΓΙΟΥ ΛΟΥΚΑ',755),(3960,'ΑΚΡΟΛΙΜΝΗΣ',755),(3961,'ΕΣΩΒΑΛΤΩΝ (ΒΑΛΤΩΝ)',755),(3962,'ΚΡΥΑΣ ΒΡΥΣΗΣ',755),(3963,'ΑΞΟΥ',756),(3964,'ΑΡΑΒΗΣΣΟΥ',756),(3965,'ΑΧΛΑΔΟΧΩΡΙΟΥ',756),(3966,'ΛΑΚΚΑΣ',756),(3967,'ΜΥΛΟΤΟΠΟΥ',756),(3968,'ΠΑΛΑΙΟΥ ΜΥΛΟΤΟΠΟΥ',756),(3969,'ΠΛΑΓΙΑΡΙΟΥ',756),(3970,'ΑΓΙΟΥ ΓΕΩΡΓΙΟΥ',757),(3971,'ΓΑΛΑΤΑΔΩΝ',757),(3972,'ΔΡΟΣΕΡΟΥ',757),(3973,'ΚΑΡΥΩΤΙΣΣΗΣ',757),(3974,'ΛΙΠΑΡΟΥ',757),(3975,'ΠΑΛΑΙΦΥΤΟΥ',757),(3976,'ΤΡΙΦΥΛΛΙΟΥ',757),(3977,'ΑΓΡΟΣΥΚΕΑΣ',758),(3978,'ΑΘΥΡΩΝ',758),(3979,'ΔΥΤΙΚΟΥ',758),(3980,'ΝΕΑΣ ΠΕΛΛΗΣ',758),(3981,'ΠΕΛΛΗΣ',758),(3982,'ΡΑΧΩΝΑΣ',758),(3983,'ΑΝΥΔΡΟΥ',759),(3984,'ΚΑΛΗΣ',759),(3985,'ΚΑΛΛΙΠΟΛΕΩΣ',759),(3986,'ΚΡΑΝΕΑΣ',759),(3987,'ΜΑΝΔΑΛΟΥ',759),(3988,'ΠΡΟΦΗΤΟΥ ΗΛΙΟΥ',759),(3989,'ΑΡΣΕΝΙΟΥ',760),(3990,'ΑΣΠΡΟΥ',760),(3991,'ΔΑΦΝΗ',760),(3992,'ΚΑΛΥΒΙΩΝ',760),(3993,'ΛΙΠΟΧΩΡΙΟΥ',760),(3994,'ΜΑΥΡΟΒΟΥΝΙΟΥ',760),(3995,'ΝΕΑΣ ΖΩΗΣ',760),(3996,'ΠΕΤΡΑΙΑΣ',760),(3997,'ΡΙΖΟΥ',760),(3998,'ΣΕΒΑΣΤΙΑΝΩΝ',760),(3999,'ΣΚΥΔΡΑΣ',760),(4000,'ΛΕΠΤΟΚΑΡΥΑΣ',761),(4001,'ΠΑΝΤΕΛΕΗΜΟΝΟΣ',761),(4002,'ΠΛΑΤΑΜΩΝΟΣ',761),(4003,'ΠΟΡΩΝ',761),(4004,'ΣΚΟΤΙΝΗΣ',761),(4005,'ΑΓΙΟΥ ΣΠΥΡΙΔΩΝΟΣ',762),(4006,'ΒΡΟΝΤΟΥΣ',762),(4007,'ΔΙΟΥ',762),(4008,'ΚΑΡΙΤΣΗΣ',762),(4009,'ΚΟΝΤΑΡΙΩΤΙΣΣΗΣ',762),(4010,'ΝΕΑΣ ΕΦΕΣΟΥ',762),(4011,'ΛΙΤΟΧΩΡΟΥ',763),(4012,'ΑΡΩΝΑ',764),(4013,'ΕΛΑΦΟΥ',764),(4014,'ΕΞΟΧΗΣ',764),(4015,'ΚΑΤΑΛΩΝΙΩΝ',764),(4016,'ΛΑΓΟΡΡΑΧΗΣ',764),(4017,'ΜΟΣΧΟΠΟΤΑΜΟΥ',764),(4018,'ΠΑΛΑΙΟΥ ΚΕΡΑΜΙΔΙΟΥ',764),(4019,'ΤΡΙΛΟΦΟΥ',764),(4020,'ΑΝΩ ΑΓΙΟΥ ΙΩΑΝΝΟΥ',765),(4021,'ΓΑΝΟΧΩΡΑΣ',765),(4022,'ΚΑΤΕΡΙΝΗΣ',765),(4023,'ΝΕΟΚΑΙΣΑΡΕΙΑΣ',765),(4024,'ΣΒΟΡΩΝΟΥ',765),(4025,'ΚΑΤΩ ΑΓΙΟΥ ΙΩΑΝΝΟΥ',766),(4026,'ΚΟΡΙΝΟΥ',766),(4027,'ΚΟΥΚΚΟΥ',766),(4028,'ΝΕΑΣ ΤΡΑΠΕΖΟΥΝΤΟΣ',766),(4029,'ΣΕΒΑΣΤΗΣ',766),(4030,'ΚΑΛΛΙΘΕΑΣ',767),(4031,'ΠΑΡΑΛΙΑΣ',767),(4032,'ΠΕΡΙΣΤΑΣΗΣ',767),(4033,'ΑΓΙΟΥ ΔΗΜΗΤΡΙΟΥ',768),(4034,'ΛΟΦΟΥ',768),(4035,'ΜΗΛΙΑΣ',768),(4036,'ΜΟΣΧΟΧΩΡΙΟΥ',768),(4037,'ΦΩΤΕΙΝΩΝ',768),(4038,'ΒΡΙΑΣ',769),(4039,'ΕΛΑΤΟΧΩΡΙΟΥ',769),(4040,'ΡΗΤΙΝΗΣ',769),(4041,'ΑΙΓΙΝΙΟΥ',770),(4042,'ΚΑΤΑΧΑ',770),(4043,'ΚΑΣΤΑΝΕΑΣ',771),(4044,'ΚΟΛΙΝΔΡΟΥ',771),(4045,'ΛΙΒΑΔΙΟΥ',771),(4046,'ΡΥΑΚΙΩΝ',771),(4047,'ΜΑΚΡΥΓΙΑΛΟΥ',772),(4048,'ΜΕΘΩΝΗΣ',772),(4049,'ΝΕΑΣ ΑΓΑΘΟΥΠΟΛΕΩΣ',772),(4050,'ΠΑΛΑΙΟΥ ΕΛΕΥΘΕΡΟΧΩΡΙΟΥ',772),(4051,'ΑΛΩΝΙΩΝ',773),(4052,'ΠΑΛΑΙΟΣΤΑΝΗΣ',773),(4053,'ΠΥΔΝΑΣ',773),(4054,'ΣΦΕΝΔΑΜΙΟΥ',773),(4055,'ΑΜΦΙΠΟΛΕΩΣ',774),(4056,'ΜΕΣΟΛΑΚΚΙΑΣ',774),(4057,'ΝΕΩΝ ΚΕΡΔΥΛΙΩΝ',774),(4058,'ΠΑΛΑΙΟΚΩΜΗΣ',774),(4059,'ΗΛΙΟΚΩΜΗΣ',775),(4060,'ΚΟΡΜΙΣΤΗΣ',775),(4061,'ΝΕΑΣ ΜΠΑΦΡΑΣ',775),(4062,'ΣΥΜΒΟΛΗΣ',775),(4063,'ΑΓΓΙΣΤΗΣ',776),(4064,'ΚΡΗΝΙΔΟΣ',776),(4065,'ΠΡΩΤΗΣ',776),(4066,'ΔΟΜΙΡΟΥ',777),(4067,'ΜΙΚΡΟΥ ΣΟΥΛΙΟΥ',777),(4068,'ΡΟΔΟΛΙΒΟΥΣ',777),(4069,'ΑΧΙΝΟΥ',778),(4070,'ΔΑΦΝΗΣ',778),(4071,'ΖΕΡΒΟΧΩΡΙΟΥ',778),(4072,'ΛΕΥΚΟΤΟΠΟΥ',778),(4073,'ΠΑΤΡΙΚΙΟΥ',778),(4074,'ΣΙΤΟΧΩΡΙΟΥ',778),(4075,'ΧΟΥΜΝΙΚΟΥ',778),(4076,'ΑΓΙΑΣ ΠΑΡΑΣΚΕΥΗΣ',779),(4077,'ΑΜΠΕΛΩΝ',779),(4078,'ΒΕΡΓΗΣ',779),(4079,'ΔΗΜΗΤΡΗΤΣΙΟΥ',779),(4080,'ΛΥΓΑΡΙΑΣ',779),(4081,'ΝΙΚΟΚΛΕΙΑΣ',779),(4082,'ΣΗΣΑΜΙΑΣ',779),(4083,'ΤΡΙΑΝΤΑΦΥΛΛΙΑΣ',779),(4084,'ΑΝΘΗΣ',780),(4085,'ΘΕΡΜΩΝ',780),(4086,'ΝΙΓΡΙΤΗΣ',780),(4087,'ΤΕΡΠΝΗΣ',780),(4088,'ΦΛΑΜΠΟΥΡΟΥ',780),(4089,'ΑΓΙΟΥ ΔΗΜΗΤΡΙΟΥ',781),(4090,'ΑΗΔΟΝΟΧΩΡΙΟΥ',781),(4091,'ΕΥΚΑΡΠΙΑΣ',781),(4092,'ΙΒΗΡΩΝ',781),(4093,'ΚΑΣΤΑΝΟΧΩΡΙΟΥ',781),(4094,'ΜΑΥΡΟΘΑΛΑΣΣΗΣ',781),(4095,'ΤΡΑΓΙΛΟΥ',781),(4096,'ΑΓΙΟΥ ΠΝΕΥΜΑΤΟΣ',782),(4097,'ΔΑΦΝΟΥΔΙΟΥ',782),(4098,'ΕΜΜΑΝΟΥΗΛ ΠΑΠΠΑ',782),(4099,'ΜΕΤΑΛΛΩΝ',782),(4100,'ΝΕΟΥ ΣΟΥΛΙΟΥ',782),(4101,'ΠΕΝΤΑΠΟΛΕΩΣ',782),(4102,'ΤΟΥΜΠΑΣ',782),(4103,'ΧΡΥΣΟΥ',782),(4104,'ΒΑΛΤΟΤΟΠΙΟΥ',783),(4105,'ΜΕΣΟΚΩΜΗΣ',783),(4106,'ΜΟΝΟΒΡΥΣΗΣ',783),(4107,'ΝΕΟΥ ΣΚΟΠΟΥ',783),(4108,'ΝΕΟΧΩΡΙΟΥ',783),(4109,'ΠΑΡΑΛΙΜΝΙΟΥ',783),(4110,'ΠΕΘΕΛΙΝΟΥ',783),(4111,'ΨΥΧΙΚΟΥ',783),(4112,'ΒΑΛΤΕΡΟΥ',784),(4113,'ΔΑΣΟΧΩΡΙΟΥ',784),(4114,'ΗΡΑΚΛΕΙΑΣ',784),(4115,'ΚΑΡΠΕΡΗΣ',784),(4116,'ΚΟΙΜΗΣΕΩΣ',784),(4117,'ΛΙΘΟΤΟΠΟΥ',784),(4118,'ΛΙΜΝΟΧΩΡΙΟΥ',784),(4119,'ΠΟΝΤΙΣΜΕΝΟΥ',784),(4120,'ΧΡΥΣΟΧΩΡΑΦΩΝ',784),(4121,'ΑΜΜΟΥΔΙΑΣ',785),(4122,'ΓΕΦΥΡΟΥΔΙΟΥ',785),(4123,'ΜΕΛΕΝΙΚΙΤΣΙΟΥ',785),(4124,'ΝΕΑΣ ΤΥΡΟΛΟΗΣ',785),(4125,'ΠΑΛΑΙΟΚΑΣΤΡΟΥ',785),(4126,'ΣΚΟΤΟΥΣΣΗΣ',785),(4127,'ΖΕΥΓΟΛΑΤΙΟΥ',786),(4128,'ΚΑΛΟΚΑΣΤΡΟΥ',786),(4129,'ΛΙΒΑΔΟΧΩΡΙΟΥ',786),(4130,'ΣΤΡΥΜΟΝΙΚΟΥ',786),(4131,'ΤΡΙΑΔΟΣ',786),(4132,'ΧΕΙΜΑΡΡΟΥ',786),(4133,'ΑΓΙΟΧΩΡΙΟΥ',787),(4134,'ΑΛΙΣΤΡΑΤΗΣ',787),(4135,'ΛΕΥΚΟΘΕΑΣ',787),(4136,'ΜΑΝΔΗΛΙΟΥ',787),(4137,'ΣΚΟΠΙΑΣ',787),(4138,'ΣΤΑΘΜΟΥ ΑΓΓΙΣΤΗΣ',787),(4139,'ΑΓΙΟΥ ΧΡΙΣΤΟΦΟΡΟΥ',788),(4140,'ΑΓΡΙΑΝΗΣ',788),(4141,'ΑΝΑΣΤΑΣΙΑΣ',788),(4142,'ΓΑΖΩΡΟΥ',788),(4143,'ΔΗΜΗΤΡΑΣ',788),(4144,'ΔΡΑΒΗΣΚΟΥ',788),(4145,'ΘΟΛΟΥ',788),(4146,'ΜΑΥΡΟΛΟΦΟΥ',788),(4147,'ΜΕΣΟΡΡΑΧΗΣ',788),(4148,'ΜΥΡΚΙΝΟΥ',788),(4149,'ΜΥΡΡΙΝΗΣ',788),(4150,'ΝΕΑΣ ΖΙΧΝΗΣ',788),(4151,'ΝΕΑΣ ΠΕΤΡΑΣ',788),(4152,'ΣΦΕΛΙΝΟΥ',788),(4153,'ΑΝΩ ΒΡΟΝΤΟΥΣ',789),(4154,'ΑΝΑΓΕΝΝΗΣΕΩΣ',790),(4155,'ΑΝΩ ΚΑΜΗΛΑΣ',790),(4156,'ΒΑΜΒΑΚΙΑΣ',790),(4157,'ΜΗΤΡΟΥΣΙΟΥ',790),(4158,'ΜΟΝΟΚΚΛΗΣΙΑΣ',790),(4159,'ΠΡΟΒΑΤΑ',790),(4160,'ΚΑΛΩΝ ΔΕΝΔΡΩΝ',791),(4161,'ΛΕΥΚΩΝΑ',791),(4162,'ΧΡΙΣΤΟΥ',791),(4163,'ΟΡΕΙΝΗΣ',792),(4164,'ΕΛΑΙΩΝΟΣ',793),(4165,'ΕΠΤΑΜΥΛΩΝ',793),(4166,'ΟΙΝΟΥΣΣΑΣ (ΧΙΟΝΟΧΩΡΙΟΥ)',793),(4167,'ΣΕΡΡΩΝ',793),(4168,'ΑΓΙΑΣ ΕΛΕΝΗΣ',794),(4169,'ΑΔΕΛΦΙΚΟΥ',794),(4170,'ΒΑΜΒΑΚΟΥΣΣΗΣ',794),(4171,'ΚΑΤΩ ΚΑΜΗΛΑΣ',794),(4172,'ΚΟΥΒΟΥΚΛΙΩΝ',794),(4173,'ΚΟΥΜΑΡΙΑΣ',794),(4174,'ΚΩΝΣΤΑΝΤΙΝΑΤΟΥ',794),(4175,'ΠΕΠΟΝΙΑΣ',794),(4176,'ΣΚΟΥΤΑΡΕΩΣ',794),(4177,'ΑΓΚΙΣΤΡΟΥ',795),(4178,'ΑΧΛΑΔΟΧΩΡΙΟΥ',796),(4179,'ΚΑΠΝΟΦΥΤΟΥ',796),(4180,'ΑΝΑΤΟΛΗΣ',797),(4181,'ΑΝΩ ΠΟΡΟΙΩΝ',797),(4182,'ΚΑΣΤΑΝΟΥΣΣΗΣ',797),(4183,'ΚΑΤΩ ΠΟΡΟΙΩΝ',797),(4184,'ΚΕΡΚΙΝΗΣ',797),(4185,'ΛΙΒΑΔΙΑΣ',797),(4186,'ΜΑΚΡΙΝΙΤΣΗΣ',797),(4187,'ΝΕΟΧΩΡΙΟΥ',797),(4188,'ΠΛΑΤΑΝΑΚΙΩΝ',797),(4189,'ΡΟΔΟΠΟΛΕΩΣ',797),(4190,'ΑΚΡΙΤΟΧΩΡΙΟΥ',798),(4191,'ΒΥΡΩΝΕΙΑΣ',798),(4192,'ΓΟΝΙΜΟΥ',798),(4193,'ΜΑΝΔΡΑΚΙΟΥ',798),(4194,'ΜΕΓΑΛΟΧΩΡΙΟΥ',798),(4195,'ΝΕΟΥ ΠΕΤΡΙΤΣΙΟΥ',798),(4196,'ΠΡΟΜΑΧΩΝΟΣ',799),(4197,'ΒΑΜΒΑΚΟΦΥΤΟΥ',800),(4198,'ΚΑΜΑΡΩΤΟΥ',800),(4199,'ΣΙΔΗΡΟΚΑΣΤΡΟΥ',800),(4200,'ΣΤΡΥΜΟΝΟΧΩΡΙΟΥ',800),(4201,'ΧΑΡΟΠΟΥ',800),(4202,'ΧΟΡΤΕΡΟΥ',800),(4203,'ΑΡΝΑΙΑΣ',801),(4204,'ΒΑΡΒΑΡΑΣ',801),(4205,'ΝΕΟΧΩΡΙΟΥ',801),(4206,'ΠΑΛΑΙΟΧΩΡΙΟΥ',801),(4207,'ΣΤΑΝΟΥ',801),(4208,'ΓΟΜΑΤΙΟΥ',802),(4209,'ΜΕΓΑΛΗΣ ΠΑΝΑΓΙΑΣ',802),(4210,'ΠΥΡΓΑΔΙΚΙΩΝ',802),(4211,'ΑΜΜΟΥΛΙΑΝΗΣ',803),(4212,'ΙΕΡΙΣΣΟΥ',803),(4213,'ΝΕΩΝ ΡΟΔΩΝ',803),(4214,'ΟΛΥΜΠΙΑΔΟΣ',803),(4215,'ΟΥΡΑΝΟΠΟΛΕΩΣ',803),(4216,'ΣΤΑΓΙΡΩΝ',803),(4217,'ΣΤΡΑΤΟΝΙΚΗΣ',803),(4218,'ΣΤΡΑΤΩΝΙΟΥ',803),(4219,'ΑΦΥΤΟΥ',804),(4220,'ΚΑΛΑΝΔΡΑΣ',804),(4221,'ΚΑΛΛΙΘΕΑΣ',804),(4222,'ΚΑΣΣΑΝΔΡΕΙΑΣ',804),(4223,'ΚΑΣΣΑΝΔΡΗΝΟΥ',804),(4224,'ΚΡΥΟΠΗΓΗΣ',804),(4225,'ΝΕΑΣ ΦΩΚΑΙΑΣ',804),(4226,'ΦΟΥΡΚΑΣ',804),(4227,'ΑΓΙΑΣ ΠΑΡΑΣΚΕΥΗΣ',805),(4228,'ΝΕΑΣ ΣΚΙΩΝΗΣ',805),(4229,'ΠΑΛΙΟΥΡΙΟΥ',805),(4230,'ΠΕΥΚΟΧΩΡΙΟΥ',805),(4231,'ΠΟΛΥΧΡΟΝΟΥ',805),(4232,'ΧΑΝΙΩΤΗ',805),(4233,'ΑΓΙΟΥ ΠΑΥΛΟΥ',806),(4234,'ΛΑΚΚΩΜΑΤΟΣ',806),(4235,'ΝΕΑΣ ΓΩΝΙΑΣ',806),(4236,'ΝΕΑΣ ΚΑΛΛΙΚΡΑΤΕΙΑΣ',806),(4237,'ΝΕΩΝ ΣΙΛΑΤΩΝ',806),(4238,'ΑΓΙΟΥ ΜΑΜΑΝΤΟΣ',807),(4239,'ΑΓΙΟΥ ΠΑΝΤΕΛΕΗΜΟΝΟΣ',807),(4240,'ΔΙΟΝΥΣΙΟΥ',807),(4241,'ΖΩΓΡΑΦΟΥ',807),(4242,'ΝΕΑΣ ΠΟΤΕΙΔΑΙΑΣ',807),(4243,'ΝΕΩΝ ΜΟΥΔΑΝΙΩΝ',807),(4244,'ΠΟΡΤΑΡΙΑΣ',807),(4245,'ΣΗΜΑΝΤΡΩΝ',807),(4246,'ΦΛΟΓΗΤΩΝ',807),(4247,'ΕΛΑΙΟΧΩΡΙΩΝ',808),(4248,'ΚΡΗΝΗΣ',808),(4249,'ΝΕΑΣ ΤΕΝΕΔΟΥ',808),(4250,'ΝΕΑΣ ΤΡΙΓΛΙΑΣ',808),(4251,'ΝΕΩΝ ΠΛΑΓΙΩΝ',808),(4252,'ΠΕΤΡΑΛΩΝΩΝ',808),(4253,'ΒΑΒΔΟΥ',809),(4254,'ΓΑΛΑΡΙΝΟΥ',809),(4255,'ΓΑΛΑΤΙΣΤΗΣ',809),(4256,'ΔΟΥΜΠΙΩΝ',809),(4257,'ΓΕΡΟΠΛΑΤΑΝΟΥ',810),(4258,'ΚΡΗΜΝΗΣ',810),(4259,'ΜΑΡΑΘΟΥΣΣΗΣ',810),(4260,'ΠΑΛΑΙΟΧΩΡΑΣ',810),(4261,'ΡΙΖΩΝ',810),(4262,'ΜΕΤΑΜΟΡΦΩΣΕΩΣ',811),(4263,'ΟΡΜΥΛΙΑΣ',811),(4264,'ΑΓΙΟΥ ΠΡΟΔΡΟΜΟΥ',812),(4265,'ΒΡΑΣΤΑΜΩΝ',812),(4266,'ΟΛΥΝΘΟΥ',812),(4267,'ΠΑΛΑΙΟΚΑΣΤΡΟΥ',812),(4268,'ΠΟΛΥΓΥΡΟΥ',812),(4269,'ΣΑΝΩΝ',812),(4270,'ΤΑΞΙΑΡΧΟΥ',812),(4271,'ΑΓΙΟΥ ΝΙΚΟΛΑΟΥ',813),(4272,'ΜΕΤΑΓΚΙΤΣΙΟΥ',813),(4273,'ΝΕΟΥ ΜΑΡΜΑΡΑ',813),(4274,'ΝΙΚΗΤΗΣ',813),(4275,'ΣΑΡΤΗΣ',814),(4276,'ΣΥΚΕΑΣ',814),(4277,'ΑΓΓΕΛΟΚΑΣΤΡΟΥ',815),(4278,'ΚΛΕΙΣΟΡΡΕΥΜΑΤΩΝ',815),(4279,'ΛΥΣΙΜΑΧΕΙΑΣ',815),(4280,'ΑΓΙΟΥ ΚΩΝΣΤΑΝΤΙΝΟΥ',816),(4281,'ΑΓΙΟΥ ΝΙΚΟΛΑΟΥ ΤΡΙΧΩΝΙΔΟΣ',816),(4282,'ΑΓΡΙΝΙΟΥ',816),(4283,'ΔΟΚΙΜΙΟΥ',816),(4284,'ΚΑΛΥΒΙΩΝ',816),(4285,'ΚΑΜΑΡΟΥΛΑΣ',816),(4286,'ΣΚΟΥΤΕΣΙΑΔΑΣ',816),(4287,'ΑΝΩ ΚΕΡΑΣΟΒΟΥ',817),(4288,'ΓΡΑΜΜΑΤΙΚΟΥΣ',817),(4289,'ΖΕΥΓΑΡΑΚΙΟΥ',817),(4290,'ΚΑΤΩ ΚΕΡΑΣΟΒΟΥ',817),(4291,'ΜΑΤΑΡΑΓΚΑΣ',817),(4292,'ΠΑΠΠΑΔΑΤΩΝ',817),(4293,'ΚΑΙΝΟΥΡΓΙΟΥ',818),(4294,'ΝΕΑΣ ΑΒΟΡΑΝΗΣ',818),(4295,'ΠΑΝΑΙΤΩΛΙΟΥ',818),(4296,'ΠΡΟΣΗΛΙΩΝ',818),(4297,'ΑΓΙΟΥ ΑΝΔΡΕΟΥ',819),(4298,'ΑΚΡΩΝ',819),(4299,'ΓΑΒΑΛΟΥΣ',819),(4300,'ΔΑΦΝΙΑ',819),(4301,'ΚΑΤΩ ΜΑΚΡΙΝΟΥΣ',819),(4302,'ΚΑΨΟΡΑΧΗΣ',819),(4303,'ΜΑΚΡΙΝΟΥΣ',819),(4304,'ΜΕΣΑΡΙΣΤΗΣ',819),(4305,'ΠΟΤΑΜΟΥΛΑΣ ΜΕΣΟΛΟΓΓΙΟΥ',819),(4306,'ΤΡΙΧΩΝΙΟΥ',819),(4307,'ΕΛΑΙΟΦΥΤΟΥ',820),(4308,'ΜΕΓΑΛΗΣ ΧΩΡΑΣ',820),(4309,'ΝΕΑΠΟΛΗΣ',820),(4310,'ΣΠΟΛΑΪΤΗΣ',820),(4311,'ΑΓΙΑΣ ΒΑΡΒΑΡΑΣ',821),(4312,'ΑΓΙΑΣ ΠΑΡΑΣΚΕΥΗΣ',821),(4313,'ΚΑΣΤΑΝΟΥΛΑΣ',821),(4314,'ΚΕΡΑΣΕΑΣ',821),(4315,'ΣΙΤΟΜΕΝΩΝ',821),(4316,'ΣΚΟΥΤΕΡΑΣ',821),(4317,'ΑΦΡΑΤΟΥ',822),(4318,'ΚΑΛΛΙΘΕΑΣ',822),(4319,'ΚΥΡΑ ΒΓΕΝΑΣ',822),(4320,'ΛΑΜΠΙΡΙΟΥ',822),(4321,'ΝΕΡΟΜΑΝΝΑΣ',822),(4322,'ΠΑΛΑΙΟΚΑΡΥΑΣ',822),(4323,'ΠΑΝΤΑΝΑΣΣΗΣ',822),(4324,'ΠΑΡΑΒΟΛΑΣ',822),(4325,'ΠΕΡΙΣΤΕΡΙΟΥ',822),(4326,'ΣΠΑΡΤΙΑ',822),(4327,'ΑΓΑΛΙΑΝΟΥ',823),(4328,'ΑΓΙΟΥ ΒΛΑΣΙΟΥ',823),(4329,'ΑΜΠΕΛΙΩΝ',823),(4330,'ΚΥΠΑΡΙΣΣΟΥ',823),(4331,'ΠΕΝΤΑΚΟΡΦΟΥ',823),(4332,'ΠΟΤΑΜΟΥΛΑΣ ΤΡΙΧΩΝΙΔΟΣ',823),(4333,'ΣΑΡΓΙΑΔΑΣ',823),(4334,'ΣΙΔΗΡΩΝ',823),(4335,'ΧΟΥΝΗΣ',823),(4336,'ΨΗΛΟΒΡΑΧΟΥ',823),(4337,'ΓΟΥΡΙΩΤΙΣΣΗΣ',824),(4338,'ΚΑΣΤΡΑΚΙΟΥ',824),(4339,'ΚΥΨΕΛΗΣ ',824),(4340,'ΛΕΠΕΝΟΥΣ',824),(4341,'ΜΑΤΣΟΥΚΙΟΥ',824),(4342,'ΟΧΘΙΩΝ',824),(4343,'ΡΙΓΑΝΗΣ',824),(4344,'ΣΤΡΑΤΟΥ',824),(4345,'ΑΓΙΟΥ ΝΙΚΟΛΑΟΥ ΒΟΝΙΤΣΗΣ',825),(4346,'ΒΟΝΙΤΣΗΣ',825),(4347,'ΔΡΥΜΟΥ',825),(4348,'ΘΥΡΙΟΥ',825),(4349,'ΜΟΝΑΣΤΗΡΑΚΙΟΥ',825),(4350,'ΠΑΛΙΑΜΠΕΛΩΝ',825),(4351,'ΑΕΤΟΥ',826),(4352,'ΑΧΥΡΩΝ',826),(4353,'ΚΑΤΟΥΝΑΣ',826),(4354,'ΚΟΜΠΩΤΗΣ',826),(4355,'ΚΟΝΟΠΙΝΑΣ',826),(4356,'ΤΡΥΦΟΥ',826),(4357,'ΒΑΤΟΥ',827),(4358,'ΠΑΛΑΙΡΟΥ',827),(4359,'ΠΕΡΑΤΙΑΣ',827),(4360,'ΠΛΑΓΙΑΣ',827),(4361,'ΠΟΓΩΝΙΑΣ',827),(4362,'ΑΜΠΕΛΑΚΙΟΥ',828),(4363,'ΑΜΦΙΛΟΧΙΑΣ',828),(4364,'ΑΝΟΙΞΙΑΤΙΚΟΥ',828),(4365,'ΒΑΡΕΤΑΔΑ',828),(4366,'ΚΕΧΡΙΝΙΑΣ',828),(4367,'ΛΟΥΤΡΟΥ',828),(4368,'ΜΕΓΑ ΚΑΜΠΟΥ',828),(4369,'ΣΑΡΔΙΝΙΩΝ',828),(4370,'ΣΠΑΡΤΟΥ',828),(4371,'ΣΤΑΝΟΥ',828),(4372,'ΑΓΡΙΔΙΟΥ',829),(4373,'ΑΛΕΥΡΑΔΑΣ',829),(4374,'ΑΜΟΡΓΙΑΝΩΝ',829),(4375,'ΒΡΟΥΒΙΑΝΩΝ',829),(4376,'ΓΙΑΝΝΟΠΟΥΛΩΝ',829),(4377,'ΕΜΠΕΣΟΥ',829),(4378,'ΜΑΛΕΣΙΑΔΑΣ',829),(4379,'ΜΠΑΜΠΑΛΙΟΥ',829),(4380,'ΠΑΤΙΟΠΟΥΛΟΥ',829),(4381,'ΠΕΡΔΙΚΑΚΙΟΥ',829),(4382,'ΠΕΤΡΩΝΑΣ',829),(4383,'ΠΟΔΟΓΟΡΑ',829),(4384,'ΣΤΑΘΑ',829),(4385,'ΤΡΙΚΛΙΝΟΥ',829),(4386,'ΧΑΛΚΙΟΠΟΥΛΩΝ',829),(4387,'ΜΕΝΙΔΙΟΥ',830),(4388,'ΦΛΩΡΙΑΔΟΣ',830),(4389,'ΑΒΑΡΙΚΟΥ',831),(4390,'ΑΓΙΑΣ ΣΟΦΙΑΣ',831),(4391,'ΑΕΤΟΠΕΤΡΑΣ',831),(4392,'ΑΜΒΡΑΚΙΑΣ',831),(4393,'ΑΝΑΛΗΨΕΩΣ',831),(4394,'ΑΡΓΥΡΟΥ ΠΗΓΑΔΙΟΥ',831),(4395,'ΔΙΑΣΕΛΛΑΚΙΟΥ',831),(4396,'ΔΙΠΛΑΤΑΝΟΥ',831),(4397,'ΔΡΥΜΩΝΟΣ',831),(4398,'ΘΕΡΜΟΥ',831),(4399,'ΚΑΛΟΥΔΙΟΥ',831),(4400,'ΚΑΤΩ ΧΡΥΣΟΒΙΤΣΗΣ',831),(4401,'ΚΟΚΚΙΝΟΒΡΥΣΗΣ',831),(4402,'ΚΟΝΙΣΚΗΣ',831),(4403,'ΛΕΥΚΟΥ',831),(4404,'ΜΥΡΤΕΑΣ',831),(4405,'ΝΕΡΟΧΩΡΙΟΥ',831),(4406,'ΠΑΜΦΙΟΥ',831),(4407,'ΠΕΡΚΟΥ',831),(4408,'ΠΕΤΡΟΧΩΡΙΟΥ',831),(4409,'ΣΙΤΑΡΑΛΩΝΩΝ',831),(4410,'ΧΑΛΙΚΙΟΥ ΑΜΒΡΑΚΙΑΣ',831),(4411,'ΧΡΥΣΟΒΙΤΣΑΣ',831),(4412,'ΑΓΙΟΥ ΗΛΙΑ',832),(4413,'ΑΙΤΩΛΙΚΟΥ',832),(4414,'ΣΤΑΜΝΑΣ',832),(4415,'ΦΡΑΓΚΟΥΛΑΙΙΚΩΝ',832),(4416,'ΧΡΥΣΟΒΕΡΓΙΟΥ',832),(4417,'ΑΓΙΟΥ ΓΕΩΡΓΙΟΥ',833),(4418,'ΑΓΙΟΥ ΘΩΜΑ',833),(4419,'ΑΝΩ ΚΟΥΔΟΥΝΙΟΥ',833),(4420,'ΕΛΛΗΝΙΚΩΝ',833),(4421,'ΕΥΗΝΟΧΩΡΙΟΥ',833),(4422,'ΜΕΣΟΛΟΓΓΙΟΥ',833),(4423,'ΜΟΥΣΟΥΡΩΝ',833),(4424,'ΡΕΤΣΙΝΩΝ',833),(4425,'ΓΟΥΡΙΑΣ',834),(4426,'ΚΑΤΟΧΗΣ',834),(4427,'ΛΕΣΙΝΙΟΥ',834),(4428,'ΜΑΣΤΡΟΥ',834),(4429,'ΝΕΟΧΩΡΙΟΥ ΜΕΣΟΛΟΓΓΙΟΥ',834),(4430,'ΠΕΝΤΑΛΟΦΟΥ',834),(4431,'ΑΝΤΙΡΡΙΟΥ',835),(4432,'ΜΑΚΥΝΕΙΑΣ',835),(4433,'ΜΟΛΥΚΡΕΙΟΥ',835),(4434,'ΑΜΠΕΛΑΚΙΩΤΙΣΣΗΣ',836),(4435,'ΑΝΑΒΡΥΤΗΣ',836),(4436,'ΑΝΩ ΧΩΡΑΣ',836),(4437,'ΑΣΠΡΙΑΣ',836),(4438,'ΓΡΑΜΜΕΝΗΣ ΟΞΥΑΣ',836),(4439,'ΓΡΗΓΟΡΙΟΥ',836),(4440,'ΕΛΑΤΟΒΡΥΣΗΣ',836),(4441,'ΕΛΑΤΟΥΣ',836),(4442,'ΚΑΛΛΟΝΗΣ',836),(4443,'ΚΑΤΑΦΥΓΙΟΥ',836),(4444,'ΚΑΤΩ ΧΩΡΑΣ',836),(4445,'ΚΕΝΤΡΙΚΗΣ',836),(4446,'ΚΟΚΚΙΝΟΧΩΡΙΟΥ',836),(4447,'ΚΡΥΟΝΕΡΙΩΝ',836),(4448,'ΚΥΔΩΝΕΑΣ',836),(4449,'ΛΕΥΚΑΣ',836),(4450,'ΛΙΜΝΙΤΣΗΣ',836),(4451,'ΜΑΝΔΡΙΝΗΣ',836),(4452,'ΠΟΔΟΥ',836),(4453,'ΤΕΡΨΙΘΕΑΣ',836),(4454,'ΑΦΡΟΞΥΛΙΑΣ',837),(4455,'ΒΕΛΒΙΝΑΣ',837),(4456,'ΒΛΑΧΟΜΑΝΔΡΑΣ',837),(4457,'ΒΟΜΒΟΚΟΥΣ',837),(4458,'ΔΑΦΝΗΣ',837),(4459,'ΛΥΓΙΑ',837),(4460,'ΜΑΜΟΥΛΑΔΑΣ',837),(4461,'ΝΑΥΠΑΚΤΟΥ',837),(4462,'ΝΕΟΚΑΣΤΡΟΥ',837),(4463,'ΞΗΡΟΠΗΓΑΔΟΥ',837),(4464,'ΠΑΛΑΙΟΧΩΡΑΚΙΟΥ',837),(4465,'ΠΙΤΣΙΝΑΙΙΚΩΝ',837),(4466,'ΡΙΓΑΝΙΟΥ',837),(4467,'ΣΚΑΛΑΣ',837),(4468,'ΑΓΙΟΥ ΔΗΜΗΤΡΙΟΥ',838),(4469,'ΑΡΑΧΟΒΗΣ',838),(4470,'ΑΧΛΑΔΟΚΑΣΤΡΟΥ',838),(4471,'ΔΕΝΔΡΟΧΩΡΙΟΥ',838),(4472,'ΚΑΣΤΑΝΕΑΣ',838),(4473,'ΚΛΕΠΑΣ',838),(4474,'ΛΙΒΑΔΑΚΙΟΥ',838),(4475,'ΝΕΟΧΩΡΙΟΥ ΝΑΥΠΑΚΤΙΑΣ',838),(4476,'ΠΕΡΔΙΚΟΒΡΥΣΗΣ',838),(4477,'ΠΕΡΙΣΤΗΣ',838),(4478,'ΠΛΑΤΑΝΟΥ',838),(4479,'ΧΟΜΟΡΗΣ',838),(4480,'ΑΝΘΟΦΥΤΟΥ',839),(4481,'ΓΑΒΡΟΥ',839),(4482,'ΔΟΡΒΙΤΣΙΑΣ',839),(4483,'ΕΛΕΥΘΕΡΙΑΝΗΣ',839),(4484,'ΜΗΛΕΑΣ',839),(4485,'ΠΑΛΑΙΟΠΥΡΓΟΥ',839),(4486,'ΠΟΚΙΣΤΗΣ',839),(4487,'ΣΙΜΟΥ',839),(4488,'ΣΤΡΑΝΩΜΗΣ',839),(4489,'ΣΤΥΛΙΑΣ',839),(4490,'ΦΑΜΙΛΑΣ',839),(4491,'ΑΝΩ ΒΑΣΙΛΙΚΗΣ',840),(4492,'ΒΑΣΙΛΙΚΗΣ',840),(4493,'ΓΑΒΡΟΛΙΜΝΗΣ',840),(4494,'ΓΑΛΑΤΑ',840),(4495,'ΚΑΛΑΒΡΟΥΖΗΣ',840),(4496,'ΠΕΡΙΘΩΡΙΟΥ',840),(4497,'ΤΡΙΚΟΡΦΟΥ',840),(4498,'ΑΡΧΟΝΤΟΧΩΡΙΟΥ',841),(4499,'ΒΑΡΝΑΚΑ',841),(4500,'ΚΑΝΔΗΛΑΣ',841),(4501,'ΜΥΤΙΚΑ',841),(4502,'ΠΑΝΑΓΟΥΛΑΣ',841),(4503,'ΑΓΡΑΜΠΕΛΩΝ',842),(4504,'ΑΣΤΑΚΟΥ',842),(4505,'ΒΑΣΙΛΟΠΟΥΛΟΥ',842),(4506,'ΒΛΙΖΙΑΝΩΝ',842),(4507,'ΚΑΡΑΪΣΚΑΚΗ',842),(4508,'ΜΑΧΑΙΡΑ',842),(4509,'ΜΠΑΜΠΙΝΗΣ',842),(4510,'ΠΑΛΑΙΟΜΑΝΙΝΑΣ',842),(4511,'ΠΡΟΔΡΟΜΟΥ',842),(4512,'ΣΚΟΥΡΤΟΥΣ',842),(4513,'ΣΤΡΟΓΓΥΛΟΒΟΥΝΙΟΥ',842),(4514,'ΧΡΥΣΟΒΙΤΣΗΣ ΒΟΝΙΤΣΗΣ',842),(4515,'ΠΑΠΠΑΔΑΤΟΥ',843),(4516,'ΦΥΤΕΙΩΝ',843),(4517,'ΑΙΓΕΙΡΑΣ',844),(4518,'ΑΙΓΩΝ',844),(4519,'ΑΜΠΕΛΟΚΗΠΩΝ',844),(4520,'ΒΕΛΑΣ',844),(4521,'ΕΞΟΧΗΣ',844),(4522,'ΜΟΝΑΣΤΗΡΙΟΥ',844),(4523,'ΟΑΣΕΩΣ',844),(4524,'ΠΕΡΙΘΩΡΙΟΥ',844),(4525,'ΣΕΛΙΑΝΑΣ',844),(4526,'ΣΙΝΕΒΡΟΥ',844),(4527,'ΧΡΥΣΑΝΘΙΟΥ',844),(4528,'ΑΙΓΙΟΥ',845),(4529,'ΒΑΛΙΜΙΤΙΚΩΝ',845),(4530,'ΔΑΦΝΩΝ',845),(4531,'ΔΙΓΕΛΙΩΤΙΚΩΝ',845),(4532,'ΚΟΥΛΟΥΡΑΣ',845),(4533,'ΚΟΥΜΑΡΗ',845),(4534,'ΚΟΥΝΙΝΑΣ',845),(4535,'ΜΑΥΡΙΚΙΟΥ',845),(4536,'ΜΕΛΙΣΣΙΩΝ',845),(4537,'ΠΑΡΑΣΚΕΥΗΣ',845),(4538,'ΠΤΕΡΗΣ',845),(4539,'ΣΕΛΙΝΟΥΝΤΟΣ',845),(4540,'ΤΕΜΕΝΗΣ',845),(4541,'ΧΑΤΖΗ',845),(4542,'ΑΓΙΑΣ ΒΑΡΒΑΡΑΣ',846),(4543,'ΑΚΡΑΤΑΣ',846),(4544,'ΑΜΠΕΛΟΥ',846),(4545,'ΒΑΛΙΜΗΣ',846),(4546,'ΒΟΥΤΣΙΜΟΥ',846),(4547,'ΖΑΡΟΥΧΛΗΣ',846),(4548,'ΚΑΛΑΜΙΑ',846),(4549,'ΚΡΑΘΙΟΥ',846),(4550,'ΜΕΣΟΡΡΟΥΓΙΟΥ',846),(4551,'ΠΑΡΑΛΙΑΣ ΠΛΑΤΑΝΟΥ',846),(4552,'ΠΕΡΙΣΤΕΡΑΣ',846),(4553,'ΠΛΑΤΑΝΟΥ',846),(4554,'ΠΟΡΟΒΙΤΣΗΣ',846),(4555,'ΣΥΛΙΒΑΙΝΙΩΤΙΚΩΝ',846),(4556,'ΑΝΩ ΔΙΑΚΟΠΤΟΥ',847),(4557,'ΔΙΑΚΟΠΤΟΥ',847),(4558,'ΕΛΑΙΩΝΟΣ',847),(4559,'ΕΛΙΚΗΣ',847),(4560,'ΖΑΧΛΩΡΙΤΙΚΩΝ',847),(4561,'ΚΑΘΟΛΙΚΟΥ',847),(4562,'ΚΕΡΥΝΕΙΑΣ',847),(4563,'ΜΑΜΟΥΣΙΑΣ',847),(4564,'ΝΙΚΟΛΑΙΙΚΩΝ',847),(4565,'ΡΙΖΟΜΥΛΟΥ',847),(4566,'ΡΟΔΙΑΣ',847),(4567,'ΤΡΑΠΕΖΗΣ',847),(4568,'ΑΡΡΑΒΩΝΙΤΣΗΣ',848),(4569,'ΔΑΜΑΚΙΝΙΟΥ',848),(4570,'ΖΗΡΙΑΣ',848),(4571,'ΚΑΜΑΡΩΝ',848),(4572,'ΝΕΟΥ ΕΡΙΝΕΟΥ',848),(4573,'ΣΑΛΜΕΝΙΚΟΥ',848),(4574,'ΑΓΙΟΥ ΚΩΝΣΤΑΝΤΙΝΟΥ',849),(4575,'ΑΛΣΟΥΣ',849),(4576,'ΒΕΡΙΝΟΥ',849),(4577,'ΓΚΡΑΙΚΑ',849),(4578,'ΓΡΗΓΟΡΗ',849),(4579,'ΔΗΜΗΤΡΟΠΟΥΛΟΥ',849),(4580,'ΔΟΥΚΑΝΑΙΙΚΩΝ',849),(4581,'ΚΡΗΝΗΣ ΑΙΓΙΑΛΕΙΑΣ',849),(4582,'ΛΑΚΚΑΣ',849),(4583,'ΛΟΓΓΟΥ',849),(4584,'ΜΑΓΕΙΡΑ',849),(4585,'ΜΥΡΟΒΡΥΣΗΣ',849),(4586,'ΝΕΡΑΝΤΖΙΩΝ',849),(4587,'ΡΟΔΟΔΑΦΝΗΣ',849),(4588,'ΣΕΛΙΑΝΙΤΙΚΩΝ',849),(4589,'ΤΟΥΜΠΑΣ',849),(4590,'ΑΓΙΟΒΛΑΣΙΤΙΚΩΝ',850),(4591,'ΑΛΙΣΣΟΥ',850),(4592,'ΑΝΩ ΑΧΑΙΑΣ',850),(4593,'ΕΛΑΙΟΧΩΡΙΟΥ',850),(4594,'ΚΑΤΩ ΑΛΙΣΣΟΥ',850),(4595,'ΚΑΤΩ ΑΧΑΪΑΣ',850),(4596,'ΝΙΦΟΡΑΙΙΚΩΝ',850),(4597,'ΠΕΤΡΟΧΩΡΙΟΥ',850),(4598,'ΑΓΙΟΥ ΝΙΚΟΛΑΟΥ ΣΠΑΤΩΝ',851),(4599,'ΑΠΙΔΕΩΝΟΣ',851),(4600,'ΑΡΑΞΟΥ',851),(4601,'ΒΕΛΙΤΣΩΝ',851),(4602,'ΚΑΓΚΑΔΙΟΥ',851),(4603,'ΛΑΚΚΟΠΕΤΡΑΣ',851),(4604,'ΜΑΤΑΡΑΓΚΑΣ',851),(4605,'ΜΕΤΟΧΙΟΥ',851),(4606,'ΜΙΧΟΪΟΥ',851),(4607,'ΠΕΤΤΑ',851),(4608,'ΡΙΟΛΟΥ',851),(4609,'ΚΑΡΑΙΙΚΩΝ',852),(4610,'ΚΡΙΝΟΥ',852),(4611,'ΛΙΜΝΟΧΩΡΙΟΥ',852),(4612,'ΜΥΡΤΟΥ',852),(4613,'ΣΑΓΑΙΙΚΩΝ',852),(4614,'ΦΡΑΓΚΑΣ',852),(4615,'ΑΓΙΟΥ ΝΙΚΟΛΑΟΥ ΚΡΑΛΗΣ',853),(4616,'ΑΓΙΟΥ ΣΤΕΦΑΝΟΥ',853),(4617,'ΑΝΩ ΣΟΥΔΕΝΑΙΙΚΩΝ',853),(4618,'ΑΡΛΑΣ',853),(4619,'ΑΧΑΪΚΟΥ',853),(4620,'ΓΑΛΑΝΑΙΙΚΑ',853),(4621,'ΓΚΑΝΕΙΚΑ',853),(4622,'ΚΑΤΩ ΜΑΖΑΡΑΚΙ',853),(4623,'ΛΟΥΣΙΚΩΝ',853),(4624,'ΜΙΤΟΠΟΛΕΩΣ',853),(4625,'ΠΟΡΤΩΝ',853),(4626,'ΣΑΝΤΟΜΕΡΙΟΥ',853),(4627,'ΦΛΟΚΑ',853),(4628,'ΦΩΣΤΑΙΝΗΣ',853),(4629,'ΧΑΪΚΑΛΙΟΥ',853),(4630,'ΧΑΡΑΥΓΗΣ',853),(4631,'ΚΑΛΕΝΤΖΙΟΥ',854),(4632,'ΑΝΩ ΜΑΖΑΡΑΚΙ',855),(4633,'ΔΕΜΕΣΤΙΧΩΝ',855),(4634,'ΛΕΟΝΤΙΟΥ',855),(4635,'ΑΓΙΑΣ ΒΑΡΒΑΡΑΣ',856),(4636,'ΑΓΙΑΣ ΜΑΡΙΝΗΣ',856),(4637,'ΑΛΕΠΟΧΩΡΙΟΥ',856),(4638,'ΒΕΛΙΜΑΧΙΟΥ',856),(4639,'ΔΡΟΣΙΑΣ',856),(4640,'ΕΡΥΜΑΝΘΕΙΑΣ',856),(4641,'ΚΑΛΦΑ',856),(4642,'ΜΑΝΕΣΙΟΥ',856),(4643,'ΡΟΥΠΑΚΙΑΣ',856),(4644,'ΣΚΙΑΔΑ',856),(4645,'ΣΚΟΥΡΑ',856),(4646,'ΣΠΑΡΤΙΑΣ',856),(4647,'ΣΤΑΥΡΟΔΡΟΜΙΟΥ',856),(4648,'ΧΙΟΝΑΣ',856),(4649,'ΒΑΣΙΛΙΚΟΥ',857),(4650,'ΕΛΛΗΝΙΚΟΥ',857),(4651,'ΙΣΩΜΑΤΟΣ',857),(4652,'ΚΑΛΑΝΙΣΤΡΑΣ',857),(4653,'ΚΑΛΑΝΟΥ',857),(4654,'ΚΑΛΟΥΣΙΟΥ',857),(4655,'ΚΑΤΑΡΡΑΚΤΟΥ',857),(4656,'ΚΡΙΘΑΡΑΚΙΩΝ',857),(4657,'ΛΑΚΚΩΜΑΤΩΝ',857),(4658,'ΜΙΡΑΛΙΟΥ',857),(4659,'ΝΕΟΥ ΚΟΜΠΗΓΑΔΙΟΥ',857),(4660,'ΠΛΑΤΑΝΟΒΡΥΣΗΣ',857),(4661,'ΣΤΑΡΟΧΩΡΙΟΥ',857),(4662,'ΦΑΡΩΝ',857),(4663,'ΧΑΛΑΝΔΡΙΤΣΗΣ',857),(4664,'ΧΡΥΣΟΠΗΓΗΣ',857),(4665,'ΑΓΡΑΜΠΕΛΩΝ',858),(4666,'ΑΓΡΙΔΙΟΥ',858),(4667,'ΑΛΕΣΤΑΙΝΗΣ',858),(4668,'ΑΝΑΣΤΑΣΕΩΣ',858),(4669,'ΑΡΟΑΝΙΑΣ',858),(4670,'ΔΕΣΙΝΟΥ',858),(4671,'ΚΑΜΕΝΙΑΝΩΝ',858),(4672,'ΛΕΧΟΥΡΙΟΥ',858),(4673,'ΛΙΒΑΡΤΖΙΟΥ',858),(4674,'ΠΛΑΚΑΣ',858),(4675,'ΣΕΙΡΩΝ',858),(4676,'ΨΩΦΙΔΟΣ',858),(4677,'ΑΝΩ ΒΛΑΣΙΑΣ',859),(4678,'ΑΝΩ ΛΟΥΣΩΝ',859),(4679,'ΒΑΛΤΑΣ',859),(4680,'ΒΙΛΙΒΙΝΗΣ',859),(4681,'ΓΟΥΜΕΝΙΣΣΑΣ',859),(4682,'ΔΟΥΜΕΝΩΝ',859),(4683,'ΔΡΟΣΑΤΟΥ',859),(4684,'ΚΑΛΑΒΡΥΤΩΝ',859),(4685,'ΚΑΛΛΙΦΩΝΙΟΥ',859),(4686,'ΚΑΝΔΑΛΟΥ',859),(4687,'ΚΑΤΩ ΒΛΑΣΙΑΣ',859),(4688,'ΚΑΤΩ ΖΑΧΛΩΡΟΥΣ',859),(4689,'ΚΑΤΩ ΛΟΥΣΩΝ',859),(4690,'ΚΕΡΠΙΝΗΣ',859),(4691,'ΚΕΡΤΕΖΗΣ',859),(4692,'ΚΟΡΦΩΝ',859),(4693,'ΚΟΥΤΕΛΗΣ',859),(4694,'ΚΡΥΟΝΕΡΙΟΥ',859),(4695,'ΛΑΓΟΒΟΥΝΙΟΥ',859),(4696,'ΛΑΠΑΝΑΓΩΝ',859),(4697,'ΜΑΝΕΣΙΟΥ',859),(4698,'ΜΙΚΡΟΥ ΠΟΝΤΙΑ',859),(4699,'ΠΕΤΣΑΚΩΝ',859),(4700,'ΠΛΑΤΑΝΙΩΤΙΣΣΗΣ',859),(4701,'ΠΡΙΟΛΙΘΟΥ',859),(4702,'ΠΡΟΦΗΤΟΥ ΗΛΙΟΥ',859),(4703,'ΡΟΓΩΝ',859),(4704,'ΣΙΓΟΥΝΙΟΥ',859),(4705,'ΣΚΕΠΑΣΤΟΥ',859),(4706,'ΤΡΕΧΛΟΥ',859),(4707,'ΦΛΑΜΠΟΥΡΩΝ',859),(4708,'ΑΓΙΟΥ ΝΙΚΟΛΑΟΥ',860),(4709,'ΑΝΩ ΚΛΕΙΤΟΡΙΑΣ',860),(4710,'ΑΡΜΠΟΥΝΑ',860),(4711,'ΓΛΑΣΤΡΑΣ',860),(4712,'ΔΡΥΜΟΥ',860),(4713,'ΚΑΣΤΕΛΛΙΟΥ',860),(4714,'ΚΑΣΤΡΙΩΝ',860),(4715,'ΚΛΕΙΤΟΡΙΑΣ',860),(4716,'ΚΛΕΙΤΟΡΟΣ',860),(4717,'ΚΡΙΝΟΦΥΤΩΝ',860),(4718,'ΛΕΥΚΑΣΙΟΥ',860),(4719,'ΛΥΚΟΥΡΙΑΣ',860),(4720,'ΠΑΓΚΡΑΤΙΟΥ',860),(4721,'ΠΛΑΝΗΤΕΡΟΥ',860),(4722,'ΤΟΥΡΛΑΔΑΣ',860),(4723,'ΦΙΛΙΩΝ',860),(4724,'ΑΜΥΓΔΑΛΕΑΣ',861),(4725,'ΔΑΦΝΗΣ',861),(4726,'ΝΑΣΙΩΝ',861),(4727,'ΠΑΟΥ',861),(4728,'ΠΕΥΚΟΥ',861),(4729,'ΣΚΟΤΑΝΗΣ',861),(4730,'ΧΟΒΟΛΗΣ',861),(4731,'ΒΡΑΧΝΑΙΙΚΩΝ',862),(4732,'ΘΕΡΙΑΝΟΥ',862),(4733,'ΚΑΜΙΝΙΩΝ',862),(4734,'ΜΟΝΟΔΕΝΔΡΙΟΥ',862),(4735,'ΤΣΟΥΚΑΛΑΙΙΚΩΝ',862),(4736,'ΘΕΑΣ',863),(4737,'ΚΑΛΛΙΘΕΑΣ',863),(4738,'ΚΡΗΝΗΣ',863),(4739,'ΚΡΥΣΤΑΛΛΟΒΡΥΣΗΣ',863),(4740,'ΟΒΡΥΑΣ',863),(4741,'ΠΕΤΡΩΤΟΥ',863),(4742,'ΣΑΡΑΒΑΛΙΟΥ',863),(4743,'ΜΙΝΤΙΛΟΓΛΙΟΥ',864),(4744,'ΠΑΡΑΛΙΑΣ',864),(4745,'ΡΟΓΙΤΙΚΩΝ',864),(4746,'1ο ΔΗΜ. ΔΙΑΜΕΡΙΣΜΑ ΠΑΤΡΑΣ(συμπεριλαμβάνονται οι οικισμοί Μπάλα, Σκιόεσσα και Χαράδρος',865),(4747,'2ο ΔΗΜ. ΔΙΑΜΕΡΙΣΜΑ ΠΑΤΡΑΣ',865),(4748,'3ο ΔΗΜ. ΔΙΑΜΕΡΙΣΜΑ ΠΑΤΡΑΣ',865),(4749,'4ο ΔΗΜ. ΔΙΑΜΕΡΙΣΜΑ ΠΑΤΡΑΣ',865),(4750,'ΕΛΙΚΙΣΤΡΑΣ',865),(4751,'ΜΟΙΡΑΣ',865),(4752,'ΣΟΥΛΙΟΥ',865),(4753,'ΑΓΙΟΥ ΒΑΣΙΛΕΙΟΥ',866),(4754,'ΑΚΤΑΙΟΥ',866),(4755,'ΑΝΩ ΚΑΣΤΡΙΤΣΙΟΥ',866),(4756,'ΑΡΑΧΟΒΙΤΙΚΩΝ',866),(4757,'ΑΡΓΥΡΑΣ',866),(4758,'ΔΡΕΠΑΝΟΥ',866),(4759,'ΚΑΤΩ ΚΑΣΤΡΙΤΣΙΟΥ',866),(4760,'ΠΙΤΙΤΣΗΣ',866),(4761,'ΠΛΑΤΑΝΙΟΥ',866),(4762,'ΡΙΟΥ',866),(4763,'ΣΕΛΛΩΝ',866),(4764,'ΨΑΘΟΠΥΡΓΟΥ',866),(4765,'ΑΝΔΡΑΒΙΔΑΣ',867),(4766,'ΣΤΑΦΙΔΟΚΑΜΠΟΥ',867),(4767,'ΣΤΡΟΥΣΙΟΥ',867),(4768,'ΑΕΤΟΡΡΑΧΗΣ',868),(4769,'ΒΑΡΔΑΣ',868),(4770,'ΚΑΠΕΛΕΤΟΥ',868),(4771,'ΚΟΥΡΤΕΣΙΟΥ (ΚΟΥΡΤΕΣΗ)',868),(4772,'ΜΑΝΟΛΑΔΟΣ',868),(4773,'ΝΕΑΠΟΛΕΩΣ',868),(4774,'ΝΕΑΣ ΜΑΝΟΛΑΔΟΣ',868),(4775,'ΝΗΣΙΟΥ',868),(4776,'ΞΕΝΙΩΝ (ΚΑΛΥΒΑΚΙΩΝ)',868),(4777,'ΚΑΣΤΡΟΥ',869),(4778,'ΚΑΤΩ ΠΑΝΑΓΙΑΣ',869),(4779,'ΚΥΛΛΗΝΗΣ',869),(4780,'ΝΕΟΧΩΡΙΟΥ ΜΥΡΤΟΥΝΤΙΩΝ',869),(4781,'ΑΓΙΟΣ ΧΑΡΑΛΑΜΠΟΣ',870),(4782,'ΑΡΕΤΗΣ',870),(4783,'ΛΕΧΑΙΝΩΝ',870),(4784,'ΜΕΛΙΣΣΑ',870),(4785,'ΜΠΟΡΣΙΟΝ',870),(4786,'ΜΥΡΣΙΝΗΣ',870),(4787,'ΑΛΙΦΕΙΡΑΣ',871),(4788,'ΑΜΥΓΔΑΛΕΩΝ',871),(4789,'ΒΡΕΣΤΟΥ',871),(4790,'ΚΑΛΛΙΘΕΑΣ',871),(4791,'ΛΙΒΑΔΑΚΙΟΥ',871),(4792,'ΜΥΡΩΝΙΩΝ',871),(4793,'ΑΝΔΡΙΤΣΑΙΝΗΣ',872),(4794,'ΔΑΦΝΟΥΛΑΣ',872),(4795,'ΔΡΑΓΩΓΙΟΥ',872),(4796,'ΘΕΙΣΟΑΣ',872),(4797,'ΚΟΥΦΟΠΟΥΛΟΥ',872),(4798,'ΛΙΝΙΣΤΑΙΝΗΣ',872),(4799,'ΜΑΤΕΣΙΟΥ',872),(4800,'ΡΟΒΙΩΝ',872),(4801,'ΣΕΚΟΥΛΑ',872),(4802,'ΦΑΝΑΡΙΟΥ',872),(4803,'ΒΡΙΝΑΣ',873),(4804,'ΓΡΑΙΚΑ',873),(4805,'ΓΡΥΛΛΟΥ',873),(4806,'ΔΙΑΣΕΛΛΩΝ',873),(4807,'ΚΑΛΛΙΚΩΜΟΥ',873),(4808,'ΚΑΛΥΒΑΚΙΩΝ',873),(4809,'ΚΑΤΩ ΣΑΜΙΚΟΥ',873),(4810,'ΚΡΕΣΤΕΝΩΝ',873),(4811,'ΜΑΚΡΙΣΙΩΝ',873),(4812,'ΠΛΑΤΙΑΝΑΣ',873),(4813,'ΠΛΟΥΤΟΧΩΡΙΟΥ',873),(4814,'ΡΑΧΩΝ',873),(4815,'ΣΑΜΙΚΟΥ',873),(4816,'ΣΚΙΛΛΟΥΝΤΙΑΣ',873),(4817,'ΤΡΥΠΗΤΗΣ',873),(4818,'ΦΡΙΞΗΣ',873),(4819,'ΑΡΧΑΙΑΣ ΟΛΥΜΠΙΑΣ',874),(4820,'ΑΡΧΑΙΑΣ ΠΙΣΑΣ',874),(4821,'ΑΣΠΡΩΝ ΣΠΙΤΙΩΝ',874),(4822,'ΒΑΣΙΛΑΚΙΟΥ',874),(4823,'ΗΡΑΚΛΕΙΑΣ',874),(4824,'ΚΑΜΕΝΗΣ',874),(4825,'ΚΑΥΚΩΝΙΑΣ',874),(4826,'ΚΛΑΔΕΟΥ',874),(4827,'ΚΟΣΚΙΝΑ',874),(4828,'ΚΡΥΟΝΕΡΙΟΥ',874),(4829,'ΛΙΝΑΡΙΑΣ',874),(4830,'ΛΟΥΒΡΟΥ',874),(4831,'ΜΑΓΕΙΡΑ',874),(4832,'ΜΟΥΡΙΑΣ',874),(4833,'ΞΗΡΟΚΑΜΠΟΥ',874),(4834,'ΠΕΛΟΠΙΟΥ',874),(4835,'ΠΕΥΚΩΝ',874),(4836,'ΠΛΑΤΑΝΟΥ',874),(4837,'ΠΟΥΡΝΑΡΙΟΥ',874),(4838,'ΣΜΙΛΑΣ',874),(4839,'ΣΤΡΕΦΙΟΥ',874),(4840,'ΦΛΟΚΑ',874),(4841,'ΧΕΛΙΔΟΝΙΟΥ',874),(4842,'ΑΣΤΡΑ',875),(4843,'ΛΑΜΠΕΙΑΣ',875),(4844,'ΟΡΕΙΝΗΣ',875),(4845,'ΑΓΙΑΣ ΚΥΡΙΑΚΗΣ',876),(4846,'ΑΓΙΑΣ ΤΡΙΑΔΟΣ',876),(4847,'ΑΝΤΡΩΝΙΟΥ',876),(4848,'ΚΑΚΟΤΑΡΙΟΥ',876),(4849,'ΚΡΥΟΒΡΥΣΗΣ',876),(4850,'ΤΣΙΠΙΑΝΩΝ',876),(4851,'ΑΧΛΑΔΙΝΗΣ',877),(4852,'ΔΟΥΚΑ',877),(4853,'ΚΟΥΜΑΝΗ',877),(4854,'ΛΑΛΑ',877),(4855,'ΜΗΛΕΩΝ',877),(4856,'ΝΕΜΟΥΤΑΣ',877),(4857,'ΝΕΡΑΙΔΑΣ',877),(4858,'ΠΕΡΣΑΙΝΗΣ',877),(4859,'ΦΟΛΟΗΣ',877),(4860,'ΑΓΙΟΥ ΗΛΙΑ',878),(4861,'ΑΝΗΛΙΟΥ',878),(4862,'ΑΡΗΝΗΣ',878),(4863,'ΑΡΤΕΜΙΔΑΣ',878),(4864,'ΓΙΑΝΝΙΤΣΟΧΩΡΙΟΥ',878),(4865,'ΖΑΧΑΡΩΣ',878),(4866,'ΚΑΚΟΒΑΤΟΥ',878),(4867,'ΚΑΛΙΔΟΝΗΣ',878),(4868,'ΛΕΠΡΕΟΥ',878),(4869,'ΜΑΚΙΣΤΟΥ',878),(4870,'ΜΗΛΕΑΣ',878),(4871,'ΜΙΝΘΗΣ',878),(4872,'ΝΕΟΧΩΡΙΟΥ',878),(4873,'ΞΗΡΟΧΩΡΙΟΥ',878),(4874,'ΠΡΑΣΙΔΑΚΙΟΥ',878),(4875,'ΡΟΔΙΝΩΝ',878),(4876,'ΣΜΕΡΝΑΣ',878),(4877,'ΣΧΙΝΩΝ',878),(4878,'ΤΑΞΙΑΡΧΩΝ',878),(4879,'ΧΡΥΣΟΧΩΡΙΟΥ (ΤΡΥΠΩΝ)',878),(4880,'ΚΡΥΟΝΕΡΙΟΥ',879),(4881,'ΝΕΑΣ ΦΙΓΑΛΕΙΑΣ',879),(4882,'ΠΕΡΙΒΟΛΙΩΝ',879),(4883,'ΠΕΤΡΑΛΩΝΩΝ',879),(4884,'ΣΤΟΜΙΟΥ',879),(4885,'ΦΙΓΑΛΕΙΑΣ',879),(4886,'ΑΓΙΟΥ ΔΗΜΗΤΡΙΟΥ',880),(4887,'ΑΓΙΟΥ ΗΛΙΑ ΠΗΝΗΙΩΝ',880),(4888,'ΑΜΑΛΙΑΔΟΣ',880),(4889,'ΑΜΠΕΛΟΚΑΜΠΟΥ',880),(4890,'ΑΡΧΑΙΑΣ ΗΛΙΔΑΣ',880),(4891,'ΑΥΓΕΙΟΥ',880),(4892,'ΓΕΡΑΚΙΟΥ',880),(4893,'ΔΑΦΝΗΣ',880),(4894,'ΔΑΦΝΙΩΤΙΣΣΗΣ',880),(4895,'ΔΟΥΝΑΙΙΚΩΝ',880),(4896,'ΚΑΛΥΒΙΩΝ ΗΛΙΔΟΣ',880),(4897,'ΚΑΡΔΑΜΑ',880),(4898,'ΚΕΝΤΡΟΥ',880),(4899,'ΚΕΡΑΜΙΔΙΑΣ',880),(4900,'ΚΡΥΟΝΕΡΟΥ',880),(4901,'ΠΕΡΙΣΤΕΡΙΟΥ',880),(4902,'ΡΟΒΙΑΤΑΣ',880),(4903,'ΣΑΒΑΛΙΩΝ',880),(4904,'ΣΩΣΤΙΟΥ',880),(4905,'ΧΑΒΑΡΙΟΥ',880),(4906,'ΑΓΝΑΝΤΩΝ',881),(4907,'ΑΓΡΑΠΙΔΟΧΩΡΙΟΥ',881),(4908,'ΑΝΘΩΝΟΣ',881),(4909,'ΑΥΓΗΣ',881),(4910,'ΒΕΛΑΝΙΔΙΟΥ',881),(4911,'ΒΟΥΛΙΑΓΜΕΝΗΣ',881),(4912,'ΕΦΥΡΑΣ',881),(4913,'ΚΑΜΠΟΥ',881),(4914,'ΛΑΓΑΝΑ',881),(4915,'ΛΑΤΑ',881),(4916,'ΛΟΥΚΑ',881),(4917,'ΜΑΖΑΡΑΚΙΟΥ',881),(4918,'ΟΙΝΟΗΣ',881),(4919,'ΡΟΔΙΑΣ',881),(4920,'ΣΙΜΟΠΟΥΛΟΥ',881),(4921,'ΣΚΛΙΒΑΣ',881),(4922,'ΒΑΡΘΟΛΟΜΙΟΥ',882),(4923,'ΔΗΜΗΤΡΑΣ',882),(4924,'ΚΑΛΥΒΙΩΝ ΜΥΡΤΟΥΝΤΙΩΝ',882),(4925,'ΛΥΓΙΑΣ',882),(4926,'ΜΑΧΟΥ',882),(4927,'ΓΑΣΤΟΥΝΗΣ',883),(4928,'ΚΑΒΑΣΙΛΑ',883),(4929,'ΚΑΡΔΙΑΚΑΥΤΙΟΥ',883),(4930,'ΚΟΡΟΙΒΟΥ',883),(4931,'ΛΕΥΚΟΧΩΡΙΟΥ',883),(4932,'ΠΑΛΑΙΟΧΩΡΙΟΥ',883),(4933,'ΡΟΥΠΑΚΙΟΥ',883),(4934,'ΑΓΙΑΣ ΜΑΥΡΑΣ',884),(4935,'ΣΙΜΙΖΑ',884),(4936,'ΤΡΑΓΑΝΟΥ',884),(4937,'ΑΓΡΙΔΙΟΥ',885),(4938,'ΑΛΦΕΙΟΥΣΗΣ',885),(4939,'ΑΝΕΜΟΧΩΡΙΟΥ',885),(4940,'ΕΠΙΤΑΛΙΟΥ',885),(4941,'ΑΓΙΩΝ ΑΠΟΣΤΟΛΩΝ',886),(4942,'ΑΛΠΟΧΩΡΙΟΥ',886),(4943,'ΒΟΥΝΑΡΓΟΥ',886),(4944,'ΒΡΟΧΙΤΣΗΣ',886),(4945,'ΚΑΤΣΑΡΟΥ',886),(4946,'ΚΟΡΥΦΗΣ',886),(4947,'ΞΥΛΟΚΕΡΑΣ',886),(4948,'ΠΡΑΣΙΝΟΥ',886),(4949,'ΦΟΝΑΪΤΙΚΩΝ',886),(4950,'ΑΓΙΟΥ ΓΕΩΡΓΙΟΥ',887),(4951,'ΑΓΙΟΥ ΗΛΙΑ ΠΥΡΓΟΥ',887),(4952,'ΑΓΙΟΥ ΙΩΑΝΝΟΥ',887),(4953,'ΑΜΠΕΛΩΝΟΣ',887),(4954,'ΒΑΡΒΑΣΑΙΝΗΣ',887),(4955,'ΒΥΤΙΝΑΙΙΚΩΝ',887),(4956,'ΓΡΑΝΙΤΣΑΙΙΚΩΝ',887),(4957,'ΕΛΑΙΩΝΟΣ',887),(4958,'ΚΑΤΑΚΟΛΟΥ',887),(4959,'ΚΟΛΙΡΙΟΥ',887),(4960,'ΚΟΡΑΚΟΧΩΡΙΟΥ',887),(4961,'ΛΑΣΤΑΙΙΚΩΝ',887),(4962,'ΛΕΒΕΝΤΟΧΩΡΙΟΥ',887),(4963,'ΜΥΡΤΕΑΣ',887),(4964,'ΠΑΛΑΙΟΒΑΡΒΑΣΑΙΝΗΣ',887),(4965,'ΠΥΡΓΟΥ',887),(4966,'ΣΑΛΜΩΝΗΣ',887),(4967,'ΣΚΑΦΙΔΙΑΣ',887),(4968,'ΣΚΟΥΡΟΧΩΡΙΟΥ',887),(4969,'ΑΓΙΑΣ ΑΝΝΗΣ',888),(4970,'ΑΡΒΑΝΙΤΗ',888),(4971,'ΓΟΥΜΕΡΟΥ',888),(4972,'ΚΑΡΑΤΟΥΛΑ',888),(4973,'ΚΑΡΥΑΣ',888),(4974,'ΚΛΙΝΔΙΑΣ',888),(4975,'ΚΟΥΤΣΟΧΕΡΑΣ',888),(4976,'ΛΑΝΘΙΟΥ',888),(4977,'ΛΑΤΖΟΪΟΥ',888),(4978,'ΜΑΓΟΥΛΑΣ',888),(4979,'ΜΟΥΖΑΚΙΟΥ',888),(4980,'ΠΕΥΚΗΣ',888),(4981,'ΣΟΠΙΟΥ',888),(4982,'ΧΑΡΙΑΣ',888),(4983,'ΧΕΙΜΑΔΙΟΥ',888),(4984,'ΩΛΕΝΗΣ',888),(4985,'ΑΓΙΟΥ ΔΗΜΗΤΡΙΟΥ',889),(4986,'ΑΛΙΚΑΝΑ',889),(4987,'ΑΝΩ ΓΕΡΑΚΑΡΙΟΥ',889),(4988,'ΚΑΛΛΙΘΕΑΣ',889),(4989,'ΚΑΤΑΣΤΑΡΙΟΥ',889),(4990,'ΚΑΤΩ ΓΕΡΑΚΑΡΙΟΥ',889),(4991,'ΜΕΣΟΥ ΓΕΡΑΚΑΡΙΟΥ',889),(4992,'ΠΗΓΑΔΑΚΙΩΝ',889),(4993,'ΣΚΟΥΛΗΚΑΔΟΥ',889),(4994,'ΑΓΙΟΥ ΚΗΡΥΚΟΥ',890),(4995,'ΒΑΝΑΤΟΥ',890),(4996,'ΚΑΛΙΠΑΔΟΥ',890),(4997,'ΚΥΨΕΛΗΣ',890),(4998,'ΠΛΑΝΟΥ',890),(4999,'ΣΑΡΑΚΗΝΑΔΟΥ',890),(5000,'ΤΡΑΓΑΚΙΟΥ',890),(5001,'ΑΓΙΑΣ ΜΑΡΙΝΗΣ',891),(5002,'ΑΓΙΟΥ ΛΕΟΝΤΟΣ',891),(5003,'ΑΓΙΩΝ ΠΑΝΤΩΝ',891),(5004,'ΒΟΥΓΙΑΤΟΥ',891),(5005,'ΓΑΛΑΡΟΥ (ΜΕΓΑΛΟΥ ΓΑΛΑΡΟΥ)',891),(5006,'ΓΥΡΙΟΥ',891),(5007,'ΚΟΙΛΙΩΜΕΝΟΥ (ΑΓΙΟΥ ΝΙΚΟΛΑΟΥ)',891),(5008,'ΛΑΓΚΑΔΑΚΙΩΝ',891),(5009,'ΛΑΓΩΠΟΔΟΥ',891),(5010,'ΛΟΥΧΑΣ',891),(5011,'ΜΑΧΑΙΡΑΔΟΥ',891),(5012,'ΡΟΜΙΡΙΟΥ',891),(5013,'ΦΙΟΛΙΤΗ',891),(5014,'ΑΝΑΦΩΝΗΤΡΙΑΣ',892),(5015,'ΑΝΩ ΒΟΛΙΜΩΝ',892),(5016,'ΒΟΛΙΜΩΝ',892),(5017,'ΕΞΩ ΧΩΡΑΣ',892),(5018,'ΜΑΡΙΩΝ',892),(5019,'ΟΡΘΟΝΙΩΝ',892),(5020,'ΑΜΠΕΛΟΚΗΠΩΝ',893),(5021,'ΑΡΓΑΣΙΟΥ',893),(5022,'ΒΑΣΙΛΙΚΟΥ',893),(5023,'ΓΑΪΤΑΝΙΟΥ',893),(5024,'ΖΑΚΥΝΘΙΩΝ',893),(5025,'ΜΠΟΧΑΛΗΣ',893),(5026,'ΑΓΑΛΑ',894),(5027,'ΚΑΛΑΜΑΚΙΟΥ',894),(5028,'ΚΕΡΙΟΥ',894),(5029,'ΛΙΘΑΚΙΑΣ',894),(5030,'ΜΟΥΖΑΚΙΟΥ',894),(5031,'ΠΑΝΤΟΚΡΑΤΟΡΟΣ',894),(5032,'ΑΝΩΓΗΣ',895),(5033,'ΕΞΩΓΗΣ',895),(5034,'ΙΘΑΚΗΣ',895),(5035,'ΚΙΟΝΙΟΥ',895),(5036,'ΛΕΥΚΗΣ',895),(5037,'ΠΕΡΑΧΩΡΙΟΥ',895),(5038,'ΠΛΑΤΡΕΙΘΙΑ (ΠΛΑΤΗΘΡΙΑ)',895),(5039,'ΣΤΑΥΡΟΥ',895),(5040,'ΑΓΙΟΥ ΑΘΑΝΑΣΙΟΥ',896),(5041,'ΑΓΡΟΥ',896),(5042,'ΑΡΚΑΔΑΔΩΝ',896),(5043,'ΑΡΜΕΝΑΔΩΝ',896),(5044,'ΑΦΙΩΝΟΣ',896),(5045,'ΔΑΦΝΗΣ',896),(5046,'ΔΡΟΣΑΤΟΥ',896),(5047,'ΚΑΒΒΑΔΑΔΩΝ',896),(5048,'ΚΑΣΤΕΛΛΑΝΩΝ ΓΥΡΟΥ',896),(5049,'ΜΕΣΑΡΙΑΣ',896),(5050,'ΠΑΓΩΝ',896),(5051,'ΡΑΧΤΑΔΩΝ',896),(5052,'ΧΩΡΕΠΙΣΚΟΠΩΝ',896),(5053,'ΑΓΙΟΥ ΠΡΟΚΟΠΙΟΥ',897),(5054,'ΑΓΙΩΝ ΔΕΚΑ',897),(5055,'ΑΝΩ ΓΑΡΟΥΝΑΣ',897),(5056,'ΒΑΡΥΠΑΤΑΔΩΝ',897),(5057,'ΒΙΡΟΥ',897),(5058,'ΓΑΣΤΟΥΡΙΟΥ',897),(5059,'ΚΑΛΑΦΑΤΙΩΝΩΝ',897),(5060,'ΚΑΜΑΡΑΣ',897),(5061,'ΚΑΣΤΕΛΛΑΝΩΝ ΜΕΣΗΣ',897),(5062,'ΚΑΤΩ ΓΑΡΟΥΝΑΣ',897),(5063,'ΚΟΥΡΑΜΑΔΩΝ',897),(5064,'ΚΥΝΟΠΙΑΣΤΩΝ',897),(5065,'ΜΠΕΝΙΤΣΩΝ',897),(5066,'ΣΤΑΥΡΟΥ',897),(5067,'ΕΡΕΙΚΟΥΣΣΗΣ',898),(5068,'ΑΓΙΩΝ ΔΟΥΛΩΝ',899),(5069,'ΑΓΡΑΦΩΝ',899),(5070,'ΑΝΤΙΠΕΡΝΩΝ',899),(5071,'ΑΥΛΙΩΤΩΝ',899),(5072,'ΒΑΛΑΝΕΙΟΥ',899),(5073,'ΒΕΛΟΝΑΔΩΝ',899),(5074,'ΚΑΒΑΛΛΟΥΡΙΟΥ',899),(5075,'ΚΑΡΟΥΣΑΔΩΝ',899),(5076,'ΜΑΓΟΥΛΑΔΩΝ',899),(5077,'ΠΕΡΟΥΛΑΔΩΝ',899),(5078,'ΣΙΔΑΡΙΟΥ',899),(5079,'ΑΓΙΟΥ ΠΑΝΤΕΛΕΗΜΟΝΑ',900),(5080,'ΕΠΙΣΚΕΨΕΩΣ',900),(5081,'ΚΛΗΜΑΤΙΑΣ',900),(5082,'ΛΑΥΚΙΟΥ',900),(5083,'ΛΟΥΤΣΩΝ',900),(5084,'ΝΥΜΦΩΝ',900),(5085,'ΞΑΝΘΑΤΩΝ',900),(5086,'ΠΕΡΙΘΕΙΑΣ',900),(5087,'ΠΕΤΑΛΕΙΑΣ',900),(5088,'ΣΦΑΚΕΡΩΝ',900),(5089,'ΓΙΜΑΡΙΟΥ',901),(5090,'ΚΑΣΣΙΟΠΗΣ',901),(5091,'ΝΗΣΑΚΙΟΥ',901),(5092,'ΣΙΝΙΩΝ',901),(5093,'ΑΛΕΠΟΥΣ',902),(5094,'ΕΒΡΟΠΟΥΛΩΝ',902),(5095,'ΚΑΝΑΛΙΟΥ',902),(5096,'ΚΕΡΚΥΡΑΙΩΝ',902),(5097,'ΑΓΙΟΥ ΝΙΚΟΛΑΟΥ',903),(5098,'ΑΡΓΥΡΑΔΩΝ',903),(5099,'ΒΑΣΙΛΑΤΙΚΩΝ',903),(5100,'ΚΟΥΣΠΑΔΩΝ',903),(5101,'ΠΕΡΙΒΟΛΙΟΥ',903),(5102,'ΠΕΤΡΙΤΗΣ',903),(5103,'ΑΝΩ ΛΕΥΚΙΜΜΗΣ',904),(5104,'ΒΙΤΑΛΑΔΩΝ',904),(5105,'ΛΕΥΚΙΜΜΗΣ',904),(5106,'ΝΕΟΧΩΡΙΟΥ',904),(5107,'ΜΑΘΡΑΚΙΟΥ',905),(5108,'ΑΓΙΟΥ ΜΑΤΘΑΙΟΥ',906),(5109,'ΑΝΩ ΠΑΥΛΙΑΝΑΣ (ΠΑΥΛΙΑΝΑΣ)',906),(5110,'ΒΟΥΝΙΑΤΑΔΩΝ',906),(5111,'ΚΑΤΩ ΠΑΥΛΙΑΝΑΣ',906),(5112,'ΜΟΡΑΪΤΙΚΩΝ',906),(5113,'ΠΕΝΤΑΤΙΟΥ',906),(5114,'ΣΤΡΟΓΓΥΛΗΣ',906),(5115,'ΧΛΟΜΑΤΙΑΝΩΝ',906),(5116,'ΧΛΟΜΟΥ',906),(5117,'ΟΘΩΝΩΝ',907),(5118,'ΑΛΕΙΜΜΑΤΑΔΩΝ',908),(5119,'ΓΑΡΔΕΛΑΔΩΝ',908),(5120,'ΔΟΥΚΑΔΩΝ',908),(5121,'ΚΡΗΝΗΣ',908),(5122,'ΛΑΚΩΝΩΝ',908),(5123,'ΛΙΑΠΑΔΩΝ',908),(5124,'ΜΑΚΡΑΔΩΝ',908),(5125,'ΣΚΡΙΠΕΡΟΥ',908),(5126,'ΑΓΙΟΥ ΙΩΑΝΝΟΥ',909),(5127,'ΑΦΡΑΣ',909),(5128,'ΒΑΤΟΥ',909),(5129,'ΓΙΑΝΝΑΔΩΝ',909),(5130,'ΚΑΝΑΚΑΔΩΝ',909),(5131,'ΚΟΚΚΙΝΙΟΥ',909),(5132,'ΚΟΜΠΙΤΣΙΟΥ',909),(5133,'ΜΑΡΜΑΡΟΥ',909),(5134,'ΠΕΛΕΚΑ',909),(5135,'ΣΙΝΑΡΑΔΩΝ',909),(5136,'ΑΓΙΟΥ ΜΑΡΚΟΥ',910),(5137,'ΑΝΩ ΚΟΡΑΚΙΑΝΑΣ',910),(5138,'ΖΥΓΟΥ',910),(5139,'ΚΑΤΩ ΚΟΡΑΚΙΑΝΑΣ',910),(5140,'ΣΓΟΥΡΑΔΩΝ',910),(5141,'ΣΠΑΡΤΥΛΑ',910),(5142,'ΣΩΚΡΑΚΙΟΥ',910),(5143,'ΓΑΪΟΥ',911),(5144,'ΛΑΚΚΑΣ',911),(5145,'ΛΟΓΓΟΥ',911),(5146,'ΜΑΓΑΖΙΩΝ',911),(5147,'ΑΓΚΩΝΟΣ',912),(5148,'ΑΡΓΟΣΤΟΛΙΟΥ',912),(5149,'ΔΑΥΓΑΤΩΝ',912),(5150,'ΔΙΛΙΝΑΤΩΝ',912),(5151,'ΖΟΛΩΝ',912),(5152,'ΘΗΝΑΙΑΣ',912),(5153,'ΚΟΥΡΟΥΚΛΑΤΩΝ',912),(5154,'ΝΥΦΙΟΥ',912),(5155,'ΤΡΩΪΑΝΑΤΩΝ',912),(5156,'ΦΑΡΑΚΛΑΤΩΝ',912),(5157,'ΦΑΡΣΩΝ',912),(5158,'ΑΓΙΑΣ ΕΙΡΗΝΗΣ',913),(5159,'ΑΓΙΟΥ ΝΙΚΟΛΑΟΥ',913),(5160,'ΑΡΓΙΝΙΩΝ',913),(5161,'ΒΑΛΕΡΙΑΝΟΥ',913),(5162,'ΜΑΡΚΟΠΟΥΛΟΥ',913),(5163,'ΜΑΥΡΑΤΩΝ',913),(5164,'ΞΕΝΟΠΟΥΛΟΥ',913),(5165,'ΠΑΣΤΡΑΣ',913),(5166,'ΠΟΡΟΥ',913),(5167,'ΣΚΑΛΑΣ',913),(5168,'ΧΙΟΝΑΤΩΝ',913),(5169,'ΑΝΤΙΠΑΤΩΝ ΕΡΙΣΟΥ',914),(5170,'ΑΣΟΥ',914),(5171,'ΒΑΡΕΟΣ',914),(5172,'ΒΑΣΙΛΙΚΙΑΔΩΝ',914),(5173,'ΚΑΡΥΑΣ',914),(5174,'ΚΟΘΡΕΑ',914),(5175,'ΚΟΜΙΤΑΤΩΝ',914),(5176,'ΜΕΣΟΒΟΥΝΙΩΝ',914),(5177,'ΝΕΟΧΩΡΙΟΥ',914),(5178,'ΠΑΤΡΙΚΑΤΩΝ',914),(5179,'ΠΛΑΓΙΑΣ',914),(5180,'ΤΟΥΛΙΑΤΩΝ',914),(5181,'ΦΙΣΚΑΡΔΟΥ',914),(5182,'ΒΛΑΧΑΤΩΝ ΕΙΚΟΣΙΜΙΑΣ',915),(5183,'ΚΑΡΑΒΑΔΟΥ',915),(5184,'ΚΕΡΑΜΕΙΩΝ',915),(5185,'ΛΑΚΗΘΡΑΣ',915),(5186,'ΛΟΥΡΔΑΤΩΝ',915),(5187,'ΜΕΤΑΞΑΤΩΝ',915),(5188,'ΜΟΥΣΑΤΩΝ',915),(5189,'ΠΕΡΑΤΑΤΩΝ',915),(5190,'ΠΕΣΑΔΑΣ',915),(5191,'ΣΒΟΡΩΝΑΤΩΝ',915),(5192,'ΣΠΑΡΤΙΩΝ',915),(5193,'ΟΜΑΛΩΝ',916),(5194,'ΑΓΙΑΣ ΘΕΚΛΗΣ',917),(5195,'ΑΘΕΡΟΣ',917),(5196,'ΔΑΜΟΥΛΙΑΝΑΤΩΝ',917),(5197,'ΚΑΜΙΝΑΡΑΤΩΝ',917),(5198,'ΚΑΤΩΓΗΣ',917),(5199,'ΚΟΝΤΟΓΕΝΑΔΑΣ',917),(5200,'ΚΟΥΒΑΛΑΤΩΝ',917),(5201,'ΛΗΞΟΥΡΙΟΥ',917),(5202,'ΜΟΝΟΠΟΛΑΤΩΝ',917),(5203,'ΡΙΦΙΟΥ',917),(5204,'ΣΚΙΝΕΩΣ',917),(5205,'ΣΟΥΛΛΑΡΩΝ',917),(5206,'ΦΑΒΑΤΑΤΩΝ',917),(5207,'ΧΑΒΔΑΤΩΝ',917),(5208,'ΧΑΒΡΙΑΤΩΝ',917),(5209,'ΑΓΙΑΣ ΕΥΦΗΜΙΑΣ',918),(5210,'ΔΙΒΑΡΑΤΩΝ',918),(5211,'ΜΑΚΡΥΩΤΙΚΩΝ',918),(5212,'ΓΡΙΖΑΤΩΝ',919),(5213,'ΚΑΡΑΒΟΜΥΛΟΥ',919),(5214,'ΠΟΥΛΑΤΩΝ',919),(5215,'ΠΥΡΓΙΟΥ',919),(5216,'ΣΑΜΗΣ',919),(5217,'ΧΑΛΙΩΤΑΤΩΝ',919),(5218,'ΑΓΙΟΥ ΗΛΙΑ',920),(5219,'ΑΓΙΟΥ ΠΕΤΡΟΥ',920),(5220,'ΑΘΑΝΙΟΥ',920),(5221,'ΒΑΣΙΛΙΚΗΣ',920),(5222,'ΒΟΥΡΝΙΚΑ',920),(5223,'ΔΡΑΓΑΝΟΥ',920),(5224,'ΕΥΓΗΡΟΥ',920),(5225,'ΚΟΜΗΛΙΟΥ',920),(5226,'ΚΟΝΤΑΡΑΙΝΗΣ',920),(5227,'ΜΑΡΑΝΤΟΧΩΡΙΟΥ',920),(5228,'ΝΙΚΟΛΗ',920),(5229,'ΣΥΒΡΟΥ',920),(5230,'ΧΟΡΤΑΤΩΝ',920),(5231,'ΒΑΥΚΕΡΗΣ',921),(5232,'ΒΛΥΧΟΥ',921),(5233,'ΚΑΤΩΧΩΡΙΟΥ',921),(5234,'ΝΕΟΧΩΡΙΟΥ',921),(5235,'ΝΥΔΡΙΟΥ',921),(5236,'ΠΛΑΤΥΣΤΟΜΩΝ',921),(5237,'ΠΟΡΟΥ',921),(5238,'ΦΤΕΡΝΟΥ',921),(5239,'ΧΑΡΑΔΙΑΤΙΚΩΝ',921),(5240,'ΚΑΛΑΜΟΥ',922),(5241,'ΕΓΚΛΟΥΒΗΣ',923),(5242,'ΚΑΡΥΑΣ',923),(5243,'ΠΗΓΑΔΗΣΑΝΩΝ',923),(5244,'ΚΑΣΤΟΥ',924),(5245,'ΑΓΙΟΥ ΝΙΚΗΤΑ',925),(5246,'ΑΛΕΞΑΝΔΡΟΥ',925),(5247,'ΑΠΟΛΠΑΙΝΗΣ',925),(5248,'ΚΑΛΑΜΙΤΣΙΟΥ',925),(5249,'ΚΑΡΙΩΤΩΝ',925),(5250,'ΚΑΤΟΥΝΗΣ',925),(5251,'ΛΕΥΚΑΔΟΣ',925),(5252,'ΤΣΟΥΚΑΛΑΔΩΝ',925),(5253,'ΑΣΠΡΟΓΕΡΑΚΑΤΩΝ',926),(5254,'ΔΡΥΜΩΝΟΣ',926),(5255,'ΕΞΑΝΘΕΙΑΣ',926),(5256,'ΚΑΒΑΛΟΥ',926),(5257,'ΛΑΖΑΡΑΤΩΝ',926),(5258,'ΠΙΝΑΚΟΧΩΡΙΟΥ',926),(5259,'ΣΠΑΝΟΧΩΡΙΟΥ',926),(5260,'ΒΑΘΕΩΣ',927),(5261,'ΚΑΤΩΜΕΡΙΟΥ',927),(5262,'ΣΠΑΡΤΟΧΩΡΙΟΥ',927),(5263,'ΑΓΙΟΥ ΝΙΚΟΛΑΟΥ',928),(5264,'ΑΛΕΑΣ',928),(5265,'ΣΚΟΤΕΙΝΗΣ',928),(5266,'ΦΡΟΥΣΙΟΥΝΑΣ',928),(5267,'ΑΡΓΟΥΣ',929),(5268,'ΔΑΛΑΜΑΝΑΡΑΣ',929),(5269,'ΕΛΛΗΝΙΚΟΥ',929),(5270,'ΗΡΑΣ',929),(5271,'ΙΝΑΧΟΥ',929),(5272,'ΚΕΦΑΛΑΡΙΟΥ',929),(5273,'ΚΟΥΡΤΑΚΙΟΥ',929),(5274,'ΛΑΛΟΥΚΑ',929),(5275,'ΠΥΡΓΕΛΛΑΣ',929),(5276,'ΑΧΛΑΔΟΚΑΜΠΟΥ',930),(5277,'ΒΡΟΥΣΤΙΟΥ',931),(5278,'ΚΟΥΤΣΟΠΟΔΙΟΥ',931),(5279,'ΜΑΛΑΝΤΡΕΝΙΟΥ',931),(5280,'ΣΧΙΝΟΧΩΡΙΟΥ',931),(5281,'ΑΝΔΡΙΤΣΗΣ',932),(5282,'ΚΙΒΕΡΙΟΥ',932),(5283,'ΜΥΛΩΝ',932),(5284,'ΣΚΑΦΙΔΑΚΙΟΥ',932),(5285,'ΓΥΜΝΟΥ',933),(5286,'ΚΑΠΑΡΕΛΛΙΟΥ',933),(5287,'ΚΑΡΥΑΣ',933),(5288,'ΚΕΦΑΛΟΒΡΥΣΟΥ',933),(5289,'ΛΥΡΚΕΙΑΣ',933),(5290,'ΝΕΟΧΩΡΙΟΥ',933),(5291,'ΣΤΕΡΝΑΣ',933),(5292,'ΦΡΕΓΚΑΙΝΗΣ',933),(5293,'ΛΙΜΝΩΝ',934),(5294,'ΜΟΝΑΣΤΗΡΑΚΙΟΥ',934),(5295,'ΜΠΟΡΣΑ',934),(5296,'ΜΥΚΗΝΩΝ',934),(5297,'ΝΕΟΥ ΗΡΑΙΟΥ',934),(5298,'ΠΡΟΣΥΜΝΗΣ',934),(5299,'ΦΙΧΤΙΟΥ',934),(5300,'ΝΕΑΣ ΚΙΟΥ',935),(5301,'ΑΓΙΟΥ ΔΗΜΗΤΡΙΟΥ',936),(5302,'ΑΔΑΜΙΟΥ',936),(5303,'ΑΡΚΑΔΙΚΟΥ',936),(5304,'ΑΣΚΛΗΠΙΕΙΟΥ',936),(5305,'ΑΡΧΑΙΑΣ ΕΠΙΔΑΥΡΟΥ',937),(5306,'ΔΗΜΑΙΝΗΣ',937),(5307,'ΝΕΑΣ ΕΠΙΔΑΥΡΟΥ',937),(5308,'ΤΡΑΧΕΙΑΣ',937),(5309,'ΕΡΜΙΟΝΗΣ',938),(5310,'ΗΛΙΟΚΑΣΤΡΟΥ',938),(5311,'ΘΕΡΜΗΣΙΑΣ',938),(5312,'ΔΙΔΥΜΩΝ',939),(5313,'ΚΟΙΛΑΔΟΣ',939),(5314,'ΚΡΑΝΙΔΙΟΥ',939),(5315,'ΠΟΡΤΟΧΕΛΙΟΥ',939),(5316,'ΦΟΥΡΝΩΝ',939),(5317,'ΑΣΙΝΗΣ',940),(5318,'ΔΡΕΠΑΝΟΥ',940),(5319,'ΙΡΙΩΝ',940),(5320,'ΚΑΡΝΕΖΑΙΙΚΩΝ',940),(5321,'ΤΟΛΟΥ',940),(5322,'ΑΓΙΑΣ ΤΡΙΑΔΑΣ',941),(5323,'ΑΝΥΦΙΟΥ',941),(5324,'ΑΡΑΧΝΑΙΟΥ',941),(5325,'ΑΡΓΟΛΙΚΟΥ',941),(5326,'ΗΡΑΙΟΥ',941),(5327,'ΜΑΝΕΣΗ',941),(5328,'ΜΙΔΕΑΣ',941),(5329,'ΠΑΝΑΡΙΤΗ',941),(5330,'ΠΟΥΛΛΑΚΙΔΑΣ',941),(5331,'ΑΡΙΑΣ',942),(5332,'ΛΕΥΚΑΚΙΩΝ',942),(5333,'ΝΑΥΠΛΙΕΩΝ',942),(5334,'ΠΥΡΓΙΩΤΙΚΩΝ',942),(5335,'ΑΓΙΟΥ ΑΔΡΙΑΝΟΥ',943),(5336,'ΝΕΑΣ ΤΙΡΥΝΘΑΣ',943),(5337,'ΝΕΟΥ ΡΟΕΙΝΟΥ',943),(5338,'ΑΓΙΑΣ ΣΟΦΙΑΣ',944),(5339,'ΑΓΙΟΥ ΑΝΔΡΕΟΥ',944),(5340,'ΑΓΙΟΥ ΓΕΩΡΓΙΟΥ',944),(5341,'ΑΓΙΟΥ ΠΕΤΡΟΥ',944),(5342,'ΑΣΤΡΟΥΣ',944),(5343,'ΒΕΡΒΕΝΩΝ',944),(5344,'ΔΟΛΙΑΝΩΝ',944),(5345,'ΕΛΑΤΟΥ',944),(5346,'ΚΑΡΑΤΟΥΛΑ',944),(5347,'ΚΑΣΤΑΝΙΤΣΗΣ',944),(5348,'ΚΑΣΤΡΙΟΥ',944),(5349,'ΚΟΡΑΚΟΒΟΥΝΙΟΥ',944),(5350,'ΚΟΥΤΡΟΥΦΩΝ',944),(5351,'ΜΕΛΙΓΟΥΣ',944),(5352,'ΜΕΣΟΡΡΑΧΗΣ',944),(5353,'ΝΕΑΣ ΧΩΡΑΣ',944),(5354,'ΞΗΡΟΠΗΓΑΔΟΥ',944),(5355,'ΠΑΡΑΛΙΟΥ ΑΣΤΡΟΥΣ',944),(5356,'ΠΕΡΔΙΚΟΒΡΥΣΗΣ',944),(5357,'ΠΛΑΤΑΝΑΣ',944),(5358,'ΠΛΑΤΑΝΟΥ',944),(5359,'ΠΡΑΣΤΟΥ',944),(5360,'ΣΙΤΑΙΝΗΣ',944),(5361,'ΣΤΟΛΟΥ',944),(5362,'ΧΑΡΑΔΡΟΥ',944),(5363,'ΩΡΓΙΑΣ',944),(5364,'ΒΥΤΙΝΑΣ',945),(5365,'ΕΛΑΤΗΣ',945),(5366,'ΚΑΜΕΝΙΤΣΗΣ',945),(5367,'ΛΑΣΤΗΣ',945),(5368,'ΜΑΓΟΥΛΙΑΝΩΝ',945),(5369,'ΝΥΜΦΑΣΙΑΣ',945),(5370,'ΠΥΡΓΑΚΙΟΥ',945),(5371,'ΔΗΜΗΤΣΑΝΗΣ',946),(5372,'ΖΑΤΟΥΝΗΣ',946),(5373,'ΖΙΓΟΒΙΣΤΙΟΥ',946),(5374,'ΜΕΛΙΣΣΟΠΕΤΡΑΣ',946),(5375,'ΠΑΝΑΓΙΑΣ',946),(5376,'ΡΑΔΟΥ',946),(5377,'ΡΙΖΟΣΠΗΛΙΑΣ',946),(5378,'ΑΓΙΟΥ ΙΩΑΝΝΟΥ ΑΡΧΑΙΑΣ ΗΡΑΙΑΣ',947),(5379,'ΑΡΑΧΟΒΗΣ',947),(5380,'ΚΑΚΟΥΡΑΙΙΚΩΝ',947),(5381,'ΚΟΚΚΙΝΟΡΡΑΧΗΣ',947),(5382,'ΚΟΚΚΟΡΑ',947),(5383,'ΛΙΟΔΩΡΑΣ',947),(5384,'ΛΟΥΤΡΩΝ ΗΡΑΙΑΣ',947),(5385,'ΛΥΚΟΥΡΕΣΗ',947),(5386,'ΛΥΣΣΑΡΕΑΣ',947),(5387,'ΟΧΘΙΑΣ',947),(5388,'ΠΑΛΟΥΜΠΑΣ',947),(5389,'ΠΥΡΡΗ',947),(5390,'ΡΑΦΤΗ',947),(5391,'ΣΑΡΑΚΙΝΙΟΥ ΗΡΑΙΑΣ',947),(5392,'ΣΕΡΒΟΥ',947),(5393,'ΧΡΥΣΟΧΩΡΙΟΥ',947),(5394,'ΨΑΡΙΟΥ',947),(5395,'ΑΓΡΙΔΙΟΥ',948),(5396,'ΒΑΛΤΕΣΙΝΙΚΟΥ',948),(5397,'ΔΡΑΚΟΒΟΥΝΙΟΥ',948),(5398,'ΘΕΟΚΤΙΣΤΟΥ',948),(5399,'ΚΕΡΠΙΝΗΣ',948),(5400,'ΜΥΓΔΑΛΙΑΣ',948),(5401,'ΞΗΡΟΚΑΡΙΤΑΙΝΗΣ',948),(5402,'ΠΟΥΡΝΑΡΙΑΣ',948),(5403,'ΠΡΑΣΙΝΟΥ',948),(5404,'ΒΑΧΛΙΑΣ',949),(5405,'ΒΕΛΗΜΑΧΙΟΥ',949),(5406,'ΒΙΔΙΑΚΙΟΥ',949),(5407,'ΒΟΥΤΣΗ',949),(5408,'ΔΗΜΗΤΡΑΣ',949),(5409,'ΚΑΡΔΑΡΙΤΣΙΟΥ',949),(5410,'ΚΟΝΤΟΒΑΖΑΙΝΗΣ',949),(5411,'ΜΟΝΑΣΤΗΡΑΚΙΟΥ',949),(5412,'ΠΑΡΑΛΟΓΓΩΝ',949),(5413,'ΛΑΓΚΑΔΙΩΝ',950),(5414,'ΛΕΥΚΟΧΩΡΙΟΥ',950),(5415,'ΕΛΛΗΝΙΚΟΥ',951),(5416,'ΠΑΛΑΜΑΡΙΟΥ',951),(5417,'ΠΑΥΛΙΑΣ',951),(5418,'ΣΤΕΜΝΙΤΣΗΣ',951),(5419,'ΣΥΡΝΑΣ',951),(5420,'ΑΕΤΟΡΡΑΧΗ',952),(5421,'ΒΥΖΙΚΙΟΥ',952),(5422,'ΔΟΞΗΣ',952),(5423,'ΚΑΛΛΙΑΝΙΟΥ',952),(5424,'ΚΑΣΤΡΑΚΙΟΥ',952),(5425,'ΛΙΒΑΔΑΚΙΟΥ',952),(5426,'ΝΕΟΧΩΡΙΟΥ ΓΟΡΤΥΝΙΑΣ',952),(5427,'ΠΕΡΔΙΚΟΝΕΡΙΟΥ',952),(5428,'ΡΑΧΩΝ',952),(5429,'ΣΠΑΘΑΡΗ',952),(5430,'ΣΤΑΥΡΟΔΡΟΜΙΟΥ',952),(5431,'ΤΡΙΠΟΤΑΜΙΑΣ',952),(5432,'ΤΡΟΠΑΙΩΝ',952),(5433,'ΧΩΡΑΣ',952),(5434,'ΑΤΣΙΧΟΛΟΥ',953),(5435,'ΒΛΑΧΟΡΡΑΠΤΗ',953),(5436,'ΖΩΝΗΣ',953),(5437,'ΚΑΡΙΤΑΙΝΗΣ',953),(5438,'ΚΑΤΣΙΜΠΑΛΗ',953),(5439,'ΚΟΥΡΟΥΝΙΟΥ',953),(5440,'ΚΥΠΑΡΙΣΣΙΩΝ',953),(5441,'ΚΩΤΙΛΙΟΥ',953),(5442,'ΜΑΥΡΙΩΝ',953),(5443,'ΣΑΡΑΚΙΝΙΟΥ',953),(5444,'ΑΝΘΟΧΩΡΙΟΥ',954),(5445,'ΑΝΩ ΚΑΡΥΩΝ',954),(5446,'ΒΑΓΓΟΥ',954),(5447,'ΒΑΣΤΑ',954),(5448,'ΓΕΦΥΡΑΣ',954),(5449,'ΘΩΚΝΙΑΣ',954),(5450,'ΙΣΑΡΗ',954),(5451,'ΙΣΩΜΑΤΟΣ ΚΑΡΥΩΝ',954),(5452,'ΚΑΡΑΤΟΥΛΑ',954),(5453,'ΚΑΣΤΑΝΟΧΩΡΙΟΥ',954),(5454,'ΚΑΤΩ ΚΑΡΥΩΝ',954),(5455,'ΛΥΚΑΙΟΥ',954),(5456,'ΛΥΚΟΣΟΥΡΑΣ',954),(5457,'ΛΥΚΟΧΙΩΝ',954),(5458,'ΜΑΚΡΥΣΙΟΥ',954),(5459,'ΜΑΛΛΩΤΩΝ',954),(5460,'ΜΑΡΑΘΟΥΣΣΗΣ',954),(5461,'ΜΕΓΑΛΟΠΟΛΕΩΣ',954),(5462,'ΝΕΑΣ ΕΚΚΛΗΣΟΥΛΑΣ',954),(5463,'ΝΕΟΧΩΡΙΟΥ ΛΥΚΟΣΟΥΡΑΣ',954),(5464,'ΠΑΡΑΔΕΙΣΙΩΝ',954),(5465,'ΠΕΡΙΒΟΛΙΩΝ',954),(5466,'ΠΛΑΚΑΣ',954),(5467,'ΡΑΨΟΜΜΑΤΗ',954),(5468,'ΣΟΥΛΙΟΥ',954),(5469,'ΣΟΥΛΟΥ',954),(5470,'ΤΡΙΛΟΦΟΥ',954),(5471,'ΤΡΙΠΟΤΑΜΟΥ',954),(5472,'ΧΙΡΑΔΩΝ',954),(5473,'ΧΡΑΝΩΝ',954),(5474,'ΧΩΡΕΜΗ',954),(5475,'ΑΚΟΒΟΥ',955),(5476,'ΑΝΑΒΡΥΤΟΥ',955),(5477,'ΑΝΕΜΟΔΟΥΡΙΟΥ',955),(5478,'ΒΕΛΙΓΟΣΤΗΣ',955),(5479,'ΒΟΥΤΣΑΡΑ',955),(5480,'ΓΙΑΝΝΑΙΩΝ',955),(5481,'ΓΡΑΙΚΟΥ',955),(5482,'ΔΥΡΡΑΧΙΟΥ',955),(5483,'ΕΛΛΗΝΙΤΣΗΣ',955),(5484,'ΚΑΜΑΡΑΣ',955),(5485,'ΛΕΟΝΤΑΡΙΟΥ',955),(5486,'ΛΕΠΤΙΝΙΟΥ',955),(5487,'ΝΕΟΧΩΡΙΟΥ ΦΑΛΑΙΣΙΑΣ',955),(5488,'ΠΕΤΡΙΝΑΣ',955),(5489,'ΠΟΤΑΜΙΑΣ',955),(5490,'ΡΟΥΤΣΙΟΥ',955),(5491,'ΣΚΟΡΤΣΙΝΟΥ',955),(5492,'ΣΟΥΛΑΡΙΟΥ',955),(5493,'ΤΟΥΡΚΟΛΕΚΑ',955),(5494,'ΦΑΛΑΙΣΙΑΣ',955),(5495,'ΚΟΣΜΑ',956),(5496,'ΑΓΙΟΥ ΒΑΣΙΛΕΙΟΥ',957),(5497,'ΒΛΗΣΙΔΙΑΣ',957),(5498,'ΚΟΥΝΟΥΠΙΑΣ',957),(5499,'ΛΕΩΝΙΔΙΟΥ',957),(5500,'ΜΑΡΙΟΥ',957),(5501,'ΠΑΛΑΙΟΧΩΡΙΟΥ',957),(5502,'ΠΕΛΕΤΩΝ',957),(5503,'ΠΗΓΑΔΙΟΥ',957),(5504,'ΠΛΑΤΑΝΑΚΙΟΥ',957),(5505,'ΠΟΥΛΙΘΡΩΝ',957),(5506,'ΠΡΑΓΜΑΤΕΥΤΗ',957),(5507,'ΤΣΙΤΑΛΙΩΝ',957),(5508,'ΠΕΡΑ ΜΕΛΑΝΩΝ',958),(5509,'ΣΑΠΟΥΝΑΚΑΙΙΚΩΝ',958),(5510,'ΤΥΡΟΥ',958),(5511,'ΑΓΡΙΑΚΟΝΑΣ',959),(5512,'ΑΘΗΝΑΙΟΥ',959),(5513,'ΑΜΠΕΛΑΚΙΟΥ',959),(5514,'ΑΡΑΧΑΜΙΤΩΝ',959),(5515,'ΑΣΕΑΣ',959),(5516,'ΒΑΛΤΕΤΣΙΟΥ',959),(5517,'ΔΑΦΝΗΣ',959),(5518,'ΔΟΡΙΖΑ',959),(5519,'ΚΑΛΤΕΖΩΝ',959),(5520,'ΚΕΡΑΣΤΑΡΗ',959),(5521,'ΜΑΝΑΡΗ',959),(5522,'ΜΑΥΡΟΓΙΑΝΝΗ',959),(5523,'ΠΑΛΑΙΟΧΟΥΝΗΣ',959),(5524,'ΠΑΠΑΡΗ',959),(5525,'ΑΓΙΩΡΓΙΤΙΚΩΝ',960),(5526,'ΕΛΑΙΟΧΩΡΙΟΥ',960),(5527,'ΖΕΥΓΟΛΑΤΕΙΟΥ',960),(5528,'ΝΕΟΧΩΡΙΟΥ ΜΑΝΤΙΝΕΙΑΣ',960),(5529,'ΠΑΡΘΕΝΙΟΥ',960),(5530,'ΣΤΕΝΟΥ',960),(5531,'ΒΛΑΧΕΡΝΗΣ',961),(5532,'ΔΑΡΑ',961),(5533,'ΚΑΝΔΗΛΑΣ',961),(5534,'ΚΑΡΔΑΡΑ',961),(5535,'ΚΩΜΗΣ',961),(5536,'ΛΕΒΙΔΙΟΥ',961),(5537,'ΛΙΜΝΗΣ',961),(5538,'ΟΡΧΟΜΕΝΟΥ',961),(5539,'ΠΑΛΑΙΟΠΥΡΓΟΥ',961),(5540,'ΠΑΝΑΓΙΤΣΑΣ',961),(5541,'ΧΩΤΟΥΣΣΗΣ',961),(5542,'ΑΡΤΕΜΙΣΙΟΥ',962),(5543,'ΚΑΨΑ',962),(5544,'ΛΟΥΚΑ',962),(5545,'ΝΕΣΤΑΝΗΣ',962),(5546,'ΠΙΚΕΡΝΗ',962),(5547,'ΣΑΓΚΑ',962),(5548,'ΣΙΜΙΑΔΩΝ',962),(5549,'ΑΓΙΑΣ ΒΑΡΒΑΡΑΣ',963),(5550,'ΑΛΕΠΟΧΩΡΙΟΥ',963),(5551,'ΒΛΑΧΟΚΕΡΑΣΕΑΣ',963),(5552,'ΒΟΥΡΒΟΥΡΩΝ',963),(5553,'ΚΕΡΑΣΙΑΣ',963),(5554,'ΚΟΛΛΙΝΩΝ',963),(5555,'ΠΗΓΑΔΑΚΙΩΝ',963),(5556,'ΑΛΕΑΣ',964),(5557,'ΒΟΥΝΟΥ',964),(5558,'ΓΑΡΕΑΣ',964),(5559,'ΕΠΙΣΚΟΠΗΣ',964),(5560,'ΚΑΜΑΡΙΟΥ',964),(5561,'ΚΑΝΔΑΛΟΥ',964),(5562,'ΚΕΡΑΣΙΤΣΗΣ',964),(5563,'ΛΙΘΟΒΟΥΝΙΩΝ',964),(5564,'ΜΑΓΟΥΛΑΣ',964),(5565,'ΜΑΝΘΥΡΕΑΣ',964),(5566,'ΜΑΥΡΙΚΙΟΥ',964),(5567,'ΡΙΖΩΝ',964),(5568,'ΣΤΑΔΙΟΥ',964),(5569,'ΣΤΡΙΓΚΟΥ',964),(5570,'ΤΖΙΒΑ',964),(5571,'ΨΗΛΗΣ ΒΡΥΣΗΣ',964),(5572,'ΑΓΙΟΥ ΒΑΣΙΛΕΙΟΥ',965),(5573,'ΑΓΙΟΥ ΚΩΝΣΤΑΝΤΙΝΟΥ',965),(5574,'ΕΥΑΝΔΡΟΥ',965),(5575,'ΘΑΝΑ',965),(5576,'ΜΑΚΡΗΣ',965),(5577,'ΜΕΡΚΟΒΟΥΝΙΟΥ',965),(5578,'ΠΑΛΛΑΝΤΙΟΥ',965),(5579,'ΠΕΛΑΓΟΥΣ',965),(5580,'ΠΕΡΘΩΡΙΟΥ',965),(5581,'ΣΚΟΠΗΣ',965),(5582,'ΤΡΙΠΟΛΕΩΣ',965),(5583,'ΑΛΩΝΙΣΤΑΙΝΗΣ',966),(5584,'ΜΑΙΝΑΛΟΥ',966),(5585,'ΠΙΑΝΑΣ',966),(5586,'ΡΟΕΙΝΟΥ',966),(5587,'ΣΙΛΙΜΝΗΣ',966),(5588,'ΤΣΕΛΕΠΑΚΟΥ',966),(5589,'ΧΡΥΣΟΒΙΤΣΙΟΥ',966),(5590,'ΒΕΛΟΥ',967),(5591,'ΕΛΛΗΝΟΧΩΡΙΟΥ',967),(5592,'ΚΟΚΚΩΝΙΟΥ',967),(5593,'ΚΡΗΝΩΝ',967),(5594,'ΝΕΡΑΝΤΖΗΣ',967),(5595,'ΠΟΥΛΛΙΤΣΗΣ',967),(5596,'ΣΤΙΜΑΓΚΑΣ',967),(5597,'ΤΑΡΣΙΝΩΝ',967),(5598,'ΒΟΧΑΪΚΟΥ',968),(5599,'ΒΡΑΧΑΤΙΟΥ',968),(5600,'ΕΥΑΓΓΕΛΙΣΤΡΙΑΣ',968),(5601,'ΖΕΥΓΟΛΑΤΕΙΟΥ',968),(5602,'ΜΠΟΛΑΤΙΟΥ',968),(5603,'ΣΟΥΛΗΝΑΡΙΟΥ',968),(5604,'ΧΑΛΚΕΙΟΥ',968),(5605,'ΑΣΣΟΥ',969),(5606,'ΚΑΤΩ ΑΣΣΟΥ',969),(5607,'ΛΕΧΑΙΟΥ',969),(5608,'ΠΕΡΙΓΙΑΛΙΟΥ',969),(5609,'ΑΡΧΑΙΑΣ ΚΟΡΙΝΘΟΥ',970),(5610,'ΕΞΑΜΙΛΙΩΝ',970),(5611,'ΚΟΡΙΝΘΟΥ',970),(5612,'ΞΥΛΟΚΕΡΙΖΗΣ',970),(5613,'ΣΟΛΟΜΟΥ',970),(5614,'ΑΓΙΟΥ ΙΩΑΝΝΟΥ',971),(5615,'ΑΘΙΚΙΩΝ',971),(5616,'ΓΑΛΑΤΑΚΙΟΥ',971),(5617,'ΚΑΤΑΚΑΛΙΟΥ',971),(5618,'ΑΓΓΕΛΟΚΑΣΤΡΟΥ',972),(5619,'ΚΟΡΦΟΥ',972),(5620,'ΣΟΦΙΚΟΥ',972),(5621,'ΑΓΙΟΝΟΡΙΟΥ',973),(5622,'ΑΓΙΟΥ ΒΑΣΙΛΕΙΟΥ',973),(5623,'ΚΛΕΝΙΑΣ',973),(5624,'ΚΟΥΤΑΛΑ',973),(5625,'ΣΤΕΦΑΝΙΟΥ',973),(5626,'ΧΙΛΙΟΜΟΔΙΟΥ',973),(5627,'ΑΓΙΩΝ ΘΕΟΔΩΡΩΝ',974),(5628,'ΙΣΘΜΙΑΣ',975),(5629,'ΛΟΥΤΡΑΚΙΟΥ ΠΕΡΑΧΩΡΑΣ',975),(5630,'ΠΙΣΙΩΝ',975),(5631,'ΑΗΔΟΝΙΩΝ',976),(5632,'ΑΡΧΑΙΑΣ ΝΕΜΕΑΣ',976),(5633,'ΑΡΧΑΙΩΝ ΚΛΕΩΝΩΝ',976),(5634,'ΓΑΛΑΤΑ',976),(5635,'ΔΑΦΝΗΣ',976),(5636,'ΚΑΣΤΡΑΚΙΟΥ',976),(5637,'ΚΟΥΤΣΙΟΥ',976),(5638,'ΛΕΟΝΤΙΟΥ',976),(5639,'ΝΕΜΕΑΣ',976),(5640,'ΠΕΤΡΙΟΥ',976),(5641,'ΔΕΡΒΕΝΙΟΥ',977),(5642,'ΕΛΛΗΝΙΚΟΥ',977),(5643,'ΕΥΡΩΣΤΙΝΗΣ-ΡΟΖΕΝΩΝ',977),(5644,'ΚΑΛΛΙΘΕΑΣ',977),(5645,'ΛΥΓΙΑΣ',977),(5646,'ΛΥΚΟΠΟΡΙΑΣ',977),(5647,'ΠΥΡΓΟΥ',977),(5648,'ΣΑΡΑΝΤΑΠΗΧΟΥ',977),(5649,'ΣΤΟΜΙΟΥ',977),(5650,'ΧΕΛΥΔΟΡΕΟΥ',977),(5651,'ΑΝΩ ΤΡΙΚΑΛΩΝ',978),(5652,'ΓΕΛΙΝΙΑΤΙΚΩΝ',978),(5653,'ΔΕΝΔΡΟΥ',978),(5654,'ΖΕΜΕΝΟΥ',978),(5655,'ΘΑΛΕΡΟΥ',978),(5656,'ΘΡΟΦΑΡΙΟΥ',978),(5657,'ΚΑΜΑΡΙΟΥ',978),(5658,'ΚΑΡΥΑΣ',978),(5659,'ΚΑΤΩ ΛΟΥΤΡΟΥ',978),(5660,'ΚΑΤΩ ΣΥΝΟΙΚΙΑΣ ΤΡΙΚΑΛΩΝ',978),(5661,'ΚΟΡΦΙΩΤΙΣΣΗΣ',978),(5662,'ΛΑΓΚΑΔΑΙΙΚΩΝ',978),(5663,'ΜΑΝΝΑΣ',978),(5664,'ΜΕΛΙΣΣΙΟΥ',978),(5665,'ΜΕΣΗΣ ΣΥΝΟΙΚΙΑΣ ΤΡΙΚΑΛΩΝ',978),(5666,'ΝΕΩΝ ΒΡΥΣΟΥΛΩΝ',978),(5667,'ΞΑΝΘΟΧΩΡΙΟΥ',978),(5668,'ΞΥΛΟΚΑΣΤΡΟΥ',978),(5669,'ΠΑΝΑΡΙΤΙΟΥ',978),(5670,'ΠΕΛΛΗΝΗΣ',978),(5671,'ΠΙΤΣΩΝ',978),(5672,'ΡΕΘΙΟΥ',978),(5673,'ΡΙΖΗΣ',978),(5674,'ΣΟΦΙΑΝΩΝ',978),(5675,'ΣΤΥΛΙΩΝ',978),(5676,'ΣΥΚΕΑΣ',978),(5677,'ΒΕΛΙΝΗΣ',979),(5678,'ΓΟΝΟΥΣΣΗΣ',979),(5679,'ΔΙΜΗΝΙΟΥ',979),(5680,'ΚΑΤΩ ΔΙΜΗΝΙΟΥ',979),(5681,'ΚΛΗΜΕΝΤΙΟΥ',979),(5682,'ΚΡΥΟΝΕΡΙΟΥ',979),(5683,'ΛΑΛΙΩΤΟΥ',979),(5684,'ΜΕΓΑΛΟΥ ΒΑΛΤΟΥ',979),(5685,'ΜΙΚΡΟΥ ΒΑΛΤΟΥ',979),(5686,'ΜΟΥΛΚΙΟΥ',979),(5687,'ΜΠΟΖΙΚΑ',979),(5688,'ΠΑΡΑΔΕΙΣΙΟΥ',979),(5689,'ΠΑΣΙΟΥ',979),(5690,'ΣΙΚΥΩΝΟΣ',979),(5691,'ΣΙΚΥΩΝΟΣ',979),(5692,'ΣΟΥΛΙΟΥ',979),(5693,'ΤΙΤΑΝΗΣ',979),(5694,'ΑΣΠΡΟΚΑΜΠΟΥ',980),(5695,'ΔΡΟΣΟΠΗΓΗΣ',980),(5696,'ΚΑΙΣΑΡΙΟΥ',980),(5697,'ΚΑΛΙΑΝΩΝ',980),(5698,'ΚΑΣΤΑΝΕΑΣ',980),(5699,'ΚΕΦΑΛΑΡΙΟΥ',980),(5700,'ΚΥΛΛΗΝΗΣ',980),(5701,'ΛΑΥΚΑΣ',980),(5702,'ΣΤΥΜΦΑΛΙΑΣ',980),(5703,'ΨΑΡΙΟΥ',980),(5704,'ΑΡΧΑΙΑΣ ΦΕΝΕΟΥ',981),(5705,'ΓΚΟΥΡΑΣ',981),(5706,'ΚΑΤΩ ΤΑΡΣΟΥ',981),(5707,'ΜΑΤΙΟΥ',981),(5708,'ΜΕΣΙΝΟΥ',981),(5709,'ΜΟΣΙΑΣ',981),(5710,'ΠΑΝΟΡΑΜΑΤΟΣ',981),(5711,'ΣΤΕΝΟΥ',981),(5712,'ΦΕΝΕΟΥ',981),(5713,'ΔΡΥΜΟΥ',982),(5714,'ΕΞΩ ΝΥΜΦΙΟΥ',982),(5715,'ΚΟΚΚΑΛΑΣ',982),(5716,'ΚΟΤΡΩΝΑ',982),(5717,'ΛΑΓΙΑΣ',982),(5718,'ΠΥΡΡΙΧΟΥ',982),(5719,'ΑΓΙΟΥ ΒΑΣΙΛΕΙΟΥ',983),(5720,'ΑΙΓΙΩΝ',983),(5721,'ΓΥΘΕΙΟΥ',983),(5722,'ΔΡΟΣΟΠΗΓΗΣ',983),(5723,'ΚΑΛΥΒΙΩΝ',983),(5724,'ΚΑΡΒΕΛΑ',983),(5725,'ΚΑΡΥΟΥΠΟΛΕΩΣ',983),(5726,'ΚΟΝΑΚΙΩΝ',983),(5727,'ΚΡΗΝΗΣ',983),(5728,'ΛΥΓΕΡΕΑ',983),(5729,'ΜΑΡΑΘΕΑΣ',983),(5730,'ΜΥΡΣΙΝΗΣ',983),(5731,'ΝΕΟΧΩΡΙΟΥ',983),(5732,'ΠΛΑΤΑΝΟΥ',983),(5733,'ΣΙΔΗΡΟΚΑΣΤΡΟΥ',983),(5734,'ΣΚΑΜΝΑΚΙΟΥ',983),(5735,'ΣΚΟΥΤΑΡΙΟΥ',983),(5736,'ΧΩΣΙΑΡΙΟΥ',983),(5737,'ΑΛΙΚΩΝ',984),(5738,'ΑΝΩ ΜΠΟΥΛΑΡΙΩΝ',984),(5739,'ΑΡΕΟΠΟΛΕΩΣ',984),(5740,'ΒΑΘΕΙΑΣ',984),(5741,'ΒΑΧΟΥ',984),(5742,'ΓΕΡΜΑΣ',984),(5743,'ΓΕΡΟΛΙΜΕΝΟΣ',984),(5744,'ΔΡΥΑΛΟΥ',984),(5745,'ΚΑΡΕΑΣ',984),(5746,'ΚΕΛΕΦΑ',984),(5747,'ΚΟΙΤΑΣ',984),(5748,'ΚΟΥΝΟΥ',984),(5749,'ΚΡΥΟΝΕΡΙΟΥ',984),(5750,'ΜΙΝΑΣ',984),(5751,'ΝΕΟΥ ΟΙΤΥΛΟΥ',984),(5752,'ΟΙΤΥΛΟΥ',984),(5753,'ΠΥΡΓΟΥ ΔΙΡΟΥ',984),(5754,'ΤΣΙΚΚΑΛΙΩΝ',984),(5755,'ΑΓΙΟΥ ΝΙΚΟΛΑΟΥ',985),(5756,'ΑΡΧΟΝΤΙΚΟΥ',985),(5757,'ΚΑΣΤΑΝΙΑΣ',985),(5758,'ΚΟΚΚΙΝΩΝ ΛΟΥΡΙΩΝ',985),(5759,'ΜΕΛΙΣΣΗΣ',985),(5760,'ΜΕΛΙΤΙΝΗΣ',985),(5761,'ΠΑΛΑΙΟΒΡΥΣΗΣ',985),(5762,'ΠΕΤΡΙΝΑΣ',985),(5763,'ΠΡΟΣΗΛΙΟΥ',985),(5764,'ΣΕΛΕΓΟΥΔΙΟΥ',985),(5765,'ΕΛΑΦΟΝΗΣΟΥ',986),(5766,'ΑΛΕΠΟΧΩΡΙΟΥ',987),(5767,'ΓΕΡΑΚΙΟΥ',987),(5768,'ΚΑΛΛΙΘΕΑΣ',987),(5769,'ΚΑΡΙΤΣΗΣ',987),(5770,'ΑΓΙΟΥ ΙΩΑΝΝΗ',988),(5771,'ΑΣΤΕΡΙΟΥ',988),(5772,'ΒΛΑΧΙΩΤΗ',988),(5773,'ΓΛΥΚΟΒΡΥΣΗΣ',988),(5774,'ΓΟΥΒΩΝ',988),(5775,'ΕΛΟΥΣ',988),(5776,'ΜΥΡΤΕΑΣ',988),(5777,'ΒΑΣΙΛΑΚΙΟΥ',989),(5778,'ΔΑΦΝΙΟΥ',989),(5779,'ΚΡΟΚΕΩΝ',989),(5780,'ΛΑΓΙΟΥ',989),(5781,'ΑΓΙΟΥ ΔΗΜΗΤΡΙΟΥ ΖΑΡΑΚΟΣ',990),(5782,'ΑΠΙΔΕΑ',990),(5783,'ΚΡΕΜΑΣΤΗΣ',990),(5784,'ΝΙΑΤΩΝ',990),(5785,'ΒΡΟΝΤΑΜΑ',991),(5786,'ΓΡΑΜΜΟΥΣΗΣ',991),(5787,'ΛΕΗΜΟΝΑ',991),(5788,'ΠΕΡΙΣΤΕΡΙΟΥ',991),(5789,'ΣΚΑΛΑΣ',991),(5790,'ΣΤΕΦΑΝΙΑΣ',991),(5791,'ΑΣΩΠΟΥ',992),(5792,'ΔΑΙΜΟΝΙΑΣ',992),(5793,'ΠΑΠΑΔΙΑΝΙΚΩΝ',992),(5794,'ΦΟΙΝΙΚΙΟΥ',992),(5795,'ΑΓΙΟΥ ΓΕΩΡΓΙΟΥ',993),(5796,'ΑΓΙΟΥ ΝΙΚΟΛΑΟΥ ΒΟΙΩΝ',993),(5797,'ΑΓΙΩΝ ΑΠΟΣΤΟΛΩΝ',993),(5798,'ΑΝΩ ΚΑΣΤΑΝΕΑΣ',993),(5799,'ΒΕΛΑΝΙΔΙΩΝ',993),(5800,'ΕΛΙΚΑΣ',993),(5801,'ΚΑΜΠΟΥ',993),(5802,'ΚΑΣΤΑΝΕΑΣ ΕΠΙΔΑΥΡΟΥ ΛΙΜΗΡΑΣ',993),(5803,'ΛΑΧΙΟΥ',993),(5804,'ΜΕΣΟΧΩΡΙΟΥ',993),(5805,'ΝΕΑΠΟΛΕΩΣ',993),(5806,'ΠΑΝΤΑΝΑΣΣΗΣ',993),(5807,'ΦΑΡΑΚΛΟΥ',993),(5808,'ΙΕΡΑΚΟΣ',994),(5809,'ΚΥΠΑΡΙΣΣΙΟΥ',994),(5810,'ΛΑΜΠΟΚΑΜΠΟΥ',994),(5811,'ΡΕΙΧΕΑΣ',994),(5812,'ΧΑΡΑΚΟΣ',994),(5813,'ΕΛΑΙΑΣ',995),(5814,'ΚΟΥΠΙΩΝ',995),(5815,'ΜΕΤΑΜΟΡΦΩΣΕΩΣ',995),(5816,'ΜΟΛΑΩΝ',995),(5817,'ΠΑΚΙΩΝ',995),(5818,'ΣΥΚΕΑΣ',995),(5819,'ΑΓΓΕΛΩΝΑΣ',996),(5820,'ΑΓΙΟΥ ΔΗΜΗΤΡΙΟΥ ΜΟΝΕΜΒΑΣΙΑΣ',996),(5821,'ΑΓΙΟΥ ΙΩΑΝΝΟΥ',996),(5822,'ΑΓΙΟΥ ΝΙΚΟΛΑΟΥ ΜΟΝΕΜΒΑΣΙΑΣ',996),(5823,'ΒΕΛΙΩΝ',996),(5824,'ΚΟΥΛΕΝΤΙΩΝ',996),(5825,'ΛΙΡΩΝ',996),(5826,'ΜΟΝΕΜΒΑΣΙΑΣ',996),(5827,'ΝΟΜΙΩΝ',996),(5828,'ΤΑΛΑΝΤΩΝ',996),(5829,'ΑΓΙΩΝ ΑΝΑΡΓΥΡΩΝ',997),(5830,'ΑΓΡΙΑΝΩΝ',997),(5831,'ΓΚΟΡΙΤΣΑΣ',997),(5832,'ΚΑΛΛΟΝΗΣ',997),(5833,'ΚΕΦΑΛΑ',997),(5834,'ΠΛΑΤΑΝΑΣ',997),(5835,'ΣΚΟΥΡΑΣ',997),(5836,'ΧΡΥΣΑΦΩΝ',997),(5837,'ΚΑΡΥΩΝ',998),(5838,'ΑΓΙΑΣ ΕΙΡΗΝΗΣ',999),(5839,'ΑΓΙΟΥ ΙΩΑΝΝΟΥ',999),(5840,'ΑΝΑΒΡΥΤΗΣ',999),(5841,'ΛΟΓΓΑΣΤΡΑΣ',999),(5842,'ΜΑΓΟΥΛΑΣ',999),(5843,'ΜΥΣΤΡΑ',999),(5844,'ΠΑΡΟΡΕΙΟΥ',999),(5845,'ΣΟΥΣΤΙΑΝΩΝ',999),(5846,'ΤΡΥΠΗΣ',999),(5847,'ΒΑΜΒΑΚΟΥΣ',1000),(5848,'ΒΑΡΒΙΤΣΗΣ',1000),(5849,'ΒΑΣΑΡΑ',1000),(5850,'ΒΟΥΤΙΑΝΩΝ',1000),(5851,'ΒΡΕΣΘΕΝΩΝ',1000),(5852,'ΘΕΟΛΟΓΟΥ',1000),(5853,'ΚΟΝΙΔΙΤΣΗΣ',1000),(5854,'ΣΕΛΛΑΣΙΑΣ',1000),(5855,'ΑΓΙΟΥ ΚΩΝΣΤΑΝΤΙΝΟΥ',1001),(5856,'ΑΓΟΡΙΑΝΗΣ',1001),(5857,'ΑΛΕΥΡΟΥΣ',1001),(5858,'ΒΟΡΔΟΝΙΑΣ',1001),(5859,'ΓΕΩΡΓΙΤΣΙΟΥ',1001),(5860,'ΚΑΣΤΟΡΕΙΟΥ',1001),(5861,'ΛΟΓΚΑΝΙΚΟΥ',1001),(5862,'ΠΕΛΛΑΝΑΣ',1001),(5863,'ΠΕΡΙΒΟΛΙΩΝ',1001),(5864,'ΑΜΥΚΛΩΝ',1002),(5865,'ΑΦΙΣΙΟΥ',1002),(5866,'ΚΑΛΥΒΙΩΝ ΣΟΧΑΣ',1002),(5867,'ΚΛΑΔΑ',1002),(5868,'ΣΠΑΡΤΙΑΤΩΝ',1002),(5869,'ΑΝΩΓΕΙΩΝ',1003),(5870,'ΑΡΝΗΣ',1003),(5871,'ΒΑΣΙΛΙΚΗΣ',1003),(5872,'ΓΟΡΑΝΩΝ',1003),(5873,'ΚΑΜΙΝΙΩΝ',1003),(5874,'ΛΕΥΚΟΧΩΜΑΤΟΣ',1003),(5875,'ΞΗΡΟΚΑΜΠΙΟΥ',1003),(5876,'ΠΑΛΑΙΟΠΑΝΑΓΙΑΣ',1003),(5877,'ΠΟΛΟΒΙΤΣΗΣ',1003),(5878,'ΠΟΤΑΜΙΑΣ',1003),(5879,'ΣΠΑΡΤΙΑΣ',1003),(5880,'ΤΡΑΠΕΖΟΝΤΗΣ',1003),(5881,'ΑΒΙΑΣ',1004),(5882,'ΑΛΤΟΜΙΡΩΝ',1004),(5883,'ΔΟΛΩΝ',1004),(5884,'ΚΑΜΠΟΥ',1004),(5885,'ΚΕΝΤΡΟΥ',1004),(5886,'ΠΗΓΑΔΙΩΝ',1004),(5887,'ΣΤΑΥΡΟΠΗΓΙΟΥ',1004),(5888,'ΣΩΤΗΡΙΑΝΙΚΩΝ',1004),(5889,'ΑΓΙΟΥ ΝΙΚΟΛΑΟΥ',1005),(5890,'ΑΓΙΟΥ ΝΙΚΩΝΟΣ',1005),(5891,'ΕΞΩΧΩΡΙΟΥ',1005),(5892,'ΘΑΛΑΜΩΝ',1005),(5893,'ΚΑΡΔΑΜΥΛΗΣ',1005),(5894,'ΚΑΡΥΟΒΟΥΝΙΟΥ',1005),(5895,'ΚΑΣΤΑΝΕΑΣ',1005),(5896,'ΛΑΓΚΑΔΑΣ',1005),(5897,'ΜΗΛΕΑΣ',1005),(5898,'ΝΕΟΧΩΡΙΟΥ',1005),(5899,'ΝΟΜΙΤΣΗ',1005),(5900,'ΠΛΑΤΣΗΣ',1005),(5901,'ΠΡΟΑΣΤΙΟΥ',1005),(5902,'ΠΡΟΣΗΛΙΟΥ',1005),(5903,'ΠΥΡΓΟΥ ΚΑΛΑΜΩΝ',1005),(5904,'ΡΙΓΚΛΙΩΝ',1005),(5905,'ΣΑΪΔΟΝΑΣ',1005),(5906,'ΤΡΑΧΗΛΑΣ',1005),(5907,'ΤΣΕΡΙΩΝ',1005),(5908,'ΑΛΩΝΙΩΝ',1006),(5909,'ΑΜΜΟΥ',1006),(5910,'ΑΝΕΜΟΜΥΛΟΥ',1006),(5911,'ΑΡΙΟΣ',1006),(5912,'ΑΡΙΟΧΩΡΙΟΥ',1006),(5913,'ΑΣΠΡΟΠΟΥΛΙΑΣ',1006),(5914,'ΑΓΙΟΥ ΦΛΩΡΟΥ',1007),(5915,'ΑΓΡΙΛΟΥ',1007),(5916,'ΑΡΦΑΡΩΝ',1007),(5917,'ΒΕΛΑΝΙΔΙΑΣ',1007),(5918,'ΒΡΟΜΟΒΡΥΣΗΣ',1007),(5919,'ΠΗΔΗΜΑΤΟΣ',1007),(5920,'ΠΛΑΤΕΟΣ',1007),(5921,'ΣΤΑΜΑΤΙΝΟΥ',1007),(5922,'ΑΙΘΑΙΑΣ',1008),(5923,'ΑΜΦΕΙΑΣ',1008),(5924,'ΑΝΘΕΙΑΣ',1008),(5925,'ΘΟΥΡΙΑΣ',1008),(5926,'ΜΙΚΡΟΜΑΝΗΣ',1008),(5927,'ΠΟΛΙΑΝΗΣ',1008),(5928,'ΑΛΑΓΟΝΙΑΣ',1009),(5929,'ΑΝΤΙΚΑΛΑΜΟΥ',1009),(5930,'ΑΡΤΕΜΙΣΙΑΣ',1009),(5931,'ΑΣΠΡΟΧΩΜΑΤΟΣ',1009),(5932,'ΒΕΡΓΑΣ',1009),(5933,'ΕΛΑΙΟΧΩΡΙΟΥ',1009),(5934,'ΚΑΛΑΜΑΤΑΣ',1009),(5935,'ΚΑΡΒΕΛΙΟΥ',1009),(5936,'ΛΑΔΑ',1009),(5937,'ΛΑΙΙΚΩΝ',1009),(5938,'ΜΙΚΡΑΣ ΜΑΝΤΙΝΕΙΑΣ',1009),(5939,'ΝΕΔΟΥΣΗΣ',1009),(5940,'ΠΗΓΩΝ',1009),(5941,'ΣΠΕΡΧΟΓΕΙΑΣ',1009),(5942,'ΑΔΡΙΑΝΗΣ',1010),(5943,'ΛΟΓΓΑΣ',1010),(5944,'ΜΗΛΙΤΣΗΣ',1010),(5945,'ΝΕΑΣ ΚΟΡΩΝΗΣ',1010),(5946,'ΧΡΑΝΩΝ',1010),(5947,'ΑΓΡΙΛΙΑΣ',1011),(5948,'ΑΜΦΙΘΕΑΣ',1011),(5949,'ΑΝΔΡΟΥΣΗΣ',1011),(5950,'ΕΛΛΗΝΟΕΚΚΛΗΣΙΑΣ',1011),(5951,'ΕΥΑΣ',1011),(5952,'ΚΑΛΑΜΑΡΑ',1011),(5953,'ΚΑΛΟΓΕΡΟΡΡΑΧΗΣ',1011),(5954,'ΜΑΓΓΑΝΙΑΚΟΥ',1011),(5955,'ΠΟΛΥΛΟΦΟΥ',1011),(5956,'ΑΡΙΣΤΟΜΕΝΟΥΣ',1012),(5957,'ΒΟΥΤΑΙΝΗΣ',1012),(5958,'ΔΙΟΔΙΩΝ',1012),(5959,'ΚΕΦΑΛΟΒΡΥΣΟΥ',1012),(5960,'ΚΟΥΤΙΦΑΡΗ',1012),(5961,'ΜΑΝΕΣΗ',1012),(5962,'ΠΕΛΕΚΑΝΑΔΑΣ',1012),(5963,'ΠΛΑΤΑΝΟΒΡΥΣΗΣ',1012),(5964,'ΠΟΥΛΙΤΣΙΟΥ',1012),(5965,'ΣΤΕΡΝΑΣ',1012),(5966,'ΣΤΡΕΦΙΟΥ',1012),(5967,'ΒΛΑΣΗ',1013),(5968,'ΚΟΥΡΤΑΚΙΟΥ',1013),(5969,'ΜΗΛΙΩΤΙΟΥ',1013),(5970,'ΠΕΤΡΙΤΣΙΟΥ',1013),(5971,'ΧΑΡΑΥΓΗΣ',1013),(5972,'ΧΑΤΖΗ',1013),(5973,'ΑΡΙΣΤΟΔΗΜΕΙΟΥ',1014),(5974,'ΑΡΣΙΝΟΗΣ',1014),(5975,'ΑΡΧΑΙΑΣ ΜΕΣΣΗΝΗΣ',1014),(5976,'ΒΑΛΥΡΑΣ',1014),(5977,'ΖΕΡΜΠΙΣΙΩΝ',1014),(5978,'ΚΕΦΑΛΙΝΟΥ',1014),(5979,'ΛΑΜΠΑΙΝΗΣ',1014),(5980,'ΡΕΥΜΑΤΙΑΣ',1014),(5981,'ΑΒΡΑΜΙΟΥ',1015),(5982,'ΑΝΑΛΗΨΕΩΣ',1015),(5983,'ΒΕΛΙΚΑΣ',1015),(5984,'ΚΑΡΤΕΡΟΛΙΟΥ',1015),(5985,'ΛΕΥΚΟΧΩΡΑΣ',1015),(5986,'ΛΥΚΟΤΡΑΦΟΥ',1015),(5987,'ΜΑΔΕΝΗΣ',1015),(5988,'ΜΑΥΡΟΜΜΑΤΙΟΥ ΠΑΜΙΣΟΥ',1015),(5989,'ΜΕΣΣΗΝΗΣ',1015),(5990,'ΝΕΟΧΩΡΙΟΥ ΑΡΙΣΤΟΜΕΝΟΥΣ',1015),(5991,'ΠΙΛΑΛΙΣΤΡΑΣ',1015),(5992,'ΠΙΠΕΡΙΤΣΗΣ',1015),(5993,'ΣΠΙΤΑΛΙΟΥ',1015),(5994,'ΤΡΙΟΔΟΥ',1015),(5995,'ΑΧΛΑΔΟΧΩΡΙΟΥ',1016),(5996,'ΔΑΡΑ',1016),(5997,'ΔΡΟΣΙΑΣ',1016),(5998,'ΚΑΛΟΧΩΡΙΟΥ',1016),(5999,'ΚΑΡΠΟΦΟΡΩΝ',1016),(6000,'ΚΑΣΤΑΝΙΩΝ',1016),(6001,'ΚΟΚΚΙΝΟΥ',1016),(6002,'ΛΥΚΙΣΣΗΣ',1016),(6003,'ΜΑΘΙΑΣ',1016),(6004,'ΝΕΡΟΜΥΛΟΥ',1016),(6005,'ΠΑΝΙΠΕΡΙΟΥ',1016),(6006,'ΠΕΤΑΛΙΔΙΟΥ',1016),(6007,'ΔΡΑΪΝΑΣ',1017),(6008,'ΚΛΗΜΑΤΟΣ',1017),(6009,'ΚΟΡΟΜΗΛΕΑΣ',1017),(6010,'ΠΑΛΑΙΟΚΑΣΤΡΟΥ',1017),(6011,'ΤΡΙΚΟΡΦΟΥ',1017),(6012,'ΑΓΡΙΛΟΒΟΥΝΟΥ',1018),(6013,'ΑΝΩ ΜΕΛΠΕΙΑΣ',1018),(6014,'ΔΑΣΟΧΩΡΙΟΥ',1018),(6015,'ΔΕΣΥΛΛΑ',1018),(6016,'ΔΙΑΒΟΛΙΤΣΙΟΥ',1018),(6017,'ΗΛΕΚΤΡΑΣ',1018),(6018,'ΚΑΡΝΑΣΙΟΥ',1018),(6019,'ΚΑΤΩ ΜΕΛΠΕΙΑΣ',1018),(6020,'ΚΕΝΤΡΙΚΟΥ',1018),(6021,'ΚΩΝΣΤΑΝΤΙΝΩΝ',1018),(6022,'ΜΑΛΤΑΣ',1018),(6023,'ΜΑΝΔΡΑΣ',1018),(6024,'ΜΑΝΤΖΑΡΙΟΥ',1018),(6025,'ΠΑΡΑΠΟΥΓΚΙΟΥ',1018),(6026,'ΑΝΩ ΔΩΡΙΟΥ',1019),(6027,'ΒΑΣΙΛΙΚΟΥ',1019),(6028,'ΔΩΡΙΟΥ',1019),(6029,'ΚΟΚΛΑ',1019),(6030,'ΚΟΥΒΕΛΑ',1019),(6031,'ΜΑΛΘΗΣ',1019),(6032,'ΧΑΛΚΙΑ',1019),(6033,'ΧΡΥΣΟΧΩΡΙΟΥ',1019),(6034,'ΨΑΡΙΟΥ',1019),(6035,'ΑΓΙΟΥ ΣΩΣΤΟΥ',1020),(6036,'ΑΜΠΕΛΙΩΝΑΣ',1020),(6037,'ΚΑΚΑΛΕΤΡΙΟΥ',1020),(6038,'ΝΕΔΑΣ',1020),(6039,'ΠΕΤΡΑΣ',1020),(6040,'ΣΚΛΗΡΟΥ',1020),(6041,'ΣΤΑΣΙΜΟΥ',1020),(6042,'ΣΥΡΡΙΖΟΥ',1020),(6043,'ΑΝΘΟΥΣΗΣ',1021),(6044,'ΖΕΥΓΟΛΑΤΕΙΟΥ',1021),(6045,'ΚΑΛΛΙΡΡΟΗΣ',1021),(6046,'ΜΑΓΟΥΛΑΣ',1021),(6047,'ΜΕΛΙΓΑΛΑ',1021),(6048,'ΜΙΛΑ',1021),(6049,'ΝΕΟΧΩΡΙΟΥ ΙΘΩΜΗΣ',1021),(6050,'ΠΟΛΙΧΝΗΣ',1021),(6051,'ΣΚΑΛΑΣ',1021),(6052,'ΣΤΕΝΥΚΛΑΡΟΥ',1021),(6053,'ΤΣΟΥΚΑΛΑΙΙΚΩΝ',1021),(6054,'ΑΝΔΑΝΙΑΣ',1022),(6055,'ΚΑΛΥΒΙΩΝ',1022),(6056,'ΚΑΤΣΑΡΟΥ',1022),(6057,'ΛΟΥΤΡΟΥ',1022),(6058,'ΜΕΡΟΠΗΣ',1022),(6059,'ΟΙΧΑΛΙΑΣ',1022),(6060,'ΠΕΥΚΟΥ',1022),(6061,'ΣΙΑΜΟΥ',1022),(6062,'ΣΟΛΑΚΙΟΥ',1022),(6063,'ΦΙΛΙΑ',1022),(6064,'ΑΚΡΙΤΟΧΩΡΙΟΥ',1023),(6065,'ΒΑΣΙΛΙΤΣΙΟΥ',1023),(6066,'ΒΟΥΝΑΡΙΩΝ',1023),(6067,'ΚΑΠΛΑΝΙΟΥ',1023),(6068,'ΚΟΜΠΩΝ',1023),(6069,'ΚΟΡΩΝΗΣ',1023),(6070,'ΥΑΜΕΙΑΣ',1023),(6071,'ΦΑΛΑΝΘΗΣ',1023),(6072,'ΧΑΡΟΚΟΠΙΟΥ',1023),(6073,'ΧΡΥΣΟΚΕΛΛΑΡΙΑΣ',1023),(6074,'ΕΥΑΓΓΕΛΙΣΜΟΥ',1024),(6075,'ΚΑΙΝΟΥΡΓΙΟΥ ΧΩΡΙΟΥ',1024),(6076,'ΛΑΧΑΝΑΔΑΣ',1024),(6077,'ΜΕΘΩΝΗΣ',1024),(6078,'ΦΟΙΝΙΚΗΣ',1024),(6079,'ΦΟΙΝΙΚΟΥΝΤΟΣ',1024),(6080,'ΑΜΠΕΛΟΦΥΤΟΥ',1025),(6081,'ΚΟΡΥΦΑΣΙΟΥ',1025),(6082,'ΜΕΤΑΞΑΔΑΣ',1025),(6083,'ΜΥΡΣΙΝΟΧΩΡΙΟΥ',1025),(6084,'ΠΑΛΑΙΟΥ ΛΟΥΤΡΟΥ',1025),(6085,'ΡΩΜΑΝΟΥ',1025),(6086,'ΦΛΕΣΙΑΔΟΣ',1025),(6087,'ΧΩΡΑΣ',1025),(6088,'ΒΛΑΧΟΠΟΥΛΟΥ',1026),(6089,'ΜΑΝΙΑΚΙΟΥ',1026),(6090,'ΜΑΡΓΕΛΙΟΥ',1026),(6091,'ΜΕΤΑΜΟΡΦΩΣΕΩΣ',1026),(6092,'ΠΑΠΑΦΛΕΣΣΑ',1026),(6093,'ΑΜΠΕΛΟΚΗΠΩΝ',1027),(6094,'ΓΛΥΦΑΔΑΣ',1027),(6095,'ΙΚΛΑΙΝΗΣ',1027),(6096,'ΚΑΛΛΙΘΕΑΣ',1027),(6097,'ΚΥΝΗΓΟΥ',1027),(6098,'ΜΕΣΟΧΩΡΙΟΥ',1027),(6099,'ΠΑΠΠΟΥΛΙΩΝ',1027),(6100,'ΠΗΔΑΣΟΥ',1027),(6101,'ΠΥΛΑΣ',1027),(6102,'ΠΥΛΟΥ',1027),(6103,'ΧΩΜΑΤΑΔΑΣ',1027),(6104,'ΚΟΥΚΚΟΥΝΑΡΑΣ',1028),(6105,'ΚΡΕΜΜΥΔΙΩΝ',1028),(6106,'ΜΕΣΟΠΟΤΑΜΟΥ',1028),(6107,'ΣΟΥΛΗΝΑΡΙΟΥ',1028),(6108,'ΧΑΝΔΡΙΝΟΥ',1028),(6109,'ΑΓΡΙΛΙΑΣ',1029),(6110,'ΑΕΤΟΥ',1029),(6111,'ΑΡΤΙΚΙΟΥ',1029),(6112,'ΓΛΥΚΟΡΡΙΖΙΟΥ',1029),(6113,'ΚΑΜΑΡΙΟΥ',1029),(6114,'ΚΕΦΑΛΟΒΡΥΣΗΣ',1029),(6115,'ΚΟΠΑΝΑΚΙΟΥ',1029),(6116,'ΚΡΥΟΝΕΡΙΟΥ',1029),(6117,'ΜΟΝΑΣΤΗΡΙΟΥ',1029),(6118,'ΠΟΛΥΘΕΑΣ',1029),(6119,'ΣΙΤΟΧΩΡΙΟΥ',1029),(6120,'ΑΓΑΛΙΑΝΗΣ',1030),(6121,'ΑΥΛΩΝΟΣ',1030),(6122,'ΒΑΝΑΔΑΣ',1030),(6123,'ΕΛΑΙΑΣ',1030),(6124,'ΚΑΛΙΤΣΑΙΝΗΣ',1030),(6125,'ΚΑΛΟΥ ΝΕΡΟΥ',1030),(6126,'ΚΑΡΥΩΝ',1030),(6127,'ΠΛΑΤΑΝΙΩΝ',1030),(6128,'ΠΡΟΔΡΟΜΟΥ',1030),(6129,'ΣΙΔΗΡΟΚΑΣΤΡΟΥ',1030),(6130,'ΒΑΛΤΑΣ',1031),(6131,'ΓΑΡΓΑΛΙΑΝΩΝ',1031),(6132,'ΛΕΥΚΗΣ',1031),(6133,'ΜΑΡΑΘΟΠΟΛΕΩΣ',1031),(6134,'ΜΟΥΖΑΚΙΟΥ',1031),(6135,'ΠΥΡΓΟΥ',1031),(6136,'ΦΛΟΚΑΣ',1031),(6137,'ΑΡΜΕΝΙΩΝ',1032),(6138,'ΒΡΥΣΩΝ',1032),(6139,'ΚΥΠΑΡΙΣΣΙΑΣ',1032),(6140,'ΜΟΥΡΙΑΤΑΔΑΣ',1032),(6141,'ΜΥΡΟΥ',1032),(6142,'ΞΗΡΟΚΑΜΠΟΥ',1032),(6143,'ΠΕΡΔΙΚΟΝΕΡΙΟΥ',1032),(6144,'ΡΑΧΩΝ',1032),(6145,'ΣΠΗΛΙΑΣ',1032),(6146,'ΣΤΑΣΙΟΥ',1032),(6147,'ΦΑΡΑΚΛΑΔΑΣ',1032),(6148,'ΚΑΛΟΓΕΡΕΣΙΟΥ',1033),(6149,'ΛΑΝΤΖΟΥΝΑΤΟΥ',1033),(6150,'ΛΥΚΟΥΔΕΣΙΟΥ',1033),(6151,'ΡΑΠΤΟΠΟΥΛΟΥ',1033),(6152,'ΡΟΔΙΑΣ',1033),(6153,'ΣΕΛΛΑ',1033),(6154,'ΤΡΙΠΥΛΑΣ',1033),(6155,'ΕΞΟΧΙΚΟΥ',1034),(6156,'ΜΑΛΗΣ',1034),(6157,'ΠΛΑΤΗΣ',1034),(6158,'ΦΙΛΙΑΤΡΩΝ',1034),(6159,'ΧΑΛΑΖΟΝΙΟΥ',1034),(6160,'ΧΡΙΣΤΙΑΝΟΥΠΟΛΕΩΣ',1034);

CREATE TABLE IF NOT EXISTS `apk`.`kalikratis` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `decentralized_administration_id` INT UNSIGNED NOT NULL,
  `region_id` INT UNSIGNED NULL DEFAULT NULL,
  `regional_unit_id` INT UNSIGNED NULL DEFAULT NULL,
  `municipality_id` INT UNSIGNED NULL DEFAULT NULL,
  `municipal_unit_id` INT UNSIGNED NULL DEFAULT NULL,
  `community_id` INT UNSIGNED NULL DEFAULT NULL,
  `location_id_location` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `idx_kalikratis_decentralized_administration_id` (`decentralized_administration_id`),
  INDEX `idx_kalikratis_region_id` (`region_id`),
  INDEX `idx_kalikratis_regional_unit_id` (`regional_unit_id`),
  INDEX `idx_kalikratis_municipality_id` (`municipality_id`),
  INDEX `idx_kalikratis_municipal_unit_id` (`municipal_unit_id`),
  INDEX `idx_kalikratis_community_id` (`community_id`),
  INDEX `idx_kalikratis_location_id` (`location_id_location`),
  CONSTRAINT `fk_kalikratis_decentralized_administration`
    FOREIGN KEY (`decentralized_administration_id`)
    REFERENCES `apk`.`decentralized_administration` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_kalikratis_region`
    FOREIGN KEY (`region_id`)
    REFERENCES `apk`.`region` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_kalikratis_regional_unit`
    FOREIGN KEY (`regional_unit_id`)
    REFERENCES `apk`.`regional_units` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_kalikratis_municipality`
    FOREIGN KEY (`municipality_id`)
    REFERENCES `apk`.`municipalities` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_kalikratis_municipal_unit`
    FOREIGN KEY (`municipal_unit_id`)
    REFERENCES `apk`.`municipal_units` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_kalikratis_community`
    FOREIGN KEY (`community_id`)
    REFERENCES `apk`.`communities` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_kalikratis_location`
    FOREIGN KEY (`location_id_location`)
    REFERENCES `apk`.`location` (`id_location`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE TABLE IF NOT EXISTS `apk`.`performance_area` (
  `id_area` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `area` VARCHAR(100) NOT NULL,
  `justification_performance_area` TEXT NOT NULL,
  `stoixeio_idStoixeio` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_area`),
  UNIQUE KEY `unique_area_per_stoixeio` (`area`, `stoixeio_idStoixeio`),
  INDEX `idx_area` (`area`),
  INDEX `idx_area_stoixeio_idStoixeio` (`stoixeio_idStoixeio`), 
  CONSTRAINT `chk_area_not_empty` CHECK (TRIM(area) <> ''),
  CONSTRAINT `chk_justification_not_empty` CHECK (TRIM(justification_performance_area) <> ''),
  CONSTRAINT `fk_performancearea_stoixeio`
    FOREIGN KEY (`stoixeio_idStoixeio`)
    REFERENCES `apk`.`stoixeio` (`idStoixeio`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE TABLE IF NOT EXISTS `apk`.`facilities` (
  `id_facility` INT UNSIGNED NOT NULL AUTO_INCREMENT,  
  `facility` VARCHAR(100) NOT NULL,
  `justification_facility` TEXT NOT NULL,
  `stoixeio_idStoixeio` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_facility`),
  UNIQUE KEY `unique_facility_per_stoixeio` (`facility`, `stoixeio_idStoixeio`),  
  INDEX `idx_facility` (`facility`),
  INDEX `idx_facilities_stoixeio_idStoixeio` (`stoixeio_idStoixeio`),
  CONSTRAINT `chk_facility_not_empty` CHECK (TRIM(facility) <> ''),
  CONSTRAINT `chk_justification_facility_not_empty` CHECK (TRIM(justification_facility) <> ''),
  CONSTRAINT `fk_facilities_stoixeio`
    FOREIGN KEY (`stoixeio_idStoixeio`)
    REFERENCES `apk`.`stoixeio` (`idStoixeio`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE TABLE IF NOT EXISTS `apk`.`product` (
  `id_product` INT UNSIGNED NOT NULL AUTO_INCREMENT, 
  `product` VARCHAR(100) NOT NULL,
  `justification_product` TEXT NOT NULL,
  `stoixeio_idStoixeio` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_product`),
  UNIQUE KEY `unique_product_per_stoixeio` (`product`, `stoixeio_idStoixeio`),  
  INDEX `idx_product` (`product`),
  INDEX `idx_product_stoixeio_idStoixeio` (`stoixeio_idStoixeio`), 
  CONSTRAINT `chk_product_not_empty` CHECK (TRIM(product) <> ''),
  CONSTRAINT `chk_justification_product_not_empty` CHECK (TRIM(justification_product) <> ''),
  CONSTRAINT `fk_product_stoixeio`
    FOREIGN KEY (`stoixeio_idStoixeio`)
    REFERENCES `apk`.`stoixeio` (`idStoixeio`)
    ON DELETE CASCADE  
    ON UPDATE CASCADE
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE TABLE IF NOT EXISTS `apk`.`equipment` (
  `id_equipment` INT UNSIGNED NOT NULL AUTO_INCREMENT,  
  `equipment` VARCHAR(100) NOT NULL,
  `justification_equipment` TEXT NOT NULL,
  `stoixeio_idStoixeio` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_equipment`),
  UNIQUE KEY `unique_equipment_per_stoixeio` (`equipment`, `stoixeio_idStoixeio`),  
  INDEX `idx_equipment` (`equipment`),
  INDEX `idx_equipment_stoixeio_idStoixeio` (`stoixeio_idStoixeio`),
  CONSTRAINT `chk_equipment_not_empty` CHECK (TRIM(equipment) <> ''),
  CONSTRAINT `chk_justification_equipment_not_empty` CHECK (TRIM(justification_equipment) <> ''),
  CONSTRAINT `fk_equipment_stoixeio`
    FOREIGN KEY (`stoixeio_idStoixeio`)
    REFERENCES `apk`.`stoixeio` (`idStoixeio`)
    ON DELETE CASCADE  
    ON UPDATE CASCADE
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE TABLE IF NOT EXISTS `apk`.`importance` (
  `stoixeio_idStoixeio` INT UNSIGNED NOT NULL,  
  `members` TEXT NOT NULL,
  `society` TEXT NOT NULL,
  `community` TEXT NOT NULL,
  PRIMARY KEY (`stoixeio_idStoixeio`),
  CONSTRAINT `fk_imp_stoixeio`
    FOREIGN KEY (`stoixeio_idStoixeio`)
    REFERENCES `apk`.`stoixeio` (`idStoixeio`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `chk_members_not_empty` CHECK (TRIM(members) <> ''),
  CONSTRAINT `chk_society_not_empty` CHECK (TRIM(society) <> ''),
  CONSTRAINT `chk_community_not_empty` CHECK (TRIM(community) <> '')
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE TABLE IF NOT EXISTS `apk`.`preservation` (
  `stoixeio_idStoixeio` INT UNSIGNED NOT NULL,  
  `transmission` TEXT NOT NULL,
  `existing` TEXT NOT NULL,
  `future` TEXT NOT NULL,
  PRIMARY KEY (`stoixeio_idStoixeio`),  
  CONSTRAINT `fk_preservation_stoixeio`
    FOREIGN KEY (`stoixeio_idStoixeio`)
    REFERENCES `apk`.`stoixeio` (`idStoixeio`)
    ON DELETE CASCADE  
    ON UPDATE CASCADE,
  CONSTRAINT `chk_transmission_not_empty` CHECK (TRIM(transmission) <> ''),
  CONSTRAINT `chk_existing_not_empty` CHECK (TRIM(existing) <> ''),
  CONSTRAINT `chk_future_not_empty` CHECK (TRIM(future) <> '')
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE TABLE IF NOT EXISTS `apk`.`foreas` (
  `idforeas` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `namef` VARCHAR(200) NOT NULL,
  `descriptionf` VARCHAR(600) NOT NULL,
  `email` VARCHAR(40) NOT NULL,
  `address` VARCHAR(200) NOT NULL,
  `city` VARCHAR(100) NOT NULL,
  `TK` VARCHAR(5) NOT NULL,
  `telephone` VARCHAR(20) NOT NULL,
  `website` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`idforeas`),
  UNIQUE KEY `namef` (`namef`),
  UNIQUE KEY `email` (`email`),
  INDEX `idx_city` (`city`),
  CONSTRAINT `chk_email_format`
    CHECK (`email` REGEXP '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$'),
  CONSTRAINT `chk_website_format`
    CHECK (`website` REGEXP '^(https?://[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}|www\\.[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,})$'),
  CONSTRAINT `chk_telephone_format`
    CHECK (`telephone` REGEXP '^((\\+30)?[2-9][0-9]{9}|[2-9][0-9]{9})$'),
  CONSTRAINT `chk_TK_format`
    CHECK (`TK` REGEXP '^[0-9]{5}$'),
  CONSTRAINT `chk_namef_not_empty`
    CHECK (TRIM(namef) <> ''),
  CONSTRAINT `chk_descriptionf_not_empty`
    CHECK (TRIM(descriptionf) <> ''),
  CONSTRAINT `chk_address_not_empty`
    CHECK (TRIM(address) <> ''),
  CONSTRAINT `chk_city_not_empty`
    CHECK (TRIM(city) <> '')  
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE TABLE IF NOT EXISTS `apk`.`stoixeio_foreas` (
  `stoixeio_id` INT UNSIGNED NOT NULL,
  `foreas_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`stoixeio_id`, `foreas_id`),
  INDEX `idx_stoixeio_id` (`stoixeio_id`),
  INDEX `idx_foreas_id` (`foreas_id`),
  CONSTRAINT `fk_stoixeio_id`
    FOREIGN KEY (`stoixeio_id`)
    REFERENCES `apk`.`stoixeio` (`idStoixeio`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_foreas_id`
    FOREIGN KEY (`foreas_id`)
    REFERENCES `apk`.`foreas` (`idforeas`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE TABLE IF NOT EXISTS `apk`.`fields_apk` (
  `idfields_apk` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `field_apk` ENUM('προφορικές παραδόσεις και εκφράσεις', 'επιτελεστικές τέχνες', 'κοινωνικές πρακτικές-τελετουργίες-εορταστικές εκδηλώσεις', 'γνώσεις και πρακτικές που αφορούν τη φύση και το σύμπαν', 'τεχνογνωσία που συνδέεται με την παραδοσιακή χειροτεχνία', 'άλλο') NOT NULL,
  PRIMARY KEY (`idfields_apk`),
  UNIQUE INDEX `field_apk_unique_idx` (`field_apk`)  
  )
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE TABLE IF NOT EXISTS `apk`.`stoixeio_fields_apk` (
  `stoixeio_idStoixeio` INT UNSIGNED NOT NULL,
  `fields_apk_idfields_apk` INT UNSIGNED NOT NULL,
  `justification` TEXT DEFAULT NULL, 
  PRIMARY KEY (`stoixeio_idStoixeio`, `fields_apk_idfields_apk`),
  INDEX `fk_stoixeio_fields_apk_stoixeio_idx` (`stoixeio_idStoixeio`),
  INDEX `fk_stoixeio_fields_apk_fields_apk_idx` (`fields_apk_idfields_apk`),
  CONSTRAINT `fk_stoixeio_fields_apk_stoixeio`
    FOREIGN KEY (`stoixeio_idStoixeio`)
    REFERENCES `apk`.`stoixeio` (`idStoixeio`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_stoixeio_fields_apk_fields_apk`
    FOREIGN KEY (`fields_apk_idfields_apk`)
    REFERENCES `apk`.`fields_apk` (`idfields_apk`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE TABLE IF NOT EXISTS `apk`.`evidence` (
  `id_evidence` INT UNSIGNED AUTO_INCREMENT NOT NULL,
  `category` ENUM('video', 'sounds', 'images', 'files', 'link', 'maps') NOT NULL,
  `file_data` LONGBLOB DEFAULT NULL,        
  `file_name` VARCHAR(255) NOT NULL,   
  `file_type` VARCHAR(100) NOT NULL, 
  `file_size` BIGINT NOT NULL,          
  `mime_type` VARCHAR(127) NOT NULL,     
  `file_hash` VARCHAR(64) NOT NULL,      
  `date_of_entry` DATE NOT NULL,
  `who_uploaded_it` VARCHAR(45) NOT NULL,
  `stoixeio_idStoixeio` INT UNSIGNED NOT NULL, 
  PRIMARY KEY (`id_evidence`),
  INDEX `idx_category` (`category`),
  INDEX `idx_date_of_entry` (`date_of_entry`),
  INDEX `idx_file_name` (`file_name`),
  UNIQUE KEY `unique_file_hash_per_stoixeio` (`stoixeio_idStoixeio`, `file_hash`),
  INDEX `idx_evidence_stoixeio_idStoixeio` (`stoixeio_idStoixeio`), 
  CONSTRAINT `chk_file_name_not_empty` CHECK (TRIM(`file_name`) <> ''),
  CONSTRAINT `chk_file_type_not_empty` CHECK (TRIM(`file_type`) <> ''),
  CONSTRAINT `chk_file_hash_not_empty` CHECK (TRIM(`file_hash`) <> ''),
  CONSTRAINT `chk_who_uploaded_it_not_empty` CHECK (TRIM(`who_uploaded_it`) <> ''),
  CONSTRAINT `chk_file_data_when_link` CHECK (
    NOT (`category` = 'link' AND `file_data` IS NOT NULL)
  ),
  CONSTRAINT `fk_evidence_stoixeio`
    FOREIGN KEY (`stoixeio_idStoixeio`)
    REFERENCES `apk`.`stoixeio` (`idStoixeio`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE TABLE IF NOT EXISTS `apk`.`user` (
  `id_user` INT UNSIGNED NOT NULL AUTO_INCREMENT,  
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `email` VARCHAR(40) NOT NULL,
  `password` VARCHAR(255) NOT NULL, 
  `address` VARCHAR(100) DEFAULT NULL,
  `telephone` VARCHAR(20) NOT NULL,
  `userrole` ENUM('user', 'admin') NOT NULL DEFAULT 'user', 
  PRIMARY KEY (`id_user`),
  UNIQUE INDEX `email_UNIQUE` (`email`),
  INDEX `idx_last_first_name` (`last_name`, `first_name`),
  INDEX `idx_userrole` (`userrole`),
  CONSTRAINT `chk_email_format_user`
    CHECK (`email` REGEXP '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$'),
  CONSTRAINT `chk_telephone_format_user`
    CHECK (`telephone` REGEXP '^((\\+30)?[2-9][0-9]{9}|[2-9][0-9]{9})$'),
  CONSTRAINT `chk_first_name_not_empty`
    CHECK (TRIM(`first_name`) <> ''),
  CONSTRAINT `chk_last_name_not_empty`
    CHECK (TRIM(`last_name`) <> ''),
  CONSTRAINT `chk_password_not_empty`
    CHECK (TRIM(`password`) <> '')
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE TABLE IF NOT EXISTS `apk`.`user_stoixeio` (
  `user_id` INT UNSIGNED NOT NULL,
  `stoixeio_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`user_id`, `stoixeio_id`),  
  INDEX `idx_user_id` (`user_id`),
  INDEX `idx_stoixeio_id` (`stoixeio_id`),
  CONSTRAINT `fk_user_stoixeio_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `apk`.`user` (`id_user`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_user_stoixeio_stoixeio`
    FOREIGN KEY (`stoixeio_id`)
    REFERENCES `apk`.`stoixeio` (`idStoixeio`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE TABLE IF NOT EXISTS `apk`.`history` (
  `id_history` INT UNSIGNED NOT NULL AUTO_INCREMENT,      
  `table_name` VARCHAR(50) NOT NULL,                     
  `stoixeio_id` INT UNSIGNED DEFAULT NULL,
  `action` ENUM('INSERT', 'UPDATE', 'DELETE') NOT NULL,    
  `changed_by` VARCHAR(255) NOT NULL,                       
  `change_date` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, 
  `changeh` TEXT NOT NULL,                                           
  PRIMARY KEY (`id_history`),
  INDEX `idx_stoixeio_idhistory` (`stoixeio_id`),
  INDEX `idx_table_name` (`table_name`),
  INDEX `idx_action` (`action`),
  INDEX `idx_change_date` (`change_date`),
  CONSTRAINT `fk_history_stoixeio`
    FOREIGN KEY (`stoixeio_id`)
    REFERENCES `apk`.`stoixeio` (`idStoixeio`)
    ON DELETE CASCADE
    ON UPDATE CASCADE
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


DELIMITER $$

CREATE TRIGGER `force_is_temporary_to_one`
BEFORE INSERT ON `stoixeio`
FOR EACH ROW
BEGIN
  SET NEW.is_temporary = 1;
END $$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER history_insert_stoixeio
AFTER INSERT ON `apk`.`stoixeio`
FOR EACH ROW
BEGIN
    DECLARE change_user VARCHAR(255);

    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;
    
    INSERT INTO `apk`.`history` 
    (table_name, stoixeio_id, action, changed_by, change_date, changeh)
    VALUES 
    ('stoixeio', NEW.idStoixeio, 'INSERT', change_user, NOW(), 
     CONCAT('Εισήχθη ένα στοιχείο με τα εξής δεδομένα: ', 
			'Όνομα: ', NEW.`name`,  
            ', Έτος Εισαγωγής: ', NEW.`year`, 
            ', Σύντομη Περιγραφή: ', NEW.`description`, 
            ', Αναλυτική Περιγραφή: ', NEW.`full_description`,
            ', Ιστορικά Στοιχεία: ', NEW.`historical_data`,
            ', Βιβλιογραφία: ', NEW.`bibliography`));
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER stoixeio_update
BEFORE UPDATE ON `apk`.`stoixeio`
FOR EACH ROW
BEGIN
	
	-- Αν το πεδίο is_temporary είναι έτοιμο να αλλάξει και η αλλαγή δεν γίνεται από το trigger
    IF OLD.is_temporary != NEW.is_temporary THEN
        -- Επιτρέπει την αλλαγή μόνο αν το πεδίο is_temporary αλλάζει σε 0 μέσω του trigger
        IF NEW.is_temporary = 0 AND OLD.is_temporary != 0 THEN
            -- Έλεγχος αν υπάρχουν πλήρη δεδομένα σε όλους τους σχετικούς πίνακες
            SET @is_complete = (
                EXISTS (SELECT 1 FROM `apk`.`stoixeio_keywords` WHERE `stoixeio_idStoixeio` = NEW.idStoixeio)
                AND EXISTS (SELECT 1 FROM `apk`.`other_names` WHERE `stoixeio_idStoixeio` = NEW.idStoixeio)
                AND EXISTS (SELECT 1 FROM `apk`.`performance_area` WHERE `stoixeio_idStoixeio` = NEW.idStoixeio)
                AND EXISTS (SELECT 1 FROM `apk`.`facilities` WHERE `stoixeio_idStoixeio` = NEW.idStoixeio)
                AND EXISTS (SELECT 1 FROM `apk`.`product` WHERE `stoixeio_idStoixeio` = NEW.idStoixeio)
                AND EXISTS (SELECT 1 FROM `apk`.`equipment` WHERE `stoixeio_idStoixeio` = NEW.idStoixeio)
                AND EXISTS (SELECT 1 FROM `apk`.`importance` WHERE `stoixeio_idStoixeio` = NEW.idStoixeio)
                AND EXISTS (SELECT 1 FROM `apk`.`preservation` WHERE `stoixeio_idStoixeio` = NEW.idStoixeio)
                AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_foreas` WHERE `stoixeio_id` = NEW.idStoixeio)
                AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_fields_apk` WHERE `stoixeio_idStoixeio` = NEW.idStoixeio)
                AND EXISTS (SELECT 1 FROM `apk`.`evidence` WHERE `stoixeio_idStoixeio` = NEW.idStoixeio)
                AND EXISTS (SELECT 1 FROM `apk`.`user_stoixeio` WHERE `stoixeio_id` = NEW.idStoixeio)
                
                AND (
                    -- Έλεγχος για locationDescription
                    (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.idStoixeio) IS NOT NULL
                    AND (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.idStoixeio) != ''
                    OR 
                    -- Αν locationDescription είναι NULL ή κενό, έλεγχος στο kalikratis για το id_location
                    EXISTS (SELECT 1 FROM `apk`.`kalikratis` WHERE `location_id_location` = (SELECT id_location FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.idStoixeio))
                )
            );

            -- Εάν όλα τα δεδομένα είναι πλήρη, επιτρέπεται η αλλαγή σε is_temporary = 0
            IF NOT @is_complete THEN
                SIGNAL SQLSTATE '45000'
                SET MESSAGE_TEXT = 'Η ενημέρωση του πεδίου is_temporary επιτρέπεται μόνο όταν τα δεδομένα είναι πλήρη σε όλους τους σχετικούς πίνακες.';
            END IF;
        ELSE
            -- Εάν η αλλαγή δεν είναι από το trigger, αποτρέπεται
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Η τιμή του πεδίου is_temporary μπορεί να αλλάξει μόνο μέσω triggers.';
        END IF;
    END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER history_update_stoixeio
AFTER UPDATE ON `apk`.`stoixeio`
FOR EACH ROW
BEGIN
    DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);

    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER(); 
    END IF;

	-- Εισαγωγή γενικής περιγραφής για το στοιχείο με το νέο όνομα
    SET change_description = CONCAT('Για το στοιχείο με όνομα "', NEW.name, '", ');

    IF OLD.name <> NEW.name THEN
        SET change_description = CONCAT(change_description, 
            'άλλαξε το όνομα από "', OLD.name, '" σε "', NEW.name, '". ');
    END IF;

    IF OLD.year <> NEW.year THEN
        SET change_description = CONCAT(change_description, 
            'άλλαξε το έτος εισαγωγής από "', OLD.year, '" σε "', NEW.year, '". ');
    END IF;

    IF OLD.description <> NEW.description THEN
        SET change_description = CONCAT(change_description, 
            'άλλαξε η σύντομη περιγραφή από "', OLD.description, '" σε "', NEW.description, '". ');
    END IF;

    IF OLD.full_description <> NEW.full_description THEN
        SET change_description = CONCAT(change_description, 
            'άλλαξε η αναλυτική περιγραφή από "', OLD.full_description, '" σε "', NEW.full_description, '". ');
    END IF;

    IF OLD.historical_data <> NEW.historical_data THEN
        SET change_description = CONCAT(change_description, 
             'άλλαξαν τα ιστορικά στοιχεία από "', OLD.historical_data, '" σε "', NEW.historical_data, '". ');
    END IF;

    IF OLD.bibliography <> NEW.bibliography THEN
        SET change_description = CONCAT(change_description, 
            'άλλαξε η βιβλιογραφία από "', OLD.bibliography, '" σε "', NEW.bibliography, '". ');
    END IF;
    
    IF OLD.is_temporary <> NEW.is_temporary THEN
		SET change_description = CONCAT(change_description, 
			'άλλαξε η κατάσταση από "', IF(OLD.is_temporary = 1, 'Προσωρινό', 'Μόνιμο'), 
			'" σε "', IF(NEW.is_temporary = 1, 'Προσωρινό', 'Μόνιμο'), '". ');
	END IF;


    -- Εισάγουμε το ιστορικό με τα πεδία που έχουν αλλάξει
    INSERT INTO `apk`.`history`
    (table_name, stoixeio_id, action, changed_by, change_date, changeh)
    VALUES 
    ('stoixeio', NEW.idStoixeio, 'UPDATE', change_user, NOW(), change_description);
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER prevent_keyword_deletion_if_unique
BEFORE DELETE ON `apk`.`keywords`
FOR EACH ROW
BEGIN
    -- Έλεγχος αν υπάρχει κάποιο στοιχείο που συνδέεται αποκλειστικά με τη λέξη-κλειδί
    IF EXISTS (
        SELECT 1
        FROM `apk`.`stoixeio_keywords` sk
        WHERE sk.keyword_id_keyword = OLD.id_keyword
        AND (
            SELECT COUNT(*) 
            FROM `apk`.`stoixeio_keywords`
            WHERE stoixeio_idStoixeio = sk.stoixeio_idStoixeio
        ) = 1
    ) THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Δεν επιτρέπεται η διαγραφή της λέξης-κλειδιού, επειδή είναι η μοναδική συσχετισμένη με κάποιο στοιχείο.';
    END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER check_if_all_data_inserted_stoixeio_keywords
AFTER INSERT ON `apk`.`stoixeio_keywords`
FOR EACH ROW
BEGIN
	
    DECLARE change_description TEXT;
	DECLARE is_complete BOOLEAN;
    DECLARE current_is_temporary BOOLEAN;
	DECLARE keyword_value VARCHAR(100);
	DECLARE stoixeio_name VARCHAR(200);
    DECLARE change_user VARCHAR(255);
    DECLARE keyword_count INT;

    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;
    
    -- Έλεγχος μέγιστου αριθμού λέξεων-κλειδιών
    SELECT COUNT(*)
    INTO keyword_count
    FROM `apk`.`stoixeio_keywords`
    WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio;

    IF keyword_count >= 30 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Το στοιχείο έχει ήδη 30 λέξεις-κλειδιά. Δεν μπορείτε να προσθέσετε περισσότερες.';
    END IF;
        
	-- Ανάκτηση της λέξης-κλειδί από τον πίνακα keywords
    SELECT `keyword` 
    INTO keyword_value
    FROM `apk`.`keywords`
    WHERE `id_keyword` = NEW.keyword_id_keyword;
    
	-- Ανάκτηση του ονόματος του στοιχείου από τον πίνακα stoixeio
    SELECT `name`
    INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;

    -- Καταγραφή της εισαγωγής της λέξης-κλειδί στο ιστορικό
    SET change_description = CONCAT(
        'Εισήχθη η λέξη-κλειδί: "', keyword_value, 
        '" για το στοιχείο με όνομα: "', stoixeio_name, '"'
    );
    INSERT INTO `apk`.`history`
    (table_name, stoixeio_id, action, changed_by, change_date, changeh)
    VALUES
    ('stoixeio_keywords', NEW.stoixeio_idStoixeio, 'INSERT', change_user, NOW(), change_description);

    
    -- Έλεγχος αν υπάρχει τουλάχιστον μία εγγραφή σε όλους τους σχετικούς πίνακες
	SET is_complete = (
       EXISTS (SELECT 1 FROM `apk`.`stoixeio_keywords` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`other_names` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`performance_area` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`facilities` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`product` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`equipment` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`importance` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`preservation` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_foreas` WHERE `stoixeio_id` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_fields_apk` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`evidence` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`user_stoixeio` WHERE `stoixeio_id` = NEW.stoixeio_idStoixeio)
       
       AND (
           -- Έλεγχος για locationDescription
           (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio) IS NOT NULL
           AND (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio) != ''
           OR 
           -- Αν locationDescription είναι NULL ή κενό, έλεγχος στο kalikratis για το id_location
           EXISTS (SELECT 1 FROM `apk`.`kalikratis` WHERE `location_id_location` = (SELECT id_location FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio))
       )
    );

    -- Ανάκτηση της τρέχουσας τιμής του is_temporary
    SELECT `is_temporary`
    INTO current_is_temporary
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;

    -- Ενημέρωση του πεδίου is_temporary εάν όλα τα δεδομένα είναι πλήρη και το is_temporary δεν είναι ήδη 0
    IF is_complete AND current_is_temporary != 0 THEN
        UPDATE `apk`.`stoixeio`
        SET `is_temporary` = 0
        WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;

	END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER prevent_last_stoixeio_keywords_deletion
BEFORE DELETE ON `apk`.`stoixeio_keywords`
FOR EACH ROW
BEGIN
    DECLARE keywords_count INT;

    -- Υπολογισμός του αριθμού των εγγραφών για το συγκεκριμένο stoixeio
    SELECT COUNT(*)
    INTO keywords_count
    FROM `apk`.`stoixeio_keywords`
    WHERE `stoixeio_idStoixeio` = OLD.stoixeio_idStoixeio;

    -- Αν υπάρχει μόνο μία εγγραφή, ακυρώνεται η διαγραφή
    IF keywords_count = 1 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Η τελευταία εγγραφή λέξης-κλειδί για αυτό το στοιχείο δεν μπορεί να διαγραφεί.';
    END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER delete_keyword
AFTER DELETE ON `apk`.`stoixeio_keywords`
FOR EACH ROW
BEGIN

	DECLARE keyword_value VARCHAR(100);
    DECLARE stoixeio_name VARCHAR(200);
    DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);

    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

    -- Ανάκτηση της λέξης-κλειδί από τον πίνακα keywords
    SELECT `keyword` 
    INTO keyword_value
    FROM `apk`.`keywords`
    WHERE `id_keyword` = OLD.keyword_id_keyword;

	    -- Ανάκτηση του ονόματος του στοιχείου από τον πίνακα stoixeio
    SELECT `name`
    INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = OLD.stoixeio_idStoixeio;

    -- Δημιουργία περιγραφής αλλαγής
    SET change_description = CONCAT('Διαγράφηκε η λέξη-κλειδί: "', keyword_value, 
                                    '" για το στοιχείο με όνομα: "', stoixeio_name, '"');

    -- Καταγραφή στο ιστορικό
    INSERT INTO `apk`.`history`
    (table_name, stoixeio_id, action, changed_by, change_date, changeh)
    VALUES
    ('stoixeio_keywords', OLD.stoixeio_idStoixeio, 'DELETE', change_user, NOW(), change_description);
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER after_insert_other_names
AFTER INSERT ON `apk`.`other_names`
FOR EACH ROW
BEGIN
    DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);
	DECLARE is_complete BOOLEAN;
    DECLARE current_is_temporary BOOLEAN;
	DECLARE stoixeio_name VARCHAR(200);
    
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER(); 
    END IF;

	-- Ανάκτηση του ονόματος του στοιχείου από τον πίνακα stoixeio
    SELECT name INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;


    SET change_description = CONCAT('Εισήχθη άλλη ονομασία "', NEW.name, '" για το στοιχείο με όνομα: "', stoixeio_name, '"');

    INSERT INTO `apk`.`history`
    (table_name, stoixeio_id, action, changed_by, change_date, changeh)
    VALUES 
    ('other_names', NEW.stoixeio_idStoixeio, 'INSERT', change_user, NOW(), change_description);

    -- Έλεγχος αν υπάρχει τουλάχιστον μία εγγραφή σε όλους τους σχετικούς πίνακες
    SET is_complete = (
	   EXISTS (SELECT 1 FROM `apk`.`stoixeio_keywords` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`other_names` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`performance_area` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`facilities` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`product` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`equipment` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`importance` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`preservation` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_foreas` WHERE `stoixeio_id` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_fields_apk` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`evidence` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`user_stoixeio` WHERE `stoixeio_id` = NEW.stoixeio_idStoixeio) 
       
       AND (
           -- Έλεγχος για locationDescription
           (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio) IS NOT NULL
           AND (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio) != ''
           OR 
           -- Αν locationDescription είναι NULL ή κενό, έλεγχος στο kalikratis για το id_location
           EXISTS (SELECT 1 FROM `apk`.`kalikratis` WHERE `location_id_location` = (SELECT id_location FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio))
       )
	);
    
    -- Ανάκτηση της τρέχουσας τιμής του is_temporary
    SELECT `is_temporary`
    INTO current_is_temporary
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;
    
    -- Ενημέρωση του πεδίου is_temporary εάν όλα τα δεδομένα είναι πλήρη και το is_temporary δεν είναι ήδη 0
    IF is_complete AND current_is_temporary != 0 THEN
        UPDATE `apk`.`stoixeio`
        SET `is_temporary` = 0
        WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;

	END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER update_other_names_history
AFTER UPDATE ON `apk`.`other_names`
FOR EACH ROW
BEGIN
    DECLARE change_user VARCHAR(255);
	DECLARE change_description TEXT;
    DECLARE stoixeio_name VARCHAR(200);

    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER(); 
    END IF;

	-- Ανάκτηση του ονόματος του στοιχείου από τον πίνακα stoixeio
    SELECT name INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;
    
    -- Έλεγχος αν το όνομα έχει αλλάξει
    IF BINARY OLD.name <> BINARY NEW.name THEN
        -- Δημιουργία περιγραφής αλλαγής που περιλαμβάνει το προηγούμενο και το νέο όνομα
        SET change_description = CONCAT('Ενημέρωση άλλης ονομασίας από "', OLD.name, '" σε "', NEW.name, 
                                        '" για το στοιχείο με όνομα: "', stoixeio_name, '"');

        -- Εισαγωγή της αλλαγής στο ιστορικό
        INSERT INTO `apk`.`history`
        (table_name, stoixeio_id, action, changed_by, change_date, changeh)
        VALUES 
        ('other_names', NEW.stoixeio_idStoixeio, 'UPDATE', change_user, NOW(), change_description);
    END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER prevent_last_other_name_deletion
BEFORE DELETE ON `apk`.`other_names`
FOR EACH ROW
BEGIN
    DECLARE other_names_count INT;

    -- Υπολογισμός του αριθμού των εγγραφών για το συγκεκριμένο stoixeio
    SELECT COUNT(*)
    INTO other_names_count
    FROM `apk`.`other_names`
    WHERE `stoixeio_idStoixeio` = OLD.stoixeio_idStoixeio;

    -- Αν υπάρχει μόνο μία εγγραφή, ακυρώνεται η διαγραφή
    IF other_names_count = 1 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Η τελευταία εγγραφή στα άλλα ονόματα για αυτό το στοιχείο δεν μπορεί να διαγραφεί.';
    END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER after_delete_other_names
AFTER DELETE ON `apk`.`other_names`
FOR EACH ROW
BEGIN
    DECLARE change_user VARCHAR(255);
    DECLARE change_description TEXT;
	DECLARE stoixeio_name VARCHAR(200);
     
    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER(); 
    END IF;

	  -- Ανάκτηση του ονόματος του στοιχείου από τον πίνακα stoixeio
    SELECT name INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = OLD.stoixeio_idStoixeio;
    
     -- Δημιουργία περιγραφής αλλαγής και εισαγωγή στο ιστορικό
    SET change_description = CONCAT('Διαγράφηκε η άλλη ονομασία "', OLD.name, '" για το στοιχείο με όνομα: "', stoixeio_name, '"');

    -- Εισαγωγή της αλλαγής στο ιστορικό
    INSERT INTO `apk`.`history`
    (table_name, stoixeio_id, action, changed_by, change_date, changeh)
    VALUES 
    ('other_names', OLD.stoixeio_idStoixeio, 'DELETE', change_user, NOW(), change_description);
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER check_if_all_data_inserted_location
AFTER INSERT ON `apk`.`location`
FOR EACH ROW
BEGIN

	DECLARE change_description TEXT;
	DECLARE change_user VARCHAR(255);
	DECLARE is_complete BOOLEAN;
    DECLARE current_is_temporary BOOLEAN;
    
    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

	   -- Εισαγωγή καταγραφής στο ιστορικό
	INSERT INTO `apk`.`history`
	(table_name, stoixeio_id, action, changed_by, change_date, changeh)
	VALUES 
	('location', NEW.stoixeio_idStoixeio, 'INSERT', change_user, NOW(), 
	CONCAT('Εισήχθη νέα τοποθεσία για το στοιχείο με όνομα "', 
		   (SELECT name FROM `apk`.`stoixeio` WHERE idStoixeio = NEW.stoixeio_idStoixeio), 
		   '"',
		   IF(NEW.locationDescription IS NULL OR NEW.locationDescription = '', 
			  ' (χωρίς περιγραφή τοποθεσίας)', 
			  CONCAT(' με περιγραφή τοποθεσίας: "', NEW.locationDescription, '".'))));

    -- Έλεγχος αν υπάρχει τουλάχιστον μία εγγραφή σε όλους τους σχετικούς πίνακες
    SET is_complete = (
	   EXISTS (SELECT 1 FROM `apk`.`stoixeio_keywords` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`other_names` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`performance_area` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`facilities` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`product` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`equipment` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`importance` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`preservation` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_foreas` WHERE `stoixeio_id` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_fields_apk` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`evidence` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`user_stoixeio` WHERE `stoixeio_id` = NEW.stoixeio_idStoixeio)
       
       AND (
           -- Έλεγχος για locationDescription
           (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio) IS NOT NULL
           AND (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio) != ''
           OR 
           -- Αν locationDescription είναι NULL ή κενό, έλεγχος στο kalikratis για το id_location
           EXISTS (SELECT 1 FROM `apk`.`kalikratis` WHERE `location_id_location` = (SELECT id_location FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio))
       )
	);

    -- Ανάκτηση της τρέχουσας τιμής του is_temporary
    SELECT `is_temporary`
    INTO current_is_temporary
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;
    
    -- Ενημέρωση του πεδίου is_temporary εάν όλα τα δεδομένα είναι πλήρη και το is_temporary δεν είναι ήδη 0
    IF is_complete AND current_is_temporary != 0 THEN
        UPDATE `apk`.`stoixeio`
        SET `is_temporary` = 0
        WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;
	END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER prevent_location_description_update
BEFORE UPDATE ON `apk`.`location`
FOR EACH ROW
BEGIN
    DECLARE kalikratis_count INT;

    -- Ελέγχουμε αν υπάρχει αλλαγή στο πεδίο locationDescription
    IF OLD.locationDescription <> NEW.locationDescription THEN
        -- Ελέγχουμε αν το locationDescription πρόκειται να γίνει NULL ή κενό
        IF (NEW.locationDescription IS NULL OR NEW.locationDescription = '') THEN
            -- Ελέγχουμε αν υπάρχει τουλάχιστον μία εγγραφή στον kalikratis για το ίδιο location_id_location
            SELECT COUNT(*) INTO kalikratis_count
            FROM `apk`.`kalikratis`
            WHERE `location_id_location` = OLD.`id_location`;

            -- Αν δεν υπάρχει καμία εγγραφή στον kalikratis για το ίδιο location_id_location, αποτρέπουμε την ενημέρωση
            IF kalikratis_count = 0 THEN
                SIGNAL SQLSTATE '45000' 
                SET MESSAGE_TEXT = 'Δεν επιτρέπεται η ενημέρωση του locationDescription σε NULL ή κενό, διότι δεν υπάρχουν συνδεδεμένα στοιχεία στον kalikratis';
            END IF;
        END IF;
    END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER after_update_location
AFTER UPDATE ON `apk`.`location`
FOR EACH ROW
BEGIN
    DECLARE change_user VARCHAR(255);
    DECLARE change_description TEXT;
	DECLARE stoixeio_name VARCHAR(200);
    
    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

	-- Ανάκτηση του ονόματος του στοιχείου από τον πίνακα stoixeio
    SELECT name INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;
    
    -- Έλεγχος αλλαγών στο πεδίο locationDescription
    IF (OLD.locationDescription IS NOT NULL AND NEW.locationDescription IS NOT NULL AND OLD.locationDescription <> NEW.locationDescription) THEN
        SET change_description = CONCAT('Η περιγραφή τοποθεσίας για το στοιχείο με όνομα "', stoixeio_name, '" άλλαξε από "', OLD.locationDescription, '" σε "', NEW.locationDescription, '".');
    ELSEIF (OLD.locationDescription IS NULL AND NEW.locationDescription IS NOT NULL) THEN
        SET change_description = CONCAT('Η περιγραφή τοποθεσίας για το στοιχείο με όνομα "', stoixeio_name, '" προστέθηκε: "', NEW.locationDescription, '".');
    ELSEIF (OLD.locationDescription IS NOT NULL AND NEW.locationDescription IS NULL) THEN
        SET change_description = CONCAT('Η περιγραφή τοποθεσίας για το στοιχείο με όνομα "', stoixeio_name, '" αφαιρέθηκε: "', OLD.locationDescription, '".');
    END IF;

    -- Εισαγωγή στο ιστορικό
    IF change_description != '' THEN
        INSERT INTO `apk`.`history`
        (table_name, stoixeio_id, action, changed_by, change_date, changeh)
        VALUES 
        ('location', NEW.stoixeio_idStoixeio, 'UPDATE', change_user, NOW(), change_description);
    END IF;
END$$

DELIMITER ;

DELIMITER $$
CREATE TRIGGER prevent_location_deletion
BEFORE DELETE ON `apk`.`location`
FOR EACH ROW
BEGIN
    DECLARE stoixeio_count INT;

    -- Ελέγχουμε αν το id_location υπάρχει στον πίνακα stoixeio
    SELECT COUNT(*) INTO stoixeio_count
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = OLD.`stoixeio_idStoixeio`;

    -- Αν υπάρχει εγγραφή στον stoixeio για το ίδιο stoixeio_idStoixeio, επιτρέπουμε τη διαγραφή
    -- Αν δεν υπάρχει, αποτρέπουμε τη διαγραφή του location
    IF stoixeio_count > 0 THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Δεν επιτρέπεται η διαγραφή της τοποθεσίας, καθώς υπάρχει συνδεδεμένο στοιχείο στον πίνακα stoixeio.';
    END IF;
END $$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER before_insert_kalikratis
BEFORE INSERT ON `apk`.`kalikratis`
FOR EACH ROW
BEGIN
    
    DECLARE region_exists INT;
    DECLARE regional_unit_exists INT;
    DECLARE municipality_exists INT;
    DECLARE municipal_unit_exists INT;
    DECLARE community_exists INT;

	IF EXISTS (
        SELECT 1
        FROM `apk`.`kalikratis`
        WHERE (NEW.decentralized_administration_id IS NOT NULL AND decentralized_administration_id = NEW.decentralized_administration_id OR NEW.decentralized_administration_id IS NULL)
          AND (NEW.region_id IS NOT NULL AND region_id = NEW.region_id OR NEW.region_id IS NULL)
          AND (NEW.regional_unit_id IS NOT NULL AND regional_unit_id = NEW.regional_unit_id OR NEW.regional_unit_id IS NULL)
          AND (NEW.municipality_id IS NOT NULL AND municipality_id = NEW.municipality_id OR NEW.municipality_id IS NULL)
          AND (NEW.municipal_unit_id IS NOT NULL AND municipal_unit_id = NEW.municipal_unit_id OR NEW.municipal_unit_id IS NULL)
          AND (NEW.community_id IS NOT NULL AND community_id = NEW.community_id OR NEW.community_id IS NULL)
          AND (NEW.location_id_location IS NOT NULL AND location_id_location = NEW.location_id_location OR NEW.location_id_location IS NULL)
    ) THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Η εγγραφή υπάρχει ήδη στον πίνακα Kalikratis.';
    END IF;

    -- Ελέγχουμε αν το decentralized_administration_id υπάρχει
    IF NEW.decentralized_administration_id IS NOT NULL THEN
        IF NOT EXISTS (
            SELECT 1
            FROM `apk`.`decentralized_administration`
            WHERE id = NEW.decentralized_administration_id
        ) THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Η αποκεντρωμένη διοίκηση πρέπει να υπάρχει πριν την εισαγωγή του Kalikratis.';
        END IF;
    END IF;

    -- Ελέγχουμε αν το region_id συνδέεται με το decentralized_administration_id
    IF NEW.region_id IS NOT NULL THEN
        SELECT COUNT(1) INTO region_exists
        FROM `apk`.`region` r
        JOIN `apk`.`decentralized_administration` d
        ON r.decentralized_administration_id = d.id
        WHERE r.id = NEW.region_id
        AND d.id = NEW.decentralized_administration_id;

        IF region_exists = 0 THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Η περιφέρεια πρέπει να ανήκει στην αποκεντρωμένη διοίκηση.';
        END IF;
    END IF;

    -- Ελέγχουμε αν το region_unit_id συνδέεται με το region_id
    IF NEW.regional_unit_id IS NOT NULL THEN
        SELECT COUNT(1) INTO regional_unit_exists
        FROM `apk`.`regional_units` ru
        JOIN `apk`.`region` r
        ON ru.region_id = r.id
        WHERE ru.id = NEW.regional_unit_id
        AND r.id = NEW.region_id;

        IF regional_unit_exists = 0 THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Η περιφερειακή ενότητα πρέπει να ανήκει στην περιοχή.';
        END IF;
    END IF;

    -- Ελέγχουμε αν το municipality_id συνδέεται με το region_unit_id
    IF NEW.municipality_id IS NOT NULL THEN
        SELECT COUNT(1) INTO municipality_exists
        FROM `apk`.`municipalities` m
        JOIN `apk`.`regional_units` ru
        ON m.regional_units_id = ru.id
        WHERE m.id = NEW.municipality_id
        AND ru.id = NEW.regional_unit_id;

        IF municipality_exists = 0 THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Ο δήμος πρέπει να ανήκει στην περιφερειακή ενότητα.';
        END IF;
    END IF;

    -- Ελέγχουμε αν το municipal_unit_id συνδέεται με το municipality_id
    IF NEW.municipal_unit_id IS NOT NULL THEN
        SELECT COUNT(1) INTO municipal_unit_exists
        FROM `apk`.`municipal_units` mu
        JOIN `apk`.`municipalities` m
        ON mu.municipalities_id = m.id
        WHERE mu.id = NEW.municipal_unit_id
        AND m.id = NEW.municipality_id;

        IF municipal_unit_exists = 0 THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Η δημοτική ενότητα πρέπει να ανήκει στον δήμο.';
        END IF;
    END IF;

    -- Ελέγχουμε αν το community_id συνδέεται με το municipal_unit_id
    IF NEW.community_id IS NOT NULL THEN
        SELECT COUNT(1) INTO community_exists
        FROM `apk`.`communities` c
        JOIN `apk`.`municipal_units` mu
        ON c.municipal_units_id = mu.id
        WHERE c.id = NEW.community_id
        AND mu.id = NEW.municipal_unit_id;

        IF community_exists = 0 THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Η κοινότητα πρέπει να ανήκει στη δημοτική ενότητα.';
        END IF;
    END IF;
 -- Έλεγχος αν το location_id_location υπάρχει στον πίνακα location
    IF NOT EXISTS (
        SELECT 1
        FROM `apk`.`location`
        WHERE id_location = NEW.location_id_location
    ) THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Η τοποθεσία πρέπει να υπάρχει πριν την εισαγωγή του Kalikratis.';
    END IF;
END$$

DELIMITER ;

DELIMITER $$
CREATE TRIGGER check_if_all_data_inserted_kalikratis
AFTER INSERT ON `apk`.`kalikratis`
FOR EACH ROW
BEGIN
    DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);
    DECLARE is_complete BOOLEAN;
    DECLARE current_is_temporary BOOLEAN;
    DECLARE stoixeio_id INT;
	DECLARE stoixeio_name VARCHAR(200);
    DECLARE location_desc VARCHAR(600);
    DECLARE decentralized_name VARCHAR(200);
    DECLARE region_name VARCHAR(200);
    DECLARE regional_unit_name VARCHAR(200);
    DECLARE municipality_name VARCHAR(200);
    DECLARE municipal_unit_name VARCHAR(200);
    DECLARE community_name VARCHAR(200);
	

    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

    -- Βρες το stoixeio_idStoixeio από το location
    SELECT stoixeio_idStoixeio, locationDescription
    INTO stoixeio_id, location_desc
    FROM `apk`.`location`
    WHERE id_location = NEW.location_id_location;
    
	-- Ανάκτηση του ονόματος του στοιχείου από τον πίνακα stoixeio
    SELECT name INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE idStoixeio = stoixeio_id;

    -- Αρχικοποίηση του change_description
    SET change_description = CONCAT('Εισήχθη νέα τοποθεσία Καλλικράτη για το στοιχείο με όνομα "', stoixeio_name, '" με ');

    -- Ανάκτηση του ονόματος από τον πίνακα decentralized_administration αν υπάρχει
    IF NEW.decentralized_administration_id IS NOT NULL THEN
        SELECT IFNULL(name, 'Άγνωστο') INTO decentralized_name
        FROM `apk`.`decentralized_administration`
        WHERE id = NEW.decentralized_administration_id;
        SET change_description = CONCAT(change_description, 'Αποκεντρωμένη Διοίκηση: ', decentralized_name, ', ');
    END IF;

    -- Ανάκτηση του ονόματος από τον πίνακα region αν υπάρχει
    IF NEW.region_id IS NOT NULL THEN
        SELECT IFNULL(name, 'Άγνωστο') INTO region_name
        FROM `apk`.`region`
        WHERE id = NEW.region_id;
        SET change_description = CONCAT(change_description, 'Περιφέρεια: ', region_name, ', ');
    END IF;

    -- Ανάκτηση του ονόματος από τον πίνακα regional_unit αν υπάρχει
    IF NEW.regional_unit_id IS NOT NULL THEN
        SELECT IFNULL(name, 'Άγνωστο') INTO regional_unit_name
        FROM `apk`.`regional_units`
        WHERE id = NEW.regional_unit_id;
        SET change_description = CONCAT(change_description, 'Περιφερειακή Ενότητα: ', regional_unit_name, ', ');
    END IF;

    -- Ανάκτηση του ονόματος από τον πίνακα municipalities αν υπάρχει
    IF NEW.municipality_id IS NOT NULL THEN
        SELECT IFNULL(name, 'Άγνωστο') INTO municipality_name
        FROM `apk`.`municipalities`
        WHERE id = NEW.municipality_id;
        SET change_description = CONCAT(change_description, 'Δήμος: ', municipality_name, ', ');
    END IF;

    -- Ανάκτηση του ονόματος από τον πίνακα municipal_units αν υπάρχει
    IF NEW.municipal_unit_id IS NOT NULL THEN
        SELECT IFNULL(name, 'Άγνωστο') INTO municipal_unit_name
        FROM `apk`.`municipal_units`
        WHERE id = NEW.municipal_unit_id;
        SET change_description = CONCAT(change_description, 'Δημοτική Ενότητα: ', municipal_unit_name, ', ');
    END IF;

    -- Ανάκτηση του ονόματος από τον πίνακα communities αν υπάρχει
    IF NEW.community_id IS NOT NULL THEN
        SELECT IFNULL(name, 'Άγνωστο') INTO community_name
        FROM `apk`.`communities`
        WHERE id = NEW.community_id;
        SET change_description = CONCAT(change_description, 'Κοινότητα: ', community_name);
    END IF;

    -- Επαναφορά του τελευταίου κόμματος εάν υπάρχει
    SET change_description = TRIM(TRAILING ', ' FROM change_description);

    -- Καταγραφή εισαγωγής του kalikratis στο ιστορικό με τα ονόματα των περιοχών
    INSERT INTO `apk`.`history`
    (table_name, stoixeio_id, action, changed_by, change_date, changeh)
    VALUES
    ('kalikratis', stoixeio_id, 'INSERT', change_user, NOW(), change_description);

    -- Έλεγχος αν υπάρχουν τουλάχιστον μία εγγραφή σε όλους τους σχετικούς πίνακες
    SET is_complete = (
        EXISTS (SELECT 1 FROM `apk`.`stoixeio_keywords` WHERE `stoixeio_idStoixeio` = stoixeio_id)
        AND EXISTS (SELECT 1 FROM `apk`.`other_names` WHERE `stoixeio_idStoixeio` = stoixeio_id)
        AND EXISTS (SELECT 1 FROM `apk`.`performance_area` WHERE `stoixeio_idStoixeio` = stoixeio_id)
        AND EXISTS (SELECT 1 FROM `apk`.`facilities` WHERE `stoixeio_idStoixeio` = stoixeio_id)
        AND EXISTS (SELECT 1 FROM `apk`.`product` WHERE `stoixeio_idStoixeio` = stoixeio_id)
        AND EXISTS (SELECT 1 FROM `apk`.`equipment` WHERE `stoixeio_idStoixeio` = stoixeio_id)
        AND EXISTS (SELECT 1 FROM `apk`.`importance` WHERE `stoixeio_idStoixeio` = stoixeio_id)
        AND EXISTS (SELECT 1 FROM `apk`.`preservation` WHERE `stoixeio_idStoixeio` = stoixeio_id)
        AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_foreas` WHERE `stoixeio_id` = stoixeio_id)
        AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_fields_apk` WHERE `stoixeio_idStoixeio` = stoixeio_id)
        AND EXISTS (SELECT 1 FROM `apk`.`evidence` WHERE `stoixeio_idStoixeio` = stoixeio_id)
        AND EXISTS (SELECT 1 FROM `apk`.`user_stoixeio` WHERE `stoixeio_id` = stoixeio_id)
        AND (
            -- Έλεγχος για locationDescription
            (location_desc IS NOT NULL AND location_desc != '')
            OR EXISTS (SELECT 1 FROM `apk`.`kalikratis` WHERE `location_id_location` = NEW.location_id_location)
        )
    );

    -- Ανάκτηση της τρέχουσας τιμής του is_temporary
    SELECT `is_temporary`
    INTO current_is_temporary
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = stoixeio_id;

    -- Ενημέρωση του πεδίου is_temporary εάν όλα τα δεδομένα είναι πλήρη και το is_temporary δεν είναι ήδη 0
    IF is_complete AND current_is_temporary != 0 THEN
        UPDATE `apk`.`stoixeio`
        SET `is_temporary` = 0
        WHERE `idStoixeio` = stoixeio_id;
	END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER before_update_kalikratis
BEFORE UPDATE ON `apk`.`kalikratis`
FOR EACH ROW
BEGIN
   
    DECLARE region_exists INT;
    DECLARE regional_unit_exists INT;
    DECLARE municipality_exists INT;
    DECLARE municipal_unit_exists INT;
    DECLARE community_exists INT;

	IF EXISTS (
        SELECT 1
        FROM `apk`.`kalikratis`
        WHERE (NEW.decentralized_administration_id IS NOT NULL AND decentralized_administration_id = NEW.decentralized_administration_id OR NEW.decentralized_administration_id IS NULL)
          AND (NEW.region_id IS NOT NULL AND region_id = NEW.region_id OR NEW.region_id IS NULL)
          AND (NEW.regional_unit_id IS NOT NULL AND regional_unit_id = NEW.regional_unit_id OR NEW.regional_unit_id IS NULL)
          AND (NEW.municipality_id IS NOT NULL AND municipality_id = NEW.municipality_id OR NEW.municipality_id IS NULL)
          AND (NEW.municipal_unit_id IS NOT NULL AND municipal_unit_id = NEW.municipal_unit_id OR NEW.municipal_unit_id IS NULL)
          AND (NEW.community_id IS NOT NULL AND community_id = NEW.community_id OR NEW.community_id IS NULL)
          AND (NEW.location_id_location IS NOT NULL AND location_id_location = NEW.location_id_location OR NEW.location_id_location IS NULL)
		  AND id <> OLD.id -- Αποφεύγουμε την αντιστοίχιση με την τρέχουσα εγγραφή

    ) THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Η εγγραφή υπάρχει ήδη στον πίνακα Kalikratis.';
    END IF;

    -- Ελέγχουμε αν το decentralized_administration_id υπάρχει
    IF NEW.decentralized_administration_id IS NOT NULL THEN
        IF NOT EXISTS (
            SELECT 1
            FROM `apk`.`decentralized_administration`
            WHERE id = NEW.decentralized_administration_id
        ) THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Η αποκεντρωμένη διοίκηση πρέπει να υπάρχει πριν την εισαγωγή του Kalikratis.';
        END IF;
    END IF;

    -- Ελέγχουμε αν το region_id συνδέεται με το decentralized_administration_id
    IF NEW.region_id IS NOT NULL THEN
        SELECT COUNT(1) INTO region_exists
        FROM `apk`.`region` r
        JOIN `apk`.`decentralized_administration` d
        ON r.decentralized_administration_id = d.id
        WHERE r.id = NEW.region_id
        AND d.id = NEW.decentralized_administration_id;

        IF region_exists = 0 THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Η περιφέρεια πρέπει να ανήκει στην αποκεντρωμένη διοίκηση.';
        END IF;
    END IF;

    -- Ελέγχουμε αν το region_unit_id συνδέεται με το region_id
    IF NEW.regional_unit_id IS NOT NULL THEN
        SELECT COUNT(1) INTO regional_unit_exists
        FROM `apk`.`regional_units` ru
        JOIN `apk`.`region` r
        ON ru.region_id = r.id
        WHERE ru.id = NEW.regional_unit_id
        AND r.id = NEW.region_id;

        IF regional_unit_exists = 0 THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Η περιφερειακή ενότητα πρέπει να ανήκει στην περιοχή.';
        END IF;
    END IF;

    -- Ελέγχουμε αν το municipality_id συνδέεται με το region_unit_id
    IF NEW.municipality_id IS NOT NULL THEN
        SELECT COUNT(1) INTO municipality_exists
        FROM `apk`.`municipalities` m
        JOIN `apk`.`regional_units` ru
        ON m.regional_units_id = ru.id
        WHERE m.id = NEW.municipality_id
        AND ru.id = NEW.regional_unit_id;

        IF municipality_exists = 0 THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Ο δήμος πρέπει να ανήκει στην περιφερειακή ενότητα.';
        END IF;
    END IF;

    -- Ελέγχουμε αν το municipal_unit_id συνδέεται με το municipality_id
    IF NEW.municipal_unit_id IS NOT NULL THEN
        SELECT COUNT(1) INTO municipal_unit_exists
        FROM `apk`.`municipal_units` mu
        JOIN `apk`.`municipalities` m
        ON mu.municipalities_id = m.id
        WHERE mu.id = NEW.municipal_unit_id
        AND m.id = NEW.municipality_id;

        IF municipal_unit_exists = 0 THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Η δημοτική ενότητα πρέπει να ανήκει στον δήμο.';
        END IF;
    END IF;

    -- Ελέγχουμε αν το community_id συνδέεται με το municipal_unit_id
    IF NEW.community_id IS NOT NULL THEN
        SELECT COUNT(1) INTO community_exists
        FROM `apk`.`communities` c
        JOIN `apk`.`municipal_units` mu
        ON c.municipal_units_id = mu.id
        WHERE c.id = NEW.community_id
        AND mu.id = NEW.municipal_unit_id;

        IF community_exists = 0 THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Η κοινότητα πρέπει να ανήκει στη δημοτική ενότητα.';
        END IF;
    END IF;
 -- Έλεγχος αν το location_id_location υπάρχει στον πίνακα location
    IF NOT EXISTS (
        SELECT 1
        FROM `apk`.`location`
        WHERE id_location = NEW.location_id_location
    ) THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Η τοποθεσία πρέπει να υπάρχει πριν την εισαγωγή του Kalikratis.';
    END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER after_update_kalikratis
AFTER UPDATE ON `apk`.`kalikratis`
FOR EACH ROW
BEGIN
    DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);
    DECLARE stoixeio_id INT;
    DECLARE stoixeio_name VARCHAR(200);
    DECLARE decentralized_name_old VARCHAR(200);
    DECLARE decentralized_name_new VARCHAR(200);
    DECLARE region_name_old VARCHAR(200);
    DECLARE region_name_new VARCHAR(200);
    DECLARE regional_unit_name_old VARCHAR(200);
    DECLARE regional_unit_name_new VARCHAR(200);
    DECLARE municipality_name_old VARCHAR(200);
    DECLARE municipality_name_new VARCHAR(200);
    DECLARE municipal_unit_name_old VARCHAR(200);
    DECLARE municipal_unit_name_new VARCHAR(200);
    DECLARE community_name_old VARCHAR(200);
    DECLARE community_name_new VARCHAR(200);

    
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

    -- Βρες το stoixeio_idStoixeio από το location
    SELECT stoixeio_idStoixeio
    INTO stoixeio_id
    FROM `apk`.`location`
    WHERE id_location = NEW.location_id_location;

	-- Εύρεση του ονόματος του στοιχείου
    SELECT name INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE idStoixeio = stoixeio_id;
    
    -- Decentralized Administration
    SET decentralized_name_old = (SELECT IFNULL(name, 'Άγνωστο') FROM `apk`.`decentralized_administration` WHERE id = OLD.decentralized_administration_id);
    SET decentralized_name_new = (SELECT IFNULL(name, 'Άγνωστο') FROM `apk`.`decentralized_administration` WHERE id = NEW.decentralized_administration_id);

    -- Region
    SET region_name_old = (SELECT IFNULL(name, 'Άγνωστο') FROM `apk`.`region` WHERE id = OLD.region_id);
    SET region_name_new = (SELECT IFNULL(name, 'Άγνωστο') FROM `apk`.`region` WHERE id = NEW.region_id);

    -- Regional Unit
    SET regional_unit_name_old = (SELECT IFNULL(name, 'Άγνωστο') FROM `apk`.`regional_units` WHERE id = OLD.regional_unit_id);
    SET regional_unit_name_new = (SELECT IFNULL(name, 'Άγνωστο') FROM `apk`.`regional_units` WHERE id = NEW.regional_unit_id);

    -- Municipality
    SET municipality_name_old = (SELECT IFNULL(name, 'Άγνωστο') FROM `apk`.`municipalities` WHERE id = OLD.municipality_id);
    SET municipality_name_new = (SELECT IFNULL(name, 'Άγνωστο') FROM `apk`.`municipalities` WHERE id = NEW.municipality_id);

    -- Municipal Unit
    SET municipal_unit_name_old = (SELECT IFNULL(name, 'Άγνωστο') FROM `apk`.`municipal_units` WHERE id = OLD.municipal_unit_id);
    SET municipal_unit_name_new = (SELECT IFNULL(name, 'Άγνωστο') FROM `apk`.`municipal_units` WHERE id = NEW.municipal_unit_id);

    -- Community
    SET community_name_old = (SELECT IFNULL(name, 'Άγνωστο') FROM `apk`.`communities` WHERE id = OLD.community_id);
    SET community_name_new = (SELECT IFNULL(name, 'Άγνωστο') FROM `apk`.`communities` WHERE id = NEW.community_id);

    -- Αρχικοποίηση του change_description
    SET change_description = CONCAT(
        'Για το στοιχείο με όνομα ', stoixeio_name, 
        ' έγινε αλλαγή της τοποθεσίας Καλλικράτη από ('
    );

    -- Προσθήκη των αλλαγών στα παλιά δεδομένα
    SET change_description = CONCAT(
        change_description, 
        'Αποκεντρωμένη Διοίκηση: "', IFNULL(decentralized_name_old, 'NULL'), '"',
        ', Περιφέρεια: "', IFNULL(region_name_old, 'NULL'), '"',
        ', Περιφερειακή Ενότητα: "', IFNULL(regional_unit_name_old, 'NULL'), '"',
        ', Δήμος: "', IFNULL(municipality_name_old, 'NULL'), '"',
        ', Δημοτική Ενότητα: "', IFNULL(municipal_unit_name_old, 'NULL'), '"',
        ', Κοινότητα: "', IFNULL(community_name_old, 'NULL'), '"'
    );

    -- Προσθήκη των αλλαγών στα νέα δεδομένα
    SET change_description = CONCAT(
        change_description, 
        ') σε (Αποκεντρωμένη Διοίκηση: "', IFNULL(decentralized_name_new, 'NULL'), '"',
        ', Περιφέρεια: "', IFNULL(region_name_new, 'NULL'), '"',
        ', Περιφερειακή Ενότητα: "', IFNULL(regional_unit_name_new, 'NULL'), '"',
        ', Δήμος: "', IFNULL(municipality_name_new, 'NULL'), '"',
        ', Δημοτική Ενότητα: "', IFNULL(municipal_unit_name_new, 'NULL'), '"',
        ', Κοινότητα: "', IFNULL(community_name_new, 'NULL'), '")'
    );

    -- Καταγραφή της αλλαγής στο ιστορικό
    INSERT INTO `apk`.`history`
    (table_name, stoixeio_id, action, changed_by, change_date, changeh)
    VALUES
    ('kalikratis', stoixeio_id, 'UPDATE', change_user, NOW(), change_description);

END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER prevent_last_kalikratis_location_delete
BEFORE DELETE ON `apk`.`kalikratis`
FOR EACH ROW
BEGIN
  -- Ελέγχουμε αν υπάρχει μόνο μία εγγραφή στον πίνακα kalikratis για το ίδιο location_id_location
  DECLARE kalikratis_count INT;
  DECLARE location_desc VARCHAR(600);

  -- Υπολογίζουμε πόσες εγγραφές υπάρχουν στον kalikratis για το ίδιο location_id_location
  SELECT COUNT(*) INTO kalikratis_count
  FROM `apk`.`kalikratis`
  WHERE `location_id_location` = OLD.`location_id_location`;

  -- Αν είναι η τελευταία εγγραφή για αυτό το location_id_location και το locationDescription στον πίνακα location είναι NULL ή κενό, εμποδίζουμε τη διαγραφή
  IF kalikratis_count = 1 THEN
    -- Αποθηκεύουμε το locationDescription στην μεταβλητή location_desc
    SELECT `locationDescription` INTO location_desc
    FROM `apk`.`location`
    WHERE `id_location` = OLD.`location_id_location`;

    -- Αν το locationDescription είναι NULL ή κενό, αποτρέπουμε τη διαγραφή
    IF location_desc IS NULL OR location_desc = '' THEN
      SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Δεν μπορείτε να διαγράψετε την τελευταία εγγραφή του kalikratis με κενή περιγραφή τοποθεσίας.';
    END IF;
  END IF;
END$$

DELIMITER ;


DELIMITER $$

CREATE TRIGGER after_delete_kalikratis
AFTER DELETE ON `apk`.`kalikratis`
FOR EACH ROW
BEGIN
    DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);
    DECLARE is_complete BOOLEAN;
    DECLARE current_is_temporary BOOLEAN;
    DECLARE stoixeio_id INT;
    DECLARE stoixeio_name VARCHAR(200);
    DECLARE decentralized_name VARCHAR(200);
    DECLARE region_name VARCHAR(200);
    DECLARE regional_unit_name VARCHAR(200);
    DECLARE municipality_name VARCHAR(200);
    DECLARE municipal_unit_name VARCHAR(200);
    DECLARE community_name VARCHAR(200);
	

    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

    SELECT stoixeio_idStoixeio
    INTO stoixeio_id
    FROM `apk`.`location`
    WHERE id_location = OLD.location_id_location;

	-- Εύρεση του ονόματος του στοιχείου
    SELECT name INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE idStoixeio = stoixeio_id;
    
    -- Αρχικοποίηση του change_description
    SET change_description = CONCAT(
        'Διαγράφηκε για το στοιχείο με όνομα ', stoixeio_name, ' η τοποθεσία Καλλικράτη με ');

    -- Ανάκτηση του ονόματος από τον πίνακα decentralized_administration αν υπάρχει
    IF OLD.decentralized_administration_id IS NOT NULL THEN
        SELECT IFNULL(name, 'Άγνωστο') INTO decentralized_name
        FROM `apk`.`decentralized_administration`
        WHERE id = OLD.decentralized_administration_id;
        SET change_description = CONCAT(change_description, 'Αποκεντρωμένη Διοίκηση: ', decentralized_name, ', ');
    END IF;

    -- Ανάκτηση του ονόματος από τον πίνακα region αν υπάρχει
    IF OLD.region_id IS NOT NULL THEN
        SELECT IFNULL(name, 'Άγνωστο') INTO region_name
        FROM `apk`.`region`
        WHERE id = OLD.region_id;
        SET change_description = CONCAT(change_description, 'Περιφέρεια: ', region_name, ', ');
    END IF;

    -- Ανάκτηση του ονόματος από τον πίνακα regional_unit αν υπάρχει
    IF OLD.regional_unit_id IS NOT NULL THEN
        SELECT IFNULL(name, 'Άγνωστο') INTO regional_unit_name
        FROM `apk`.`regional_units`
        WHERE id = OLD.regional_unit_id;
        SET change_description = CONCAT(change_description, 'Περιφερειακή Ενότητα: ', regional_unit_name, ', ');
    END IF;

    -- Ανάκτηση του ονόματος από τον πίνακα municipalities αν υπάρχει
    IF OLD.municipality_id IS NOT NULL THEN
        SELECT IFNULL(name, 'Άγνωστο') INTO municipality_name
        FROM `apk`.`municipalities`
        WHERE id = OLD.municipality_id;
        SET change_description = CONCAT(change_description, 'Δήμος: ', municipality_name, ', ');
    END IF;

    -- Ανάκτηση του ονόματος από τον πίνακα municipal_units αν υπάρχει
    IF OLD.municipal_unit_id IS NOT NULL THEN
        SELECT IFNULL(name, 'Άγνωστο') INTO municipal_unit_name
        FROM `apk`.`municipal_units`
        WHERE id = OLD.municipal_unit_id;
        SET change_description = CONCAT(change_description, 'Δημοτική Ενότητα: ', municipal_unit_name, ', ');
    END IF;

    -- Ανάκτηση του ονόματος από τον πίνακα communities αν υπάρχει
    IF OLD.community_id IS NOT NULL THEN
        SELECT IFNULL(name, 'Άγνωστο') INTO community_name
        FROM `apk`.`communities`
        WHERE id = OLD.community_id;
        SET change_description = CONCAT(change_description, 'Κοινότητα: ', community_name);
    END IF;

    -- Επαναφορά του τελευταίου κόμματος εάν υπάρχει
    SET change_description = TRIM(TRAILING ', ' FROM change_description);

    -- Καταγραφή εισαγωγής του kalikratis στο ιστορικό με τα ονόματα των περιοχών
    INSERT INTO `apk`.`history`
    (table_name, stoixeio_id, action, changed_by, change_date, changeh)
    VALUES
    ('kalikratis', stoixeio_id, 'DELETE', change_user, NOW(), change_description);

END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER check_if_all_data_inserted_performance_area
AFTER INSERT ON `apk`.`performance_area`
FOR EACH ROW
BEGIN

	DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);
	DECLARE is_complete BOOLEAN;
    DECLARE current_is_temporary BOOLEAN;
    DECLARE stoixeio_name VARCHAR(200); 
    
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

	-- Εύρεση του ονόματος του στοιχείου από τον πίνακα stoixeio
    SELECT name INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE idStoixeio = NEW.stoixeio_idStoixeio;
    
   -- Περιγραφή αλλαγής
	SET change_description = CONCAT(
		'Εισαγωγή χώρου επιτέλεσης: "', NEW.area, 
		'" με αιτιολόγηση: "', NEW.justification_performance_area, 
		'" για το στοιχείο με όνομα: "', stoixeio_name, '".'
	);

    -- Εισαγωγή στο ιστορικό
    INSERT INTO `apk`.`history`
    (table_name, stoixeio_id, action, changed_by, change_date, changeh)
    VALUES
    ('performance_area', NEW.stoixeio_idStoixeio, 'INSERT', change_user, NOW(), change_description);

		
    -- Έλεγχος αν υπάρχει τουλάχιστον μία εγγραφή σε όλους τους σχετικούς πίνακες
    SET is_complete = (
       EXISTS (SELECT 1 FROM `apk`.`stoixeio_keywords` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`other_names` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`performance_area` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`facilities` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`product` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`equipment` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`importance` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`preservation` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_foreas` WHERE `stoixeio_id` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_fields_apk` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`evidence` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`user_stoixeio` WHERE `stoixeio_id` = NEW.stoixeio_idStoixeio) 
       
       AND (
           -- Έλεγχος για locationDescription
           (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio) IS NOT NULL
           AND (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio) != ''
           OR 
           -- Αν locationDescription είναι NULL ή κενό, έλεγχος στο kalikratis για το id_location
           EXISTS (SELECT 1 FROM `apk`.`kalikratis` WHERE `location_id_location` = (SELECT id_location FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio))
       )
       
    );

    -- Ανάκτηση της τρέχουσας τιμής του is_temporary
    SELECT `is_temporary`
    INTO current_is_temporary
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;

    -- Ενημέρωση του πεδίου is_temporary εάν όλα τα δεδομένα είναι πλήρη και το is_temporary δεν είναι ήδη 0
    IF is_complete AND current_is_temporary != 0 THEN
        UPDATE `apk`.`stoixeio`
        SET `is_temporary` = 0
        WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;

	END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER after_update_performance_area
AFTER UPDATE ON `apk`.`performance_area`
FOR EACH ROW
BEGIN
    DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);
    DECLARE stoixeio_name VARCHAR(200);

    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

	 -- Ανάκτηση του ονόματος του στοιχείου από τον πίνακα stoixeio
    SELECT name INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE idStoixeio = NEW.stoixeio_idStoixeio;
    
    -- Αρχικοποίηση της περιγραφής αλλαγής
    SET change_description = CONCAT('Για το στοιχείο με όνομα "', stoixeio_name, '" ');

    -- Έλεγχος αλλαγής στο πεδίο "area"
    IF NEW.area <> OLD.area THEN
        SET change_description = CONCAT(change_description, 
            'άλλαξε ο χώρος επιτέλεσης από "', OLD.area, '" σε "', NEW.area, '". ');
    END IF;

    -- Έλεγχος αλλαγής στο πεδίο "justification_performance_area"
    IF NEW.justification_performance_area <> OLD.justification_performance_area THEN
        SET change_description = CONCAT(change_description, 
            'αλλαξε η αιτιολόγηση για τον χώρο επιτέλεσης "', OLD.area, '" από "', OLD.justification_performance_area, '" σε "', NEW.justification_performance_area, '". ');
    END IF;

    -- Αν έχει αλλάξει κάποιο πεδίο, καταγραφή στο ιστορικό
    IF change_description <> '' THEN
        INSERT INTO `apk`.`history`
        (table_name, stoixeio_id, action, changed_by, change_date, changeh)
        VALUES
        ('performance_area', NEW.stoixeio_idStoixeio, 'UPDATE', change_user, NOW(), change_description);
    END IF;
END$$

DELIMITER ;


DELIMITER $$

CREATE TRIGGER prevent_last_performance_area_deletion
BEFORE DELETE ON `apk`.`performance_area`
FOR EACH ROW
BEGIN
    DECLARE performance_area_count INT;

    -- Υπολογισμός του αριθμού των εγγραφών για το συγκεκριμένο stoixeio
    SELECT COUNT(*)
    INTO performance_area_count
    FROM `apk`.`performance_area`
    WHERE `stoixeio_idStoixeio` = OLD.stoixeio_idStoixeio;

    -- Αν υπάρχει μόνο μία εγγραφή, ακυρώνεται η διαγραφή
    IF performance_area_count = 1 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Η τελευταία εγγραφή του χώρου επιτέλεσης για αυτό το στοιχείο δεν μπορεί να διαγραφεί.';
    END IF;
END$$

DELIMITER ;


DELIMITER $$

CREATE TRIGGER after_delete_performance_area
AFTER DELETE ON `apk`.`performance_area`
FOR EACH ROW
BEGIN
    DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);   
    DECLARE stoixeio_name VARCHAR(200);

    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

    -- Ανάκτηση του ονόματος του στοιχείου από τον πίνακα stoixeio
    SELECT name INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE idStoixeio = OLD.stoixeio_idStoixeio;

    -- Περιγραφή αλλαγής
    SET change_description = CONCAT(
        'Για το στοιχείο με όνομα "', stoixeio_name, 
        '" διαγράφηκε ο χώρος επιτέλεσης "', OLD.area, 
        '" με αιτιολόγηση: "', OLD.justification_performance_area, '".'
    );

    -- Εισαγωγή στο ιστορικό
    INSERT INTO `apk`.`history`
    (table_name, stoixeio_id, action, changed_by, change_date, changeh)
    VALUES
    ('performance_area', OLD.stoixeio_idStoixeio, 'DELETE', change_user, NOW(), change_description);
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER check_if_all_data_inserted_facilities
AFTER INSERT ON `apk`.`facilities`
FOR EACH ROW
BEGIN

	DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);
	DECLARE is_complete BOOLEAN;
    DECLARE current_is_temporary BOOLEAN;
    DECLARE stoixeio_name VARCHAR(200);

    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

    -- Ανάκτηση του ονόματος του στοιχείου από τον πίνακα stoixeio
    SELECT name INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE idStoixeio = NEW.stoixeio_idStoixeio;

	-- Αρχικοποίηση της περιγραφής αλλαγής
	SET change_description = CONCAT(
		'Για το στοιχείο με όνομα "', stoixeio_name, 
		'" εισήχθη νέα εγκατάσταση "', NEW.facility, 
		'" με αιτιολόγηση "', NEW.justification_facility, 
		'".'
	);

    -- Εισαγωγή στο ιστορικό
    INSERT INTO `apk`.`history`
    (table_name, stoixeio_id, action, changed_by, change_date, changeh)
    VALUES
    ('facilities', NEW.stoixeio_idStoixeio, 'INSERT', change_user, NOW(), change_description);


    -- Έλεγχος αν υπάρχει τουλάχιστον μία εγγραφή σε όλους τους σχετικούς πίνακες
    SET is_complete = (
       EXISTS (SELECT 1 FROM `apk`.`stoixeio_keywords` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`other_names` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`performance_area` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`facilities` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`product` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`equipment` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`importance` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`preservation` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_foreas` WHERE `stoixeio_id` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_fields_apk` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`evidence` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`user_stoixeio` WHERE `stoixeio_id` = NEW.stoixeio_idStoixeio)
       
       AND (
           -- Έλεγχος για locationDescription
           (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio) IS NOT NULL
           AND (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio) != ''
           OR 
           -- Αν locationDescription είναι NULL ή κενό, έλεγχος στο kalikratis για το id_location
           EXISTS (SELECT 1 FROM `apk`.`kalikratis` WHERE `location_id_location` = (SELECT id_location FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio))
       )
    );

    -- Ανάκτηση της τρέχουσας τιμής του is_temporary
    SELECT `is_temporary`
    INTO current_is_temporary
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;

    -- Ενημέρωση του πεδίου is_temporary εάν όλα τα δεδομένα είναι πλήρη και το is_temporary δεν είναι ήδη 0
    IF is_complete AND current_is_temporary != 0 THEN
        UPDATE `apk`.`stoixeio`
        SET `is_temporary` = 0
        WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;

	END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER after_update_facilities
AFTER UPDATE ON `apk`.`facilities`
FOR EACH ROW
BEGIN
    DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);
    DECLARE stoixeio_name VARCHAR(200);

    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

	-- Ανάκτηση του ονόματος του στοιχείου από τον πίνακα stoixeio
    SELECT name INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE idStoixeio = NEW.stoixeio_idStoixeio;
    
     -- Αρχικοποίηση της περιγραφής αλλαγής
    SET change_description = CONCAT('Για το στοιχείο με όνομα "', stoixeio_name, '" ');

    -- Έλεγχος αλλαγής στο πεδίο "facility"
    IF NEW.facility <> OLD.facility THEN
        SET change_description = CONCAT(change_description, 
            'άλλαξε η εγκατάσταση από "', OLD.facility, '" σε "', NEW.facility, '". ');
    END IF;

    -- Έλεγχος αλλαγής στο πεδίο "justification_facility"
    IF NEW.justification_facility <> OLD.justification_facility THEN
        SET change_description = CONCAT(change_description, 
            'αλλαξε η αιτιολόγηση για την εγκατάσταση "', OLD.facility, '" από "', OLD.justification_facility, '" σε "', NEW.justification_facility, '". ');
    END IF;

    -- Αν έχει αλλάξει κάποιο πεδίο, καταγραφή στο ιστορικό
    IF change_description <> '' THEN
        INSERT INTO `apk`.`history`
        (table_name, stoixeio_id, action, changed_by, change_date, changeh)
        VALUES
        ('facilities', NEW.stoixeio_idStoixeio, 'UPDATE', change_user, NOW(), change_description);
    END IF;
END$$

DELIMITER ;


DELIMITER $$

CREATE TRIGGER prevent_last_facilities_deletion
BEFORE DELETE ON `apk`.`facilities`
FOR EACH ROW
BEGIN
    DECLARE facilities_count INT;

    -- Υπολογισμός του αριθμού των εγγραφών για το συγκεκριμένο stoixeio
    SELECT COUNT(*)
    INTO facilities_count
    FROM `apk`.`facilities`
    WHERE `stoixeio_idStoixeio` = OLD.stoixeio_idStoixeio;

    -- Αν υπάρχει μόνο μία εγγραφή, ακυρώνεται η διαγραφή
    IF facilities_count = 1 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Η τελευταία εγγραφή εγκαταστάσεων για αυτό το στοιχείο δεν μπορεί να διαγραφεί.';
    END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER after_delete_facilities
AFTER DELETE ON `apk`.`facilities`
FOR EACH ROW
BEGIN
    DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);
    DECLARE stoixeio_name VARCHAR(200);

    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

    -- Ανάκτηση του ονόματος του στοιχείου από τον πίνακα stoixeio
    SELECT name INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE idStoixeio = OLD.stoixeio_idStoixeio;

    -- Περιγραφή αλλαγής
    SET change_description = CONCAT(
        'Για το στοιχείο με όνομα "', stoixeio_name, 
        '" διαγράφηκε η εγκατάσταση "', OLD.facility, 
        '" με αιτιολόγηση: "', OLD.justification_facility, '".'
    );

    -- Εισαγωγή στο ιστορικό
    INSERT INTO `apk`.`history`
    (table_name, stoixeio_id, action, changed_by, change_date, changeh)
    VALUES
    ('facilities', OLD.stoixeio_idStoixeio, 'DELETE', change_user, NOW(), change_description);
END$$

DELIMITER ;


DELIMITER $$

CREATE TRIGGER check_if_all_data_inserted_equipment
AFTER INSERT ON `apk`.`equipment`
FOR EACH ROW
BEGIN

	DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);
	DECLARE is_complete BOOLEAN;
    DECLARE current_is_temporary BOOLEAN;
	DECLARE stoixeio_name VARCHAR(200);

    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

    -- Ανάκτηση του ονόματος του στοιχείου από τον πίνακα stoixeio
    SELECT name INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE idStoixeio = NEW.stoixeio_idStoixeio;

	-- Αρχικοποίηση της περιγραφής αλλαγής
	SET change_description = CONCAT(
		'Για το στοιχείο με όνομα "', stoixeio_name, 
		'" εισήχθη νέος εξοπλισμός "', NEW.equipment, 
		'" με αιτιολόγηση "', NEW.justification_equipment, 
		'".'
	);

    -- Εισαγωγή στο ιστορικό
    INSERT INTO `apk`.`history`
    (table_name, stoixeio_id, action, changed_by, change_date, changeh)
    VALUES
    ('equipment', NEW.stoixeio_idStoixeio, 'INSERT', change_user, NOW(), change_description);


    -- Έλεγχος αν υπάρχει τουλάχιστον μία εγγραφή σε όλους τους σχετικούς πίνακες
    SET is_complete = (  
      EXISTS (SELECT 1 FROM `apk`.`stoixeio_keywords` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`other_names` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`performance_area` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`facilities` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`product` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`equipment` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`importance` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`preservation` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_foreas` WHERE `stoixeio_id` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_fields_apk` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`evidence` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`user_stoixeio` WHERE `stoixeio_id` = NEW.stoixeio_idStoixeio) 
       
       AND (
           -- Έλεγχος για locationDescription
           (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio) IS NOT NULL
           AND (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio) != ''
           OR 
           -- Αν locationDescription είναι NULL ή κενό, έλεγχος στο kalikratis για το id_location
           EXISTS (SELECT 1 FROM `apk`.`kalikratis` WHERE `location_id_location` = (SELECT id_location FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio))
       )
    );

    -- Ανάκτηση της τρέχουσας τιμής του is_temporary
    SELECT `is_temporary`
    INTO current_is_temporary
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;

    -- Ενημέρωση του πεδίου is_temporary εάν όλα τα δεδομένα είναι πλήρη και το is_temporary δεν είναι ήδη 0
    IF is_complete AND current_is_temporary != 0 THEN
        UPDATE `apk`.`stoixeio`
        SET `is_temporary` = 0
        WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;

	END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER after_update_equipment
AFTER UPDATE ON `apk`.`equipment`
FOR EACH ROW
BEGIN
    DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);
	DECLARE stoixeio_name VARCHAR(200);

    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

    -- Ανάκτηση του ονόματος του στοιχείου από τον πίνακα stoixeio
    SELECT name INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE idStoixeio = NEW.stoixeio_idStoixeio;

    -- Αρχικοποίηση της περιγραφής αλλαγής
    SET change_description = CONCAT('Για το στοιχείο με όνομα "', stoixeio_name, '" ');

    -- Έλεγχος αλλαγής στο πεδίο "equipment"
    IF NEW.equipment <> OLD.equipment THEN
        SET change_description = CONCAT(change_description, 
            'άλλαξε ο εξοπλισμός από "', OLD.equipment, '" σε "', NEW.equipment, '". ');
    END IF;

    -- Έλεγχος αλλαγής στο πεδίο "justification_equipment"
    IF NEW.justification_equipment <> OLD.justification_equipment THEN
        SET change_description = CONCAT(change_description, 
            'άλλαξε η αιτιολόγηση για τον εξοπλισμό "', OLD.equipment, '" από "', OLD.justification_equipment, '" σε "', NEW.justification_equipment, '". ');
    END IF;

    -- Αν έχει αλλάξει κάποιο πεδίο, καταγραφή στο ιστορικό
    IF change_description <> '' THEN
        INSERT INTO `apk`.`history`
        (table_name, stoixeio_id, action, changed_by, change_date, changeh)
        VALUES
        ('equipment', NEW.stoixeio_idStoixeio, 'UPDATE', change_user, NOW(), change_description);
    END IF;
END$$

DELIMITER ;


DELIMITER $$

CREATE TRIGGER prevent_last_equipment_deletion
BEFORE DELETE ON `apk`.`equipment`
FOR EACH ROW
BEGIN
    DECLARE equipment_count INT;

    -- Υπολογισμός του αριθμού των εγγραφών για το συγκεκριμένο stoixeio
    SELECT COUNT(*)
    INTO equipment_count
    FROM `apk`.`equipment`
    WHERE `stoixeio_idStoixeio` = OLD.stoixeio_idStoixeio;

    -- Αν υπάρχει μόνο μία εγγραφή, ακυρώνεται η διαγραφή
    IF equipment_count = 1 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Η τελευταία εγγραφή του εξοπλισμού για αυτό το στοιχείο δεν μπορεί να διαγραφεί.';
    END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER after_delete_equipment
AFTER DELETE ON `apk`.`equipment`
FOR EACH ROW
BEGIN
    DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);
    DECLARE stoixeio_name VARCHAR(200);

    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

    -- Ανάκτηση του ονόματος του στοιχείου από τον πίνακα stoixeio
    SELECT name INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE idStoixeio = OLD.stoixeio_idStoixeio;

    -- Περιγραφή αλλαγής
    SET change_description = CONCAT(
        'Για το στοιχείο με όνομα "', stoixeio_name, 
        '" διαγράφηκε ο εξοπλισμός "', OLD.equipment, 
        '" με αιτιολόγηση: "', OLD.justification_equipment, '".'
    );
    
    -- Εισαγωγή στο ιστορικό
    INSERT INTO `apk`.`history`
    (table_name, stoixeio_id, action, changed_by, change_date, changeh)
    VALUES
    ('equipment', OLD.stoixeio_idStoixeio, 'DELETE', change_user, NOW(), change_description);
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER check_if_all_data_product
AFTER INSERT ON `apk`.`product`
FOR EACH ROW
BEGIN

	DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);
	DECLARE is_complete BOOLEAN;
    DECLARE current_is_temporary BOOLEAN;
	DECLARE stoixeio_name VARCHAR(200);

    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

    -- Ανάκτηση του ονόματος του στοιχείου από τον πίνακα stoixeio
    SELECT name INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE idStoixeio = NEW.stoixeio_idStoixeio;

	-- Αρχικοποίηση της περιγραφής αλλαγής
	SET change_description = CONCAT(
		'Για το στοιχείο με όνομα "', stoixeio_name, 
		'" εισήχθη νέο προϊόν "', NEW.product, 
		'" με αιτιολόγηση "', NEW.justification_product, 
		'".'
	);

    -- Εισαγωγή στο ιστορικό
    INSERT INTO `apk`.`history`
    (table_name, stoixeio_id, action, changed_by, change_date, changeh)
    VALUES
    ('product', NEW.stoixeio_idStoixeio, 'INSERT', change_user, NOW(), change_description);

    -- Έλεγχος αν υπάρχει τουλάχιστον μία εγγραφή σε όλους τους σχετικούς πίνακες
     SET is_complete = (  
      EXISTS (SELECT 1 FROM `apk`.`stoixeio_keywords` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`other_names` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`performance_area` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`facilities` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`product` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`equipment` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`importance` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`preservation` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_foreas` WHERE `stoixeio_id` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_fields_apk` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`evidence` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`user_stoixeio` WHERE `stoixeio_id` = NEW.stoixeio_idStoixeio)
       
       AND (
           -- Έλεγχος για locationDescription
           (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio) IS NOT NULL
           AND (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio) != ''
           OR 
           -- Αν locationDescription είναι NULL ή κενό, έλεγχος στο kalikratis για το id_location
           EXISTS (SELECT 1 FROM `apk`.`kalikratis` WHERE `location_id_location` = (SELECT id_location FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio))
       )
    );

    -- Ανάκτηση της τρέχουσας τιμής του is_temporary
    SELECT `is_temporary`
    INTO current_is_temporary
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;

    -- Ενημέρωση του πεδίου is_temporary εάν όλα τα δεδομένα είναι πλήρη και το is_temporary δεν είναι ήδη 0
    IF is_complete AND current_is_temporary != 0 THEN
        UPDATE `apk`.`stoixeio`
        SET `is_temporary` = 0
        WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;

	END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER after_update_product
AFTER UPDATE ON `apk`.`product`
FOR EACH ROW
BEGIN
    DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);
    DECLARE stoixeio_name VARCHAR(200);

    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

    -- Ανάκτηση του ονόματος του στοιχείου από τον πίνακα stoixeio
    SELECT name INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE idStoixeio = NEW.stoixeio_idStoixeio;

    -- Αρχικοποίηση της περιγραφής αλλαγής
    SET change_description = CONCAT('Για το στοιχείο με όνομα "', stoixeio_name, '" ');

    -- Έλεγχος αλλαγής στο πεδίο "product"
    IF NEW.product <> OLD.product THEN
        SET change_description = CONCAT(change_description, 
            'άλλαξε το προϊόν από "', OLD.product, '" σε "', NEW.product, '". ');
    END IF;

    -- Έλεγχος αλλαγής στο πεδίο "justification_product"
    IF NEW.justification_product <> OLD.justification_product THEN
        SET change_description = CONCAT(change_description, 
            'άλλαξε η αιτιολόγηση για το προϊόν "', OLD.product, '" από "', OLD.justification_product, '" σε "', NEW.justification_product, '". ');
    END IF;

    -- Αν έχει αλλάξει κάποιο πεδίο, καταγραφή στο ιστορικό
    IF change_description <> '' THEN
        INSERT INTO `apk`.`history`
        (table_name, stoixeio_id, action, changed_by, change_date, changeh)
        VALUES
        ('product', NEW.stoixeio_idStoixeio, 'UPDATE', change_user, NOW(), change_description);
    END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER prevent_last_product_deletion
BEFORE DELETE ON `apk`.`product`
FOR EACH ROW
BEGIN
    DECLARE product_count INT;

    -- Υπολογισμός του αριθμού των εγγραφών για το συγκεκριμένο stoixeio
    SELECT COUNT(*)
    INTO product_count
    FROM `apk`.`product`
    WHERE `stoixeio_idStoixeio` = OLD.stoixeio_idStoixeio;

    -- Αν υπάρχει μόνο μία εγγραφή, ακυρώνεται η διαγραφή
    IF product_count = 1 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Η τελευταία εγγραφή προϊόντος για αυτό το στοιχείο δεν μπορεί να διαγραφεί.';
    END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER after_delete_product
AFTER DELETE ON `apk`.`product`
FOR EACH ROW
BEGIN
    DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);
    DECLARE stoixeio_name VARCHAR(200);

    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

    -- Ανάκτηση του ονόματος του στοιχείου από τον πίνακα stoixeio
    SELECT name INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE idStoixeio = OLD.stoixeio_idStoixeio;

    -- Περιγραφή αλλαγής
    SET change_description = CONCAT(
        'Για το στοιχείο με όνομα "', stoixeio_name, 
        '" διαγράφηκε το προϊόν "', OLD.product, 
        '" με αιτιολόγηση: "', OLD.justification_product, '".'
    );

    -- Εισαγωγή στο ιστορικό
    INSERT INTO `apk`.`history`
    (table_name, stoixeio_id, action, changed_by, change_date, changeh)
    VALUES
    ('product', OLD.stoixeio_idStoixeio, 'DELETE', change_user, NOW(), change_description);
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER check_if_all_data_inserted_importance
AFTER INSERT ON `apk`.`importance`
FOR EACH ROW
BEGIN

	DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);
	DECLARE is_complete BOOLEAN;
    DECLARE current_is_temporary BOOLEAN;
    DECLARE stoixeio_name VARCHAR(200);

    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

    -- Ανάκτηση του ονόματος του στοιχείου
    SELECT `name` INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;

    -- Περιγραφή αλλαγής
    SET change_description = CONCAT(
        'Εισήχθησαν για το στοιχείο με όνομα "', stoixeio_name, '" τα εξής δεδομένα: ',
        'Σημασία για τα μέλη της κοινότητας: "', NEW.members, '". ',
        'Σημασία για την σύγχρονη Ελληνική κοινωνία: "', NEW.society, '". ',
        'Συμμετοχή της κοινότητας στην προετοιμασία της εγγραφής του στο Εθνικό Ευρετήριο Άυλης Πολιτιστικής Κληρονομιάς της Ελλάδας: "', NEW.community, '".'
    );

    -- Εισαγωγή στο ιστορικό
    INSERT INTO `apk`.`history`
    (table_name, stoixeio_id, action, changed_by, change_date, changeh)
    VALUES
    ('importance', NEW.stoixeio_idStoixeio, 'INSERT', change_user, NOW(), change_description);


    -- Έλεγχος αν υπάρχει τουλάχιστον μία εγγραφή σε όλους τους σχετικούς πίνακες
    SET is_complete = (
       EXISTS (SELECT 1 FROM `apk`.`stoixeio_keywords` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`other_names` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`performance_area` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`facilities` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`product` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`equipment` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`importance` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`preservation` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_foreas` WHERE `stoixeio_id` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_fields_apk` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`evidence` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`user_stoixeio` WHERE `stoixeio_id` = NEW.stoixeio_idStoixeio) 
       
       AND (
           -- Έλεγχος για locationDescription
           (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio) IS NOT NULL
           AND (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio) != ''
           OR 
           -- Αν locationDescription είναι NULL ή κενό, έλεγχος στο kalikratis για το id_location
           EXISTS (SELECT 1 FROM `apk`.`kalikratis` WHERE `location_id_location` = (SELECT id_location FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio))
       )
    );

    -- Ανάκτηση της τρέχουσας τιμής του is_temporary
    SELECT `is_temporary`
    INTO current_is_temporary
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;

    -- Ενημέρωση του πεδίου is_temporary εάν όλα τα δεδομένα είναι πλήρη και το is_temporary δεν είναι ήδη 0
    IF is_complete AND current_is_temporary != 0 THEN
        UPDATE `apk`.`stoixeio`
        SET `is_temporary` = 0
        WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;

	END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER after_update_importance
AFTER UPDATE ON `apk`.`importance`
FOR EACH ROW
BEGIN
    DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);
	DECLARE stoixeio_name VARCHAR(200);
    
    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

    -- Ανάκτηση του ονόματος του στοιχείου από τον πίνακα stoixeio
    SELECT `name` INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;

    -- Αρχικοποίηση της περιγραφής αλλαγής
    SET change_description = CONCAT('Για το στοιχείο με όνομα "', stoixeio_name, '" , ');


    -- Έλεγχος αλλαγής στο πεδίο "members"
    IF NEW.members <> OLD.members THEN
        SET change_description = CONCAT(change_description, 
            'ενημερώθηκαν τα δεδομένα για τη σημασία για τα μέλη της κοινότητας από "', OLD.members, '" σε "', NEW.members, '". ');
    END IF;

    -- Έλεγχος αλλαγής στο πεδίο "society"
    IF NEW.society <> OLD.society THEN
        SET change_description = CONCAT(change_description, 
            'ενημερώθηκαν τα δεδομένα για τη σημασία για την σύγχρονη Ελληνική κοινωνία από "', OLD.society, '" σε "', NEW.society, '". ');
    END IF;

    -- Έλεγχος αλλαγής στο πεδίο "community"
    IF NEW.community <> OLD.community THEN
        SET change_description = CONCAT(change_description, 
           'ενημερώθηκαν τα δεδομένα για τη συμμετοχή της κοινότητας στην προετοιμασία της εγγραφής του στο Εθνικό Ευρετήριο Άυλης Πολιτιστικής Κληρονομιάς της Ελλάδας από "', OLD.community, '" σε "', NEW.community, '". ');
    END IF;

    -- Αν έχει αλλάξει κάποιο πεδίο, καταγραφή στο ιστορικό
    IF change_description <> '' THEN
        INSERT INTO `apk`.`history`
        (table_name, stoixeio_id, action, changed_by, change_date, changeh)
        VALUES
        ('importance', NEW.stoixeio_idStoixeio, 'UPDATE', change_user, NOW(), change_description);
    END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER prevent_deletion_of_importance
BEFORE DELETE ON `apk`.`importance`
FOR EACH ROW
BEGIN
   
    DECLARE count_stoixeio INT;
    
    -- Ελέγχουμε αν υπάρχει το στοιχείο στον πίνακα `stoixeio`
    SELECT COUNT(*) INTO count_stoixeio
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = OLD.stoixeio_idStoixeio;
    
    -- Αν βρεθεί τουλάχιστον μια εγγραφή στον πίνακα `stoixeio`, δεν επιτρέπουμε τη διαγραφή
    IF count_stoixeio > 0 THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Δεν επιτρέπεται η διαγραφή της εγγραφής από τον πίνακα importance για αυτό το στοιχείο.';
    END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER check_if_all_data_inserted_preservation
AFTER INSERT ON `apk`.`preservation`
FOR EACH ROW
BEGIN

	DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);
	DECLARE is_complete BOOLEAN;
    DECLARE current_is_temporary BOOLEAN;
    DECLARE stoixeio_name VARCHAR(200);

    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

    -- Ανάκτηση του ονόματος του στοιχείου
    SELECT `name` INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;

    -- Περιγραφή αλλαγής
    SET change_description = CONCAT(
        'Εισήχθησαν για το στοιχείο με όνομα "', stoixeio_name, '" τα εξής δεδομένα: ',
        'Τρόποι μετάδοσης στις νεότερες γενιές: "', NEW.transmission, '". ',
        'Μέτρα διαφύλαξης/ανάδειξης του στοιχείου της Άυλης Πολιτιστικής Κληρονομιάς που έχουν ληφθεί στο παρελθόν ή που εφαρμόζονται σήμερα: "', NEW.existing, '". ',
        'Μέτρα διαφύλαξης/ανάδειξης που προτείνεται να εφαρμοστούν στο μέλλον: "', NEW.future, '".'
    );
    -- Καταγραφή στο ιστορικό
    INSERT INTO `apk`.`history`
    (table_name, stoixeio_id, action, changed_by, change_date, changeh)
    VALUES
    ('preservation', NEW.stoixeio_idStoixeio, 'INSERT', change_user, NOW(), change_description);

    -- Έλεγχος αν υπάρχει τουλάχιστον μία εγγραφή σε όλους τους σχετικούς πίνακες
	SET is_complete = (
       EXISTS (SELECT 1 FROM `apk`.`stoixeio_keywords` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`other_names` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`performance_area` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`facilities` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`product` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`equipment` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`importance` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`preservation` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_foreas` WHERE `stoixeio_id` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_fields_apk` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`evidence` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`user_stoixeio` WHERE `stoixeio_id` = NEW.stoixeio_idStoixeio) 
       
       AND (
           -- Έλεγχος για locationDescription
           (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio) IS NOT NULL
           AND (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio) != ''
           OR 
           -- Αν locationDescription είναι NULL ή κενό, έλεγχος στο kalikratis για το id_location
           EXISTS (SELECT 1 FROM `apk`.`kalikratis` WHERE `location_id_location` = (SELECT id_location FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio))
       )
    );

    -- Ανάκτηση της τρέχουσας τιμής του is_temporary
    SELECT `is_temporary`
    INTO current_is_temporary
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;

    -- Ενημέρωση του πεδίου is_temporary εάν όλα τα δεδομένα είναι πλήρη και το is_temporary δεν είναι ήδη 0
    IF is_complete AND current_is_temporary != 0 THEN
        UPDATE `apk`.`stoixeio`
        SET `is_temporary` = 0
        WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;
   END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER after_update_preservation
AFTER UPDATE ON `apk`.`preservation`
FOR EACH ROW
BEGIN
    DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);
    DECLARE stoixeio_name VARCHAR(200);

    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

	-- Ανάκτηση του ονόματος του στοιχείου από τον πίνακα stoixeio
    SELECT `name` INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;
    
     -- Αρχικοποίηση της περιγραφής αλλαγής
    SET change_description = CONCAT('Για το στοιχείο με όνομα "', stoixeio_name, '": ');

    -- Έλεγχος αλλαγής στο πεδίο "transmission"
    IF NEW.transmission <> OLD.transmission THEN
        SET change_description = CONCAT(change_description, 
            'ενημερώθηκαν τα δεδομένα για τους τρόπους μετάδοσης στις νεότερες γενιές από "', OLD.transmission, '" σε "', NEW.transmission, '". ');
    END IF;

    -- Έλεγχος αλλαγής στο πεδίο "existing"
    IF NEW.existing <> OLD.existing THEN
        SET change_description = CONCAT(change_description, 
            'ενημερώθηκαν τα δεδομένα για τα μέτρα διαφύλαξης/ανάδειξης του στοιχείου της Άυλης Πολιτιστικής Κληρονομιάς που έχουν ληφθεί στο παρελθόν ή που εφαρμόζονται σήμερα από "', OLD.existing, '" σε "', NEW.existing, '". ');
    END IF;

    -- Έλεγχος αλλαγής στο πεδίο "future"
    IF NEW.future <> OLD.future THEN
        SET change_description = CONCAT(change_description, 
            'ενημερώθηκαν τα δεδομένα για τα μέτρα διαφύλαξης/ανάδειξης που προτείνεται να εφαρμοστούν στο μέλλοναπό "', OLD.future, '" σε "', NEW.future, '". ');
    END IF;

    -- Αν έχει αλλάξει κάποιο πεδίο, καταγραφή στο ιστορικό
    IF change_description <> '' THEN
        INSERT INTO `apk`.`history`
        (table_name, stoixeio_id, action, changed_by, change_date, changeh)
        VALUES
        ('preservation', NEW.stoixeio_idStoixeio, 'UPDATE', change_user, NOW(), change_description);
    END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER prevent_deletion_of_preservation
BEFORE DELETE ON `apk`.`preservation`
FOR EACH ROW
BEGIN
   
    DECLARE count_stoixeio INT;
    
    -- Ελέγχουμε αν υπάρχει το στοιχείο στον πίνακα `stoixeio`
    SELECT COUNT(*) INTO count_stoixeio
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = OLD.stoixeio_idStoixeio;
    
    -- Αν βρεθεί τουλάχιστον μια εγγραφή στον πίνακα `stoixeio`, δεν επιτρέπουμε τη διαγραφή
    IF count_stoixeio > 0 THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Δεν επιτρέπεται η διαγραφή της εγγραφής από τον πίνακα preservation για αυτό το στοιχείο.';
    END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER after_update_foreas
AFTER UPDATE ON `apk`.`foreas`
FOR EACH ROW
BEGIN
    DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);
    
    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

    -- Εισαγωγή γενικής περιγραφής για τον φορέα με το νέο όνομα
    SET change_description = CONCAT('Για τον φορέα με όνομα "', NEW.namef, '", έγιναν οι εξής αλλαγές: ');

    -- Ελέγχουμε ποια πεδία έχουν αλλάξει και προσθέτουμε τις αλλαγές στην περιγραφή
    IF OLD.namef != NEW.namef THEN
        SET change_description = CONCAT(change_description, 'Το όνομα άλλαξε από "', OLD.namef, '" σε "', NEW.namef, '". ');
    END IF;

    IF OLD.descriptionf != NEW.descriptionf THEN
        SET change_description = CONCAT(change_description, 'Η περιγραφή άλλαξε από "', OLD.descriptionf, '" σε "', NEW.descriptionf, '". ');
    END IF;

    IF OLD.address != NEW.address THEN
        SET change_description = CONCAT(change_description, 'Η διεύθυνση άλλαξε από "', OLD.address, '" σε "', NEW.address, '". ');
    END IF;

    IF OLD.city != NEW.city THEN
        SET change_description = CONCAT(change_description, 'Η πόλη άλλαξε από "', OLD.city, '" σε "', NEW.city, '". ');
    END IF;

    IF OLD.telephone != NEW.telephone THEN
        SET change_description = CONCAT(change_description, 'Ο τηλεφωνικός αριθμός άλλαξε από "', OLD.telephone, '" σε "', NEW.telephone, '". ');
    END IF;

    IF OLD.email != NEW.email THEN
        SET change_description = CONCAT(change_description, 'Το email άλλαξε από "', OLD.email, '" σε "', NEW.email, '". ');
    END IF;

    IF OLD.TK != NEW.TK THEN
        SET change_description = CONCAT(change_description, 'Ο ΤΚ άλλαξε από "', OLD.TK, '" σε "', NEW.TK, '". ');
    END IF;

    IF OLD.website != NEW.website THEN
        SET change_description = CONCAT(change_description, 'Η Ιστοσελίδα άλλαξε από "', OLD.website, '" σε "', NEW.website, '". ');
    END IF;

    -- Καταγραφή στο history για την ενημέρωση του φορέα
    INSERT INTO `apk`.`history` (table_name, stoixeio_id, action, changed_by, change_date, changeh)
    VALUES ('foreas', NULL, 'UPDATE', change_user, NOW(), change_description);
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER prevent_foreas_deletion_if_unique
BEFORE DELETE ON `apk`.`foreas`
FOR EACH ROW
BEGIN
    -- Έλεγχος αν υπάρχει κάποιο στοιχείο που συνδέεται αποκλειστικά με αυτόν τον forea
    IF EXISTS (
        SELECT 1
        FROM `apk`.`stoixeio_foreas` sf
        WHERE sf.foreas_id = OLD.idforeas
        AND (
            SELECT COUNT(*)
            FROM `apk`.`stoixeio_foreas`
            WHERE stoixeio_id = sf.stoixeio_id
        ) = 1
    ) THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Δεν επιτρέπεται η διαγραφή του φορέα, επειδή είναι ο μοναδικός συσχετισμένος με κάποιο στοιχείο.';
    END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER check_if_all_data_inserted_stoixeio_foreas
AFTER INSERT ON `apk`.`stoixeio_foreas`
FOR EACH ROW
BEGIN

	DECLARE change_description TEXT;
	DECLARE is_complete BOOLEAN;
    DECLARE current_is_temporary BOOLEAN;
    DECLARE foreas_name VARCHAR(200);
    DECLARE foreas_description VARCHAR(600);
    DECLARE foreas_address VARCHAR(200);
	DECLARE foreas_city VARCHAR(100);
    DECLARE foreas_telephone VARCHAR(20);
    DECLARE foreas_email VARCHAR(40);
    DECLARE foreas_TK VARCHAR(5);
    DECLARE foreas_website VARCHAR(200);
    DECLARE change_user VARCHAR(255);
    DECLARE stoixeio_name VARCHAR(200);
	
    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

    -- Ανάκτηση όλων των στοιχείων του φορέα από τον πίνακα foreas
    SELECT `namef`, `descriptionf`, `address`, `city`, `telephone`, `email`, `TK`, `website`
    INTO foreas_name, foreas_description, foreas_address, foreas_city, foreas_telephone, foreas_email, foreas_TK, foreas_website
    FROM `apk`.`foreas`
    WHERE `idforeas` = NEW.foreas_id;

	-- Ανάκτηση του ονόματος του στοιχείου
	SELECT `name`
	INTO stoixeio_name
	FROM `apk`.`stoixeio`
	WHERE `idStoixeio` = NEW.stoixeio_id;
    
	-- Δημιουργία περιγραφής αλλαγής
	SET change_description = CONCAT(
		'Προστέθηκε φορέας με όνομα: "', foreas_name, '" και τα εξής στοιχεία: ',
		'Περιγραφή: "', foreas_description, '", ',
        'Email: "', foreas_email, '", ',
		'Διεύθυνση: "', foreas_address, '", ',
		'Πόλη: "', foreas_city, '", ',
		'Τ.Κ.: "', foreas_TK, '", ',
		'Τηλέφωνο: "', foreas_telephone, '", ',
		'Ιστοσελίδα: "', foreas_website, '" για το στοιχείο με όνομα: "', stoixeio_name, '"'
	);

    -- Καταγραφή στο history για την εισαγωγή
    INSERT INTO `apk`.`history` (table_name, stoixeio_id, action, changed_by, change_date, changeh)
    VALUES ('stoixeio_foreas', NEW.stoixeio_id, 'INSERT', change_user, NOW(), change_description);

    -- Έλεγχος αν υπάρχει τουλάχιστον μία εγγραφή σε όλους τους σχετικούς πίνακες
    SET is_complete = (  
      EXISTS (SELECT 1 FROM `apk`.`stoixeio_keywords` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_id)
       AND EXISTS (SELECT 1 FROM `apk`.`other_names` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_id)
       AND EXISTS (SELECT 1 FROM `apk`.`performance_area` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_id)
       AND EXISTS (SELECT 1 FROM `apk`.`facilities` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_id)
       AND EXISTS (SELECT 1 FROM `apk`.`product` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_id)
       AND EXISTS (SELECT 1 FROM `apk`.`equipment` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_id)
       AND EXISTS (SELECT 1 FROM `apk`.`importance` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_id)
       AND EXISTS (SELECT 1 FROM `apk`.`preservation` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_id)
       AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_foreas` WHERE `stoixeio_id` = NEW.stoixeio_id)
       AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_fields_apk` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_id)
       AND EXISTS (SELECT 1 FROM `apk`.`evidence` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_id)
       AND EXISTS (SELECT 1 FROM `apk`.`user_stoixeio` WHERE `stoixeio_id` = NEW.stoixeio_id) 
       
       AND (
           -- Έλεγχος για locationDescription
           (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_id) IS NOT NULL
           AND (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_id) != ''
           OR 
           -- Αν locationDescription είναι NULL ή κενό, έλεγχος στο kalikratis για το id_location
           EXISTS (SELECT 1 FROM `apk`.`kalikratis` WHERE `location_id_location` = (SELECT id_location FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_id))
       )
     );

    -- Ανάκτηση της τρέχουσας τιμής του is_temporary
    SELECT `is_temporary`
    INTO current_is_temporary
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = NEW.stoixeio_id;

    -- Ενημέρωση του πεδίου is_temporary εάν όλα τα δεδομένα είναι πλήρη και το is_temporary δεν είναι ήδη 0
    IF is_complete AND current_is_temporary != 0 THEN
        UPDATE `apk`.`stoixeio`
        SET `is_temporary` = 0
        WHERE `idStoixeio` = NEW.stoixeio_id;
	END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER prevent_single_stoixeio_foreas_deletion
BEFORE DELETE ON `apk`.`stoixeio_foreas`
FOR EACH ROW
BEGIN
    DECLARE foreas_count INT;

    -- Υπολογισμός του αριθμού των εγγραφών για το συγκεκριμένο stoixeio
    SELECT COUNT(*)
    INTO foreas_count
    FROM `apk`.`stoixeio_foreas`
    WHERE `stoixeio_id` = OLD.stoixeio_id;

    -- Αν υπάρχει μόνο μία εγγραφή, ακυρώνεται η διαγραφή
    IF foreas_count = 1 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Η τελευταία εγγραφή φορέα για αυτό το στοιχείο δεν μπορεί να διαγραφεί.';
    END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER delete_foreas
AFTER DELETE ON `apk`.`stoixeio_foreas`
FOR EACH ROW
BEGIN

	DECLARE change_description TEXT;
    DECLARE foreas_name VARCHAR(200);
    DECLARE foreas_description VARCHAR(600);
    DECLARE foreas_address VARCHAR(200);
    DECLARE foreas_city VARCHAR(100);
    DECLARE foreas_telephone VARCHAR(20);
    DECLARE foreas_email VARCHAR(40);
    DECLARE foreas_TK VARCHAR(5);
    DECLARE foreas_website VARCHAR(200);
    DECLARE change_user VARCHAR(255);
    DECLARE stoixeio_name VARCHAR(200);

    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

    -- Ανάκτηση όλων των στοιχείων του φορέα από τον πίνακα foreas
    SELECT `namef`, `descriptionf`, `address`, `city`, `telephone`, `email`, `TK`, `website`
    INTO foreas_name, foreas_description, foreas_address, foreas_city, foreas_telephone, foreas_email, foreas_TK, foreas_website
    FROM `apk`.`foreas`
    WHERE `idforeas` = OLD.foreas_id;

	-- Ανάκτηση του ονόματος του στοιχείου
	SELECT `name`
	INTO stoixeio_name
	FROM `apk`.`stoixeio`
	WHERE `idStoixeio` = OLD.stoixeio_id;
    
	-- Δημιουργία περιγραφής αλλαγής
	SET change_description = CONCAT(
		'Διαγράφηκε φορέας με όνομα: "', foreas_name, '" και τα εξής στοιχεία: ',
		'Περιγραφή: "', foreas_description, '", ',
        'Email: "', foreas_email, '", ',
		'Διεύθυνση: "', foreas_address, '", ',
		'Πόλη: "', foreas_city, '", ',
		'Τ.Κ.: "', foreas_TK, '", ',
		'Τηλέφωνο: "', foreas_telephone, '", ',
		'Ιστοσελίδα: "', foreas_website, '" για το στοιχείο με όνομα: "', stoixeio_name, '"'
	);
    
    -- Καταγραφή στο history για την διαγραφή
    INSERT INTO `apk`.`history` (table_name, stoixeio_id, action, changed_by, change_date, changeh)
    VALUES ('stoixeio_foreas', OLD.stoixeio_id, 'DELETE', change_user, NOW(), change_description);
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER prevent_fields_apk_deletion
BEFORE DELETE ON `apk`.`fields_apk`
FOR EACH ROW
BEGIN
   
    SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = 'Δεν επιτρέπεται η διαγραφή πεδίων ΑΠΚ.';
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER `check_justification_on_insert`
BEFORE INSERT ON `apk`.`stoixeio_fields_apk`
FOR EACH ROW
BEGIN
    -- Έλεγχος αν το πεδίο field_apk έχει την τιμή "άλλο"
    DECLARE field_apk_value ENUM('προφορικές παραδόσεις και εκφράσεις', 'επιτελεστικές τέχνες', 'κοινωνικές πρακτικές-τελετουργίες-εορταστικές εκδηλώσεις', 'γνώσεις και πρακτικές που αφορούν τη φύση και το σύμπαν', 'τεχνογνωσία που συνδέεται με την παραδοσιακή χειροτεχνία', 'άλλο');
    
    SELECT `field_apk` INTO field_apk_value
    FROM `apk`.`fields_apk`
    WHERE `idfields_apk` = NEW.fields_apk_idfields_apk;
    
    -- Αν η τιμή είναι "άλλο" και το justification είναι κενό, σφάλμα
    IF field_apk_value = 'άλλο' AND (NEW.justification IS NULL OR NEW.justification = '') THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Η αιτιολόγηση είναι υποχρεωτική όταν επιλέγεται "άλλο" στο πεδίο ΑΠΚ.';
    END IF;
END $$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER check_if_all_data_inserted_stoixeio_fields_apk
AFTER INSERT ON `apk`.`stoixeio_fields_apk`
FOR EACH ROW
BEGIN

	DECLARE change_description TEXT;
	DECLARE is_complete BOOLEAN;
    DECLARE current_is_temporary BOOLEAN;
	DECLARE field_name VARCHAR(255);
    DECLARE stoixeio_name VARCHAR(200);
    DECLARE change_user VARCHAR(255);

    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

    -- Ανάκτηση του field_apk που συνδέεται με την εισαγωγή
    SELECT `field_apk`
    INTO field_name
    FROM `apk`.`fields_apk`
    WHERE `idfields_apk` = NEW.fields_apk_idfields_apk;

	-- Ανάκτηση του ονόματος του στοιχείου
    SELECT `name`
    INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;
    
    -- Δημιουργία περιγραφής αλλαγής
    SET change_description = CONCAT(
        'Για το στοιχείο με όνομα "', stoixeio_name, '" προστέθηκε το πεδίο ΑΠΚ: "', field_name, '"',
        IF(NEW.justification IS NOT NULL AND NEW.justification != '', 
           CONCAT(' με αιτιολόγηση: "', NEW.justification, '"'),
           '')
    );

    -- Καταγραφή στο history
    INSERT INTO `apk`.`history` (table_name, stoixeio_id, action, changed_by, change_date, changeh) 
    VALUES ('stoixeio_fields_apk', NEW.stoixeio_idStoixeio, 'INSERT', change_user, NOW(), change_description);

    -- Έλεγχοι για όλους τους πίνακες
    SET is_complete = ( 
       EXISTS (SELECT 1 FROM `apk`.`stoixeio_keywords` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`other_names` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`performance_area` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`facilities` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`product` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`equipment` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`importance` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`preservation` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_foreas` WHERE `stoixeio_id` = NEW.stoixeio_idStoixeio)
	   AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_fields_apk` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`user_stoixeio` WHERE `stoixeio_id` = NEW.stoixeio_idStoixeio)
       AND EXISTS (SELECT 1 FROM `apk`.`evidence` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
       
       AND (
           -- Έλεγχος για locationDescription
           (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio) IS NOT NULL
           AND (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio) != ''
           OR 
           -- Αν locationDescription είναι NULL ή κενό, έλεγχος στο kalikratis
           EXISTS (SELECT 1 FROM `apk`.`kalikratis` WHERE `location_id_location` = (SELECT id_location FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio))
       )
    );

    -- Ανάκτηση της τρέχουσας τιμής του is_temporary
    SELECT `is_temporary`
    INTO current_is_temporary
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;

    -- Ενημέρωση του πεδίου is_temporary εάν όλα τα δεδομένα είναι πλήρη και το is_temporary δεν είναι ήδη 0
    IF is_complete AND current_is_temporary != 0 THEN
        UPDATE `apk`.`stoixeio`
        SET `is_temporary` = 0
        WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;
	END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER `check_justification_not_empty_on_update`
BEFORE UPDATE ON `apk`.`stoixeio_fields_apk`
FOR EACH ROW
BEGIN
    -- Έλεγχος αν το πεδίο field_apk έχει την τιμή "άλλο"
    DECLARE field_apk_value ENUM('προφορικές παραδόσεις και εκφράσεις', 'επιτελεστικές τέχνες', 'κοινωνικές πρακτικές-τελετουργίες-εορταστικές εκδηλώσεις', 'γνώσεις και πρακτικές που αφορούν τη φύση και το σύμπαν', 'τεχνογνωσία που συνδέεται με την παραδοσιακή χειροτεχνία', 'άλλο');
    
    SELECT `field_apk` INTO field_apk_value
    FROM `apk`.`fields_apk`
    WHERE `idfields_apk` = NEW.fields_apk_idfields_apk;
    
    -- Αν η τιμή είναι "άλλο" και το justification γίνεται κενό, αποτρέπεται η ενημέρωση
    IF field_apk_value = 'άλλο' AND (NEW.justification IS NULL OR NEW.justification = '') THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Η αιτιολόγηση δεν μπορεί να γίνει κενή όταν το πεδίο ΑΠΚ είναι "άλλο".';
    END IF;
END $$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER after_update_stoixeio_fields_apk
AFTER UPDATE ON `apk`.`stoixeio_fields_apk`
FOR EACH ROW
BEGIN
    DECLARE field_name VARCHAR(255);
    DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);
	DECLARE stoixeio_name VARCHAR(200);

    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

    -- Ανάκτηση του field_apk που συνδέεται με την εγγραφή
    SELECT `field_apk`
    INTO field_name
    FROM `apk`.`fields_apk`
    WHERE `idfields_apk` = NEW.fields_apk_idfields_apk;

    -- Ανάκτηση του ονόματος του στοιχείου
    SELECT `name`
    INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;

    -- Έλεγχος για αλλαγές στο justification
    IF (OLD.justification IS NULL AND NEW.justification IS NOT NULL) OR
       (OLD.justification IS NOT NULL AND NEW.justification IS NULL) OR
       (OLD.justification != NEW.justification) THEN

        SET change_description = CONCAT(
            'Στο στοιχείο με όνομα "', stoixeio_name, '" ',
            'ενημερώθηκε η αιτιολόγηση του πεδίου "', field_name, '" ',
            'από "', IFNULL(OLD.justification, 'NULL'), '" ',
            'σε "', IFNULL(NEW.justification, 'NULL'), '".'
        );

        -- Καταγραφή στο history
        INSERT INTO `apk`.`history` (table_name, stoixeio_id, action, changed_by, change_date, changeh) 
        VALUES ('stoixeio_fields_apk', NEW.stoixeio_idStoixeio, 'UPDATE', change_user, NOW(), change_description);
    END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER prevent_last_stoixeio_fields_apk_deletion
BEFORE DELETE ON `apk`.`stoixeio_fields_apk`
FOR EACH ROW
BEGIN
    DECLARE fields_apk_count INT;

    -- Υπολογισμός του αριθμού των εγγραφών για το συγκεκριμένο stoixeio
    SELECT COUNT(*)
    INTO fields_apk_count
    FROM `apk`.`stoixeio_fields_apk`
    WHERE `stoixeio_idStoixeio` = OLD.stoixeio_idStoixeio;

    -- Αν υπάρχει μόνο μία εγγραφή, ακυρώνεται η διαγραφή
    IF fields_apk_count = 1 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Η τελευταία εγγραφή πεδίου ΑΠΚ για αυτό το στοιχείο δεν μπορεί να διαγραφεί.';
    END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER delete_fields_apk
AFTER DELETE ON `apk`.`stoixeio_fields_apk`
FOR EACH ROW
BEGIN
	
    DECLARE field_name VARCHAR(255);
    DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);
	DECLARE stoixeio_name VARCHAR(200);

    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

    -- Ανάκτηση του field_apk που συνδέεται με την εγγραφή που διαγράφηκε
    SELECT `field_apk`
    INTO field_name
    FROM `apk`.`fields_apk`
    WHERE `idfields_apk` = OLD.fields_apk_idfields_apk;

	-- Ανάκτηση του ονόματος του στοιχείου
    SELECT `name`
    INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = OLD.stoixeio_idStoixeio;

    -- Δημιουργία περιγραφής αλλαγής
    SET change_description = CONCAT(
        'Στο στοιχείο με όνομα "', stoixeio_name, '" ',
        'διαγράφηκε το πεδίο "', field_name, '" ',
        'με αιτιολόγηση: "', IFNULL(OLD.justification, 'NULL'), '".'
    );

    -- Καταγραφή στο history
    INSERT INTO `apk`.`history` (table_name, stoixeio_id, action, changed_by, change_date, changeh) 
    VALUES ('stoixeio_fields_apk', OLD.stoixeio_idStoixeio, 'DELETE', change_user, NOW(), change_description);
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER check_and_update_temporary_evidence
AFTER INSERT ON `apk`.`evidence`
FOR EACH ROW
BEGIN
    DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);
    DECLARE is_complete BOOLEAN;
    DECLARE current_is_temporary BOOLEAN;
    DECLARE stoixeio_name VARCHAR(200);
    
    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;
	
	-- Ανάκτηση του ονόματος του στοιχείου
    SELECT `name`
    INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;

     -- Αρχικοποίηση της περιγραφής αλλαγής
    SET change_description = CONCAT('Στο στοιχείο με όνομα "', stoixeio_name, 
                                    '" εισήχθη τεκμήριο με όνομα "', NEW.file_name, '" και κατηγορία "', NEW.category, '"');

    -- Καταγραφή στο ιστορικό
    INSERT INTO `apk`.`history`
    (table_name, stoixeio_id, action, changed_by, change_date, changeh)
    VALUES
    ('evidence', NEW.stoixeio_idStoixeio, 'INSERT', change_user, NOW(), change_description);

    -- Έλεγχος πληρότητας δεδομένων
    SET is_complete = (
        EXISTS (SELECT 1 FROM `apk`.`stoixeio_keywords` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
        AND EXISTS (SELECT 1 FROM `apk`.`other_names` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
        AND EXISTS (SELECT 1 FROM `apk`.`performance_area` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
        AND EXISTS (SELECT 1 FROM `apk`.`facilities` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
        AND EXISTS (SELECT 1 FROM `apk`.`product` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
        AND EXISTS (SELECT 1 FROM `apk`.`equipment` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
        AND EXISTS (SELECT 1 FROM `apk`.`importance` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
        AND EXISTS (SELECT 1 FROM `apk`.`preservation` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
        AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_foreas` WHERE `stoixeio_id` = NEW.stoixeio_idStoixeio)
        AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_fields_apk` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
        AND EXISTS (SELECT 1 FROM `apk`.`user_stoixeio` WHERE `stoixeio_id` = NEW.stoixeio_idStoixeio)
        AND EXISTS (SELECT 1 FROM `apk`.`evidence` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio)
        AND (
            -- Έλεγχος για locationDescription
            (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio) IS NOT NULL
            AND (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio) != ''
            OR 
            -- Αν locationDescription είναι NULL ή κενό, έλεγχος στο kalikratis
            EXISTS (SELECT 1 FROM `apk`.`kalikratis` WHERE `location_id_location` = 
                    (SELECT id_location FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_idStoixeio))
        )
    );

    -- Ανάκτηση της τρέχουσας τιμής του is_temporary
    SELECT `is_temporary`
    INTO current_is_temporary
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;

    -- Ενημέρωση του πεδίου is_temporary εάν όλα τα δεδομένα είναι πλήρη και το is_temporary δεν είναι ήδη 0
    IF is_complete AND current_is_temporary != 0 THEN
        UPDATE `apk`.`stoixeio`
        SET `is_temporary` = 0
        WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;
	END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER allow_only_date_and_uploader_update
BEFORE UPDATE ON `apk`.`evidence`
FOR EACH ROW
BEGIN
    -- Έλεγχος αν αλλάζει οποιοδήποτε πεδίο εκτός από τα επιτρεπτά
    IF OLD.date_of_entry = NEW.date_of_entry AND OLD.who_uploaded_it = NEW.who_uploaded_it THEN
        IF OLD.category <> NEW.category 
            OR OLD.file_data <> NEW.file_data 
            OR OLD.file_name <> NEW.file_name
            OR OLD.file_type <> NEW.file_type
            OR OLD.file_size <> NEW.file_size
            OR OLD.mime_type <> NEW.mime_type
            OR OLD.file_hash <> NEW.file_hash THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Η ενημέρωση επιτρέπεται μόνο για τα πεδία date_of_entry και who_uploaded_it';
        END IF;
    END IF;
END$$

DELIMITER ;


DELIMITER $$

CREATE TRIGGER after_update_evidence
AFTER UPDATE ON `apk`.`evidence`
FOR EACH ROW
BEGIN
    DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);
    DECLARE stoixeio_name VARCHAR(200);

    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

    -- Ανάκτηση του ονόματος του στοιχείου από τον πίνακα stoixeio
    SELECT `name` INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = NEW.stoixeio_idStoixeio;

    -- Αρχικοποίηση της περιγραφής αλλαγής
    SET change_description = CONCAT('Για το στοιχείο με όνομα "', stoixeio_name, '", ');

    -- Ελέγχουμε αν άλλαξε το date_of_entry
    IF OLD.date_of_entry <> NEW.date_of_entry THEN
        SET change_description = CONCAT(
            change_description,
            'άλλαξε η ημερομηνία δημιουργίας του τεκμηρίου με όνομα "', NEW.file_name,
            '" από "', OLD.date_of_entry,
            '" σε "', NEW.date_of_entry, '". '
        );
    END IF;

    -- Ελέγχουμε αν άλλαξε το who_uploaded_it
    IF OLD.who_uploaded_it <> NEW.who_uploaded_it THEN
        SET change_description = CONCAT(
            change_description,
            'άλλαξε ο δημιουργός του τεκμηρίου με όνομα "', NEW.file_name,
            '" από "', OLD.who_uploaded_it,
            '" σε "', NEW.who_uploaded_it, '". '
        );

    END IF;
    INSERT INTO `apk`.`history`
	(table_name, stoixeio_id, action, changed_by, change_date, changeh)
	VALUES
	('evidence', NEW.stoixeio_idStoixeio, 'UPDATE', change_user, NOW(), change_description);

END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER prevent_last_evidence_deletion
BEFORE DELETE ON `apk`.`evidence`
FOR EACH ROW
BEGIN
    DECLARE evidence_count INT;

    -- Υπολογισμός του αριθμού των εγγραφών για το συγκεκριμένο stoixeio
    SELECT COUNT(*)
    INTO evidence_count
    FROM `apk`.`evidence`
    WHERE `stoixeio_idStoixeio` = OLD.stoixeio_idStoixeio;

    -- Αν υπάρχει μόνο μία εγγραφή, ακυρώνεται η διαγραφή
    IF evidence_count = 1 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Η τελευταία εγγραφή τεκμηρίου για αυτό το στοιχείο δεν μπορεί να διαγραφεί.';
    END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER after_delete_evidence
AFTER DELETE ON `apk`.`evidence`
FOR EACH ROW
BEGIN
    DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);
    DECLARE stoixeio_name VARCHAR(200);
    
    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

	-- Ανάκτηση του ονόματος του στοιχείου
    SELECT `name`
    INTO stoixeio_name
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = OLD.stoixeio_idStoixeio;
    
     -- Αρχικοποίηση της περιγραφής αλλαγής
    SET change_description = CONCAT('Στο στοιχείο με όνομα "', stoixeio_name, 
                                    '" διαγράφηκε το τεκμήριο με όνομα "', OLD.file_name, '" και κατηγορία "', OLD.category, '"');

    -- Καταγραφή στο ιστορικό
    INSERT INTO `apk`.`history`
    (table_name, stoixeio_id, action, changed_by, change_date, changeh)
    VALUES
    ('evidence', OLD.stoixeio_idStoixeio, 'DELETE', change_user, NOW(), change_description);
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER after_update_user
AFTER UPDATE ON `apk`.`user`
FOR EACH ROW
BEGIN
    DECLARE change_description TEXT;
    DECLARE change_user VARCHAR(255);
    DECLARE email VARCHAR(40);
    
    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

    SET email = NEW.email;
    
    SET change_description = CONCAT('Για τον χρήστη με email "', email, '" έγιναν οι εξής αλλαγές: ');

    -- Ελέγχουμε ποια πεδία έχουν αλλάξει και προσθέτουμε τις αλλαγές στην περιγραφή
    IF OLD.first_name != NEW.first_name THEN
        SET change_description = CONCAT(change_description, 'Το Όνομα άλλαξε από "', OLD.first_name, '" σε "', NEW.first_name, '". ');
    END IF;

    IF OLD.last_name != NEW.last_name THEN
        SET change_description = CONCAT(change_description, 'Το Επώνυμο άλλαξε από "', OLD.last_name, '" σε "', NEW.last_name, '". ');
    END IF;

    IF OLD.email != NEW.email THEN
        SET change_description = CONCAT(change_description, 'Το Email άλλαξε από "', OLD.email, '" σε "', NEW.email, '". ');
    END IF;

    IF OLD.password != NEW.password THEN
        SET change_description = CONCAT(change_description, 'Ο κωδικός πρόσβασης άλλαξε. ');
    END IF;

    IF OLD.telephone != NEW.telephone THEN
        SET change_description = CONCAT(change_description, 'Το Τηλέφωνο άλλαξε από "', OLD.telephone, '" σε "', NEW.telephone, '". ');
    END IF;

    IF OLD.userrole != NEW.userrole THEN
        SET change_description = CONCAT(change_description, 'Ο Ρόλος χρήστη άλλαξε από "', OLD.userrole, '" σε "', NEW.userrole, '". ');
    END IF;

    -- Έλεγχος αλλαγών στο πεδίο διεύθυνσης
    IF NOT (OLD.address <=> NEW.address) THEN
        -- Από NULL ή κενό σε τιμή
        IF (OLD.address IS NULL OR TRIM(OLD.address) = '') AND (NEW.address IS NOT NULL AND TRIM(NEW.address) != '') THEN
            SET change_description = CONCAT(change_description, 'Η Διεύθυνση άλλαξε από "κενή" σε "', NEW.address, '". ');
        -- Από τιμή σε NULL ή κενό
        ELSEIF (NEW.address IS NULL OR TRIM(NEW.address) = '') AND (OLD.address IS NOT NULL AND TRIM(OLD.address) != '') THEN
            SET change_description = CONCAT(change_description, 'Η Διεύθυνση άλλαξε από "', OLD.address, '" σε "κενή". ');
        -- Από τιμή σε άλλη τιμή
        ELSEIF (OLD.address IS NOT NULL AND NEW.address IS NOT NULL AND TRIM(OLD.address) != TRIM(NEW.address)) THEN
            SET change_description = CONCAT(change_description, 'Η Διεύθυνση άλλαξε από "', OLD.address, '" σε "', NEW.address, '". ');
        END IF;
    END IF;

    -- Καταγραφή στο history μόνο αν υπάρχουν αλλαγές
    INSERT INTO `apk`.`history` (table_name, stoixeio_id, action, changed_by, change_date, changeh)
    VALUES ('user', NULL, 'UPDATE', change_user, NOW(), change_description);
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER prevent_user_deletion_if_unique
BEFORE DELETE ON `apk`.`user`
FOR EACH ROW
BEGIN
    
    -- Έλεγχος αν ο χρήστης είναι ο μοναδικός συσχετισμένος με κάποιο στοιχείο
    IF EXISTS (
        SELECT 1
        FROM `apk`.`user_stoixeio` us
        WHERE us.user_id = OLD.id_user
        AND (
            SELECT COUNT(*)
            FROM `apk`.`user_stoixeio`
            WHERE stoixeio_id = us.stoixeio_id
        ) = 1
    ) THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Δεν επιτρέπεται η διαγραφή του χρήστη, επειδή είναι ο μοναδικός συσχετισμένος με κάποιο στοιχείο.';
    END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER check_if_all_data_inserted_user_stoixeio
AFTER INSERT ON `apk`.`user_stoixeio`
FOR EACH ROW
BEGIN
	
    DECLARE change_description TEXT;
	DECLARE is_complete BOOLEAN;
    DECLARE current_is_temporary BOOLEAN;
    DECLARE user_first_name VARCHAR(45);
    DECLARE user_last_name VARCHAR(45);
    DECLARE user_email VARCHAR(40);
    DECLARE user_address VARCHAR(100);
    DECLARE user_telephone VARCHAR(20);
    DECLARE user_role ENUM('user', 'admin');
    DECLARE change_user VARCHAR(255);
    DECLARE stoixeio_name VARCHAR(200);
    
    -- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;

    -- Ανάκτηση των στοιχείων του χρήστη από τον πίνακα user
    SELECT `first_name`, `last_name`, `email`, `address`, `telephone`, `userrole`
    INTO user_first_name, user_last_name, user_email, user_address, user_telephone, user_role
    FROM `apk`.`user`
    WHERE `id_user` = NEW.user_id;

	-- Ανάκτηση του ονόματος του στοιχείου
	SELECT `name`
	INTO stoixeio_name
	FROM `apk`.`stoixeio`
	WHERE `idStoixeio` = NEW.stoixeio_id;
    
     -- Δημιουργία περιγραφής αλλαγής
    SET change_description = CONCAT(
        'Προστέθηκε χρήστης με ονοματεπώνυμο: "', user_first_name, ' ', user_last_name, '" και τα εξής στοιχεία: ',
        'Email: "', user_email, '", ',
        'Διεύθυνση: "', IFNULL(user_address, 'NULL'), '", ',
        'Tηλέφωνο: "', user_telephone, '", ',
        'userrole: "', user_role, '" για το στοιχείο με όνομα: "', stoixeio_name, '"');

    -- Καταγραφή στο history για την εισαγωγή
    INSERT INTO `apk`.`history` (table_name, stoixeio_id, action, changed_by, change_date, changeh)
    VALUES ('user_stoixeio', new.stoixeio_id, 'INSERT', change_user, NOW(), change_description);  
    
    -- Έλεγχος αν υπάρχει τουλάχιστον μία εγγραφή σε όλους τους σχετικούς πίνακες
    SET is_complete = (
       EXISTS (SELECT 1 FROM `apk`.`stoixeio_keywords` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_id)
       AND EXISTS (SELECT 1 FROM `apk`.`other_names` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_id)
       AND EXISTS (SELECT 1 FROM `apk`.`performance_area` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_id)
       AND EXISTS (SELECT 1 FROM `apk`.`facilities` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_id)
       AND EXISTS (SELECT 1 FROM `apk`.`product` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_id)
       AND EXISTS (SELECT 1 FROM `apk`.`equipment` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_id)
       AND EXISTS (SELECT 1 FROM `apk`.`importance` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_id)
       AND EXISTS (SELECT 1 FROM `apk`.`preservation` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_id)
       AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_foreas` WHERE `stoixeio_id` = NEW.stoixeio_id)
       AND EXISTS (SELECT 1 FROM `apk`.`stoixeio_fields_apk` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_id)
       AND EXISTS (SELECT 1 FROM `apk`.`evidence` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_id)
       AND EXISTS (SELECT 1 FROM `apk`.`user_stoixeio` WHERE `stoixeio_id` = NEW.stoixeio_id)
       
       AND (
           -- Έλεγχος για locationDescription
           (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_id) IS NOT NULL
           AND (SELECT locationDescription FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_id) != ''
           OR 
           -- Αν locationDescription είναι NULL ή κενό, έλεγχος στο kalikratis
           EXISTS (SELECT 1 FROM `apk`.`kalikratis` WHERE `location_id_location` = (SELECT id_location FROM `apk`.`location` WHERE `stoixeio_idStoixeio` = NEW.stoixeio_id))
       )
    );

    -- Ανάκτηση της τρέχουσας τιμής του is_temporary
    SELECT `is_temporary`
    INTO current_is_temporary
    FROM `apk`.`stoixeio`
    WHERE `idStoixeio` = NEW.stoixeio_id;

    -- Ενημέρωση του πεδίου is_temporary εάν όλα τα δεδομένα είναι πλήρη και το is_temporary δεν είναι ήδη 0
    IF is_complete AND current_is_temporary != 0 THEN
        UPDATE `apk`.`stoixeio`
        SET `is_temporary` = 0
        WHERE `idStoixeio` = NEW.stoixeio_id;
	END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER prevent_single_user_stoixeio_deletion
BEFORE DELETE ON `apk`.`user_stoixeio`
FOR EACH ROW
BEGIN
    DECLARE user_stoixeio_count INT;

    -- Υπολογισμός του αριθμού των εγγραφών για το συγκεκριμένο stoixeio
    SELECT COUNT(*)
    INTO user_stoixeio_count
    FROM `apk`.`user_stoixeio`
    WHERE `stoixeio_id` = OLD.stoixeio_id;

    -- Αν υπάρχει μόνο μία εγγραφή, ακυρώνεται η διαγραφή
    IF user_stoixeio_count = 1 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Η τελευταία εγγραφή χρήστη για αυτό το στοιχείο δεν μπορεί να διαγραφεί.';
    END IF;
END$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER delete_user_if_unused
AFTER DELETE ON `apk`.`user_stoixeio`
FOR EACH ROW
BEGIN
	
    DECLARE change_description TEXT;
    DECLARE user_first_name VARCHAR(45);
    DECLARE user_last_name VARCHAR(45);
    DECLARE user_email VARCHAR(40);
    DECLARE user_address VARCHAR(100);
    DECLARE user_telephone VARCHAR(20);
	DECLARE user_role ENUM('user', 'admin');
    DECLARE change_user VARCHAR(255);
    DECLARE stoixeio_name VARCHAR(200);	
        
	-- Καθορισμός του χρήστη που έκανε την αλλαγή
    IF @full_name IS NOT NULL THEN
        SET change_user = @full_name;
    ELSE
        SET change_user = CURRENT_USER();
    END IF;
    
    -- Ανάκτηση των στοιχείων του χρήστη από τον πίνακα user
    SELECT `first_name`, `last_name`, `email`, `address`, `telephone`, `userrole`
    INTO user_first_name, user_last_name, user_email, user_address, user_telephone, user_role
    FROM `apk`.`user`
    WHERE `id_user` = OLD.user_id;
    
	-- Ανάκτηση του ονόματος του στοιχείου
	SELECT `name`
	INTO stoixeio_name
	FROM `apk`.`stoixeio`
	WHERE `idStoixeio` = OLD.stoixeio_id;
	
	-- Δημιουργία περιγραφής αλλαγής
    SET change_description = CONCAT(
        'Διαγράφηκε χρήστης με ονοματεπώνυμο: "', user_first_name, ' ', user_last_name, '" και τα εξής στοιχεία: ',
        'Email: "', user_email, '", ',
        'Διεύθυνση: "', IFNULL(user_address, 'NULL'), '", ',
        'Tηλέφωνο: "', user_telephone, '", ',
        'userrole: "', user_role, '" για το στοιχείο με όνομα: "', stoixeio_name, '"');

    -- Καταγραφή στο history για την αφαίρεση
    INSERT INTO `apk`.`history` (table_name, stoixeio_id, action, changed_by, change_date, changeh)
    VALUES ('user_stoixeio', old.stoixeio_id, 'DELETE', change_user, NOW(), change_description);
END$$

DELIMITER ;

DELIMITER $$
USE `apk`$$
CREATE PROCEDURE `InsertStoixeio`(
    IN name VARCHAR(100),
    IN year YEAR,
    IN description VARCHAR(600),
    IN full_description TEXT,
    IN historical_data TEXT,
    IN bibliography TEXT,
    IN other_names TEXT,
    IN fields_apk TEXT,
    IN locationDescription TEXT,
    IN keywords TEXT,
    IN foreas TEXT,
    IN performance_areas TEXT,
    IN facilities TEXT,   
    IN equipments TEXT, 
    IN products TEXT,
	IN members TEXT,
    IN society TEXT,  
    IN community TEXT,
    IN transmission TEXT,
    IN existing TEXT,
    IN future TEXT,
	IN competent_persons TEXT,
    OUT idStoixeio INT,
    OUT last_location_id INT 
)
BEGIN
    
        -- Εισαγωγή του στοιχείου στον πίνακα stoixeio
        INSERT INTO stoixeio (name, year, description, full_description, historical_data, bibliography)
        VALUES (name, year, description, full_description, historical_data, bibliography);

        -- Επιστροφή του νέου ID για χρήση σε άλλους πίνακες
        SET idStoixeio = LAST_INSERT_ID();
        
        
        -- Εισαγωγή άλλων ονομάτων
        IF other_names IS NOT NULL AND other_names <> '' THEN
            SET @other_name_array = TRIM(other_names);
            WHILE LOCATE(';', @other_name_array) > 0 DO
                SET @current_name = TRIM(SUBSTRING_INDEX(@other_name_array, ';', 1));
                IF NOT EXISTS (SELECT 1 FROM other_names WHERE stoixeio_idStoixeio = idStoixeio AND name = @current_name) THEN
                    INSERT INTO other_names (stoixeio_idStoixeio, name) VALUES (idStoixeio, @current_name);
                END IF;
                SET @other_name_array = TRIM(SUBSTRING(@other_name_array, LOCATE(';', @other_name_array) + 1));
            END WHILE;
            IF LENGTH(TRIM(@other_name_array)) > 0 THEN
                SET @current_name = TRIM(@other_name_array);
                IF NOT EXISTS (SELECT 1 FROM other_names WHERE stoixeio_idStoixeio = idStoixeio AND name = @current_name) THEN
                    INSERT INTO other_names (stoixeio_idStoixeio, name) VALUES (idStoixeio, @current_name);
                END IF;
            END IF;
        END IF;

		
		IF fields_apk IS NOT NULL AND fields_apk <> '' THEN
			SET @fields_apk_array = TRIM(fields_apk);

			-- Διαχωρισμός δεδομένων με βάση τον χαρακτήρα ';'
			WHILE LOCATE(';', @fields_apk_array) > 0 DO
				-- Λήψη της πρώτης εγγραφής
				SET @current_fields_apk = SUBSTRING_INDEX(@fields_apk_array, ';', 1);

				-- Ανάκτηση των δεδομένων: field_apk και justification
				SET @field_apk_value = SUBSTRING_INDEX(@current_fields_apk, ':', 1);
				IF LOCATE(':', @current_fields_apk) > 0 THEN
					SET @justification_value = TRIM(SUBSTRING(@current_fields_apk, LOCATE(':', @current_fields_apk) + 1));
				ELSE
					SET @justification_value = NULL; -- Αν δεν υπάρχει justification, θέτουμε NULL
				END IF;

				-- Εισαγωγή στον πίνακα fields_apk μόνο αν το field_apk δεν υπάρχει ήδη
				IF NOT EXISTS (SELECT 1 FROM fields_apk WHERE field_apk = @field_apk_value) THEN
					INSERT INTO fields_apk (field_apk)
					VALUES (@field_apk_value);
				END IF;

				-- Ανάκτηση του idfields_apk για το field_apk που μόλις εισήχθη ή υπήρχε ήδη
				SET @field_apk_id = (SELECT idfields_apk FROM fields_apk WHERE field_apk = @field_apk_value);

				-- Εισαγωγή στον πίνακα stoixeio_fields_apk
				IF NOT EXISTS (SELECT 1 FROM stoixeio_fields_apk WHERE stoixeio_idStoixeio = idStoixeio
					  AND fields_apk_idfields_apk = @field_apk_id 
					  AND (justification = @justification_value OR (justification IS NULL AND @justification_value IS NULL))) THEN
					INSERT INTO stoixeio_fields_apk (stoixeio_idStoixeio, fields_apk_idfields_apk, justification)
					VALUES (idStoixeio, @field_apk_id, @justification_value);
				END IF;

				-- Αφαίρεση του επεξεργασμένου τμήματος από τη λίστα
				SET @fields_apk_array = TRIM(SUBSTRING(@fields_apk_array, LOCATE(';', @fields_apk_array) + 1));
			END WHILE;

			-- Διαχείριση τελευταίου τμήματος
			IF LENGTH(TRIM(@fields_apk_array)) > 0 THEN
				SET @current_fields_apk = @fields_apk_array;

				-- Ανάκτηση δεδομένων
				SET @field_apk_value = SUBSTRING_INDEX(@current_fields_apk, ':', 1);
				IF LOCATE(':', @current_fields_apk) > 0 THEN
					SET @justification_value = TRIM(SUBSTRING(@current_fields_apk, LOCATE(':', @current_fields_apk) + 1));
				ELSE
					SET @justification_value = NULL; -- Αν δεν υπάρχει justification, θέτουμε NULL
				END IF;

				-- Εισαγωγή στον πίνακα fields_apk μόνο αν το field_apk δεν υπάρχει ήδη
				IF NOT EXISTS (SELECT 1 FROM fields_apk WHERE field_apk = @field_apk_value) THEN
					INSERT INTO fields_apk (field_apk)
					VALUES (@field_apk_value);
				END IF;

				-- Ανάκτηση του idfields_apk για το field_apk που μόλις εισήχθη ή υπήρχε ήδη
				SET @field_apk_id = (SELECT idfields_apk FROM fields_apk WHERE field_apk = @field_apk_value);

				-- Εισαγωγή στον πίνακα stoixeio_fields_apk
				IF NOT EXISTS (SELECT 1 FROM stoixeio_fields_apk WHERE stoixeio_idStoixeio = idStoixeio
					  AND fields_apk_idfields_apk = @field_apk_id
					  AND (justification = @justification_value OR (justification IS NULL AND @justification_value IS NULL))) THEN
					INSERT INTO stoixeio_fields_apk (stoixeio_idStoixeio, fields_apk_idfields_apk, justification)
					VALUES (idStoixeio, @field_apk_id, @justification_value);
				END IF;
			END IF;
		END IF;


        
		-- Επεξεργασία locationDescription
		IF locationDescription IS NOT NULL AND TRIM(locationDescription) <> '' THEN
			-- Έλεγχος αν υπάρχει ήδη εγγραφή με το ίδιο stoixeio_idStoixeio
			IF NOT EXISTS (SELECT 1 FROM location WHERE stoixeio_idStoixeio = idStoixeio) THEN
				-- Αν δεν υπάρχει, εισάγουμε την τοποθεσία για το συγκεκριμένο στοιχείο
				INSERT INTO location (stoixeio_idStoixeio, locationDescription)
				VALUES (idStoixeio, locationDescription);
				SET last_location_id = LAST_INSERT_ID();  -- Αποθηκεύουμε το id της τελευταίας εγγραφής
			ELSE
				-- Αν υπάρχει ήδη, αποθηκεύουμε το id του location (χωρίς να εισάγουμε νέα εγγραφή)
				SELECT id_location INTO @last_location_id FROM location WHERE stoixeio_idStoixeio = idStoixeio;
			END IF;
		ELSE
			-- Αν το locationDescription είναι NULL ή κενό (μόνο κενά), εισάγουμε NULL και αποθηκεύουμε το id_location
			IF NOT EXISTS (SELECT 1 FROM location WHERE stoixeio_idStoixeio = idStoixeio) THEN
				INSERT INTO location (stoixeio_idStoixeio, locationDescription)
				VALUES (idStoixeio, NULL);  -- Εισάγεται ως NULL
				SET last_location_id = LAST_INSERT_ID();  -- Αποθηκεύουμε το id της τελευταίας εγγραφής
			ELSE
				SELECT id_location INTO last_location_id FROM location WHERE stoixeio_idStoixeio = idStoixeio;
			END IF;
		END IF;



		-- Εισαγωγή λέξεων-κλειδιών
		IF keywords IS NOT NULL AND keywords <> '' THEN
			SET @keywords_array = TRIM(keywords);

			WHILE LOCATE(';', @keywords_array) > 0 DO
				SET @current_keyword = TRIM(SUBSTRING_INDEX(@keywords_array, ';', 1));

				-- Έλεγχος αν υπάρχει ήδη η λέξη-κλειδί
				IF NOT EXISTS (SELECT 1 FROM keywords WHERE keyword = @current_keyword) THEN
					INSERT INTO keywords (keyword)
					VALUES (@current_keyword);
				END IF;

				-- Λήψη του id της λέξης-κλειδί από τον πίνακα keywords
				SET @keyword_id = (SELECT id_keyword FROM keywords WHERE keyword = @current_keyword);

				-- Έλεγχος αν υπάρχει ήδη σύνδεση της λέξης-κλειδί με το στοιχείο
				IF NOT EXISTS (SELECT 1 FROM stoixeio_keywords WHERE stoixeio_idStoixeio = idStoixeio AND keyword_id_keyword = @keyword_id) THEN
					-- Σύνδεση της λέξης-κλειδί με το στοιχείο
					INSERT INTO stoixeio_keywords (stoixeio_idStoixeio, keyword_id_keyword)
					VALUES (idStoixeio, @keyword_id);
				END IF;

				SET @keywords_array = TRIM(SUBSTRING(@keywords_array, LOCATE(';', @keywords_array) + 1));
			END WHILE;

			-- Εισαγωγή της τελευταίας λέξης-κλειδί
			IF LENGTH(TRIM(@keywords_array)) > 0 THEN
				SET @current_keyword = TRIM(@keywords_array);

				-- Έλεγχος αν υπάρχει ήδη η λέξη-κλειδί
				IF NOT EXISTS (SELECT 1 FROM keywords WHERE keyword = @current_keyword) THEN
					INSERT INTO keywords (keyword)
					VALUES (@current_keyword);
				END IF;

				-- Λήψη του id της λέξης-κλειδί από τον πίνακα keywords
				SET @keyword_id = (SELECT id_keyword FROM keywords WHERE keyword = @current_keyword);

				-- Έλεγχος αν υπάρχει ήδη σύνδεση της λέξης-κλειδί με το στοιχείο
				IF NOT EXISTS (SELECT 1 FROM stoixeio_keywords WHERE stoixeio_idStoixeio = idStoixeio AND keyword_id_keyword = @keyword_id) THEN
					-- Σύνδεση της λέξης-κλειδί με το στοιχείο
					INSERT INTO stoixeio_keywords (stoixeio_idStoixeio, keyword_id_keyword)
					VALUES (idStoixeio, @keyword_id);
				END IF;
			END IF;
		END IF;
        
        
		-- Εισαγωγή δεδομένων στον πίνακα `foreas`
		IF foreas IS NOT NULL AND foreas <> '' THEN
			SET @foreas_array = TRIM(foreas);

			-- Επανάληψη για κάθε φορέα που χωρίζεται με ';'
			WHILE LOCATE(';', @foreas_array) > 0 DO
				SET @current_foreas = SUBSTRING_INDEX(@foreas_array, ';', 1);

				-- Ανάκτηση δεδομένων φορέα
				SET @namef = TRIM(SUBSTRING_INDEX(SUBSTRING_INDEX(@current_foreas, 'Όνομα: ', -1), '\n', 1));
				SET @descriptionf = TRIM(SUBSTRING_INDEX(SUBSTRING_INDEX(@current_foreas, 'Περιγραφή: ', -1), '\n', 1));
				SET @email = TRIM(SUBSTRING_INDEX(SUBSTRING_INDEX(@current_foreas, 'Email: ', -1), '\n', 1));
                SET @address = TRIM(SUBSTRING_INDEX(SUBSTRING_INDEX(@current_foreas, 'Διεύθυνση: ', -1), '\n', 1));
				SET @city = TRIM(SUBSTRING_INDEX(SUBSTRING_INDEX(@current_foreas, 'Πόλη: ', -1), '\n', 1));
                SET @TK = TRIM(SUBSTRING_INDEX(SUBSTRING_INDEX(@current_foreas, 'TK: ', -1), '\n', 1));
                SET @telephone = TRIM(SUBSTRING_INDEX(SUBSTRING_INDEX(@current_foreas, 'Τηλέφωνο: ', -1), '\n', 1));
				SET @website = TRIM(SUBSTRING_INDEX(SUBSTRING_INDEX(@current_foreas, 'Website: ', -1), ';', 1));

				-- Έλεγχος αν υπάρχει ήδη ο φορέας με βάση το όνομα ή το email
				IF EXISTS (SELECT 1 FROM foreas WHERE namef = @namef OR email = @email) THEN
					-- Ανάκτηση του id από τον υπάρχοντα φορέα
					SET @foreas_id = (SELECT idforeas FROM foreas WHERE namef = @namef OR email = @email LIMIT 1);
				ELSE
					-- Εισαγωγή νέου φορέα
					INSERT INTO foreas (namef, descriptionf, address, city, telephone, email, TK, website)
					VALUES (@namef, @descriptionf, @address, @city, @telephone, @email, @TK, @website);

					-- Ανάκτηση του ID του νέου φορέα
					SET @foreas_id = LAST_INSERT_ID();
				END IF;

				-- Σύνδεση του φορέα με το στοιχείο
				IF NOT EXISTS (SELECT 1 FROM stoixeio_foreas WHERE stoixeio_id = idStoixeio AND foreas_id = @foreas_id) THEN
					INSERT INTO stoixeio_foreas (stoixeio_id, foreas_id)
					VALUES (idStoixeio, @foreas_id);
				END IF;

				SET @foreas_array = SUBSTRING(@foreas_array, LOCATE(';', @foreas_array) + 1);
			END WHILE;

			-- Επεξεργασία του τελευταίου φορέα αν υπάρχει υπόλοιπο
			IF LENGTH(TRIM(@foreas_array)) > 0 THEN
				SET @current_foreas = @foreas_array;

				-- Ανάκτηση δεδομένων φορέα
				SET @namef = TRIM(SUBSTRING_INDEX(SUBSTRING_INDEX(@current_foreas, 'Όνομα: ', -1), '\n', 1));
				SET @descriptionf = TRIM(SUBSTRING_INDEX(SUBSTRING_INDEX(@current_foreas, 'Περιγραφή: ', -1), '\n', 1));
				SET @email = TRIM(SUBSTRING_INDEX(SUBSTRING_INDEX(@current_foreas, 'Email: ', -1), '\n', 1));
                SET @address = TRIM(SUBSTRING_INDEX(SUBSTRING_INDEX(@current_foreas, 'Διεύθυνση: ', -1), '\n', 1));
				SET @city = TRIM(SUBSTRING_INDEX(SUBSTRING_INDEX(@current_foreas, 'Πόλη: ', -1), '\n', 1));
                SET @TK = TRIM(SUBSTRING_INDEX(SUBSTRING_INDEX(@current_foreas, 'TK: ', -1), '\n', 1));
                SET @telephone = TRIM(SUBSTRING_INDEX(SUBSTRING_INDEX(@current_foreas, 'Τηλέφωνο: ', -1), '\n', 1));
				SET @website = TRIM(SUBSTRING_INDEX(SUBSTRING_INDEX(@current_foreas, 'Website: ', -1), ';', 1));

				-- Έλεγχος αν υπάρχει ήδη ο φορέας με βάση το όνομα ή το email
				IF EXISTS (SELECT 1 FROM foreas WHERE namef = @namef OR email = @email) THEN
					-- Ανάκτηση του id από τον υπάρχοντα φορέα
					SET @foreas_id = (SELECT idforeas FROM foreas WHERE namef = @namef OR email = @email LIMIT 1);
				ELSE
					INSERT INTO foreas (namef, descriptionf, address, city, telephone, email, TK, website)
					VALUES (@namef, @descriptionf, @address, @city, @telephone, @email, @TK, @website);
					SET @foreas_id = LAST_INSERT_ID();
				END IF;

				IF NOT EXISTS (SELECT 1 FROM stoixeio_foreas WHERE stoixeio_id = idStoixeio AND foreas_id = @foreas_id) THEN
					INSERT INTO stoixeio_foreas (stoixeio_id, foreas_id)
					VALUES (idStoixeio, @foreas_id);
				END IF;
			END IF;
		END IF;

        
		-- Εισαγωγή χώρων επιτέλεσης, αν υπάρχουν
		IF performance_areas IS NOT NULL AND performance_areas <> '' THEN
			SET @performance_area_array = TRIM(performance_areas);

			-- Επεξεργασία κάθε τμήματος της συμβολοσειράς με διαχωριστή `;`
			WHILE LOCATE(';', @performance_area_array) > 0 DO
				-- Λήψη του επόμενου χώρου επιτέλεσης
				SET @current_area = TRIM(SUBSTRING_INDEX(@performance_area_array, ';', 1));
				SET @area = TRIM(SUBSTRING_INDEX(@current_area, ':', 1));
				SET @justification_area = TRIM(SUBSTRING(@current_area, LOCATE(':', @current_area) + 1));

				-- Έλεγχος αν ο χώρος επιτέλεσης υπάρχει ήδη για το συγκεκριμένο stoixeio_idStoixeio
				IF NOT EXISTS (SELECT 1 FROM performance_area WHERE stoixeio_idStoixeio = idStoixeio AND area = @area) THEN
				-- Εισαγωγή του νέου χώρου επιτέλεσης
					INSERT INTO performance_area (stoixeio_idStoixeio, area, justification_performance_area) 
					VALUES (idStoixeio, @area, @justification_area);
				END IF;
				-- Ενημέρωση της συμβολοσειράς
				SET @performance_area_array = TRIM(SUBSTRING(@performance_area_array, LOCATE(';', @performance_area_array) + 1));
			END WHILE;

			-- Εισαγωγή του τελευταίου στοιχείου (αν υπάρχει)
			IF LENGTH(TRIM(@performance_area_array)) > 0 THEN
				SET @current_area = TRIM(@performance_area_array);
				SET @area = TRIM(SUBSTRING_INDEX(@current_area, ':', 1));
				SET @justification_area = TRIM(SUBSTRING(@current_area, LOCATE(':', @current_area) + 1));

				-- Έλεγχος αν ο χώρος επιτέλεσης υπάρχει ήδη για το συγκεκριμένο stoixeio_idStoixeio
				IF NOT EXISTS (SELECT 1 FROM performance_area WHERE stoixeio_idStoixeio = idStoixeio AND area = @area) THEN
				-- Εισαγωγή του νέου χώρου επιτέλεσης
					INSERT INTO performance_area (stoixeio_idStoixeio, area, justification_performance_area) 
					VALUES (idStoixeio, @area, @justification_area);
				END IF;
			END IF;
		END IF;


		-- Εισαγωγή εγκαταστάσεων, αν υπάρχουν
		IF facilities IS NOT NULL AND facilities <> '' THEN
			SET @facility_array = TRIM(facilities);

			-- Επεξεργασία κάθε εγκατάστασης (διαχωριστής `;`)
			WHILE LOCATE(';', @facility_array) > 0 DO
				-- Ανάλυση της τρέχουσας εγκατάστασης
				SET @current_facility = TRIM(SUBSTRING_INDEX(@facility_array, ';', 1));
				SET @facility = TRIM(SUBSTRING_INDEX(@current_facility, ':', 1));
				SET @justification_facility = TRIM(SUBSTRING(@current_facility, LOCATE(':', @current_facility) + 1));

				-- Εισαγωγή μόνο αν η εγκατάσταση δεν υπάρχει ήδη
				INSERT IGNORE INTO facilities (stoixeio_idStoixeio, facility, justification_facility)
				VALUES (idStoixeio, @facility, @justification_facility);

				-- Ενημέρωση της συμβολοσειράς
				SET @facility_array = TRIM(SUBSTRING(@facility_array, LOCATE(';', @facility_array) + 1));
			END WHILE;

			-- Εισαγωγή της τελευταίας εγκατάστασης (αν υπάρχει)
			IF LENGTH(TRIM(@facility_array)) > 0 THEN
				SET @current_facility = TRIM(@facility_array);
				SET @facility = TRIM(SUBSTRING_INDEX(@current_facility, ':', 1));
				SET @justification_facility = TRIM(SUBSTRING(@current_facility, LOCATE(':', @current_facility) + 1));

				-- Εισαγωγή μόνο αν η εγκατάσταση δεν υπάρχει ήδη
				INSERT IGNORE INTO facilities (stoixeio_idStoixeio, facility, justification_facility)
				VALUES (idStoixeio, @facility, @justification_facility);
			END IF;
		END IF;

        
		-- Εισαγωγή εξοπλισμού, αν υπάρχει
		IF equipments IS NOT NULL AND equipments <> '' THEN
			SET @equipment_array = TRIM(equipments);

			-- Επεξεργασία κάθε εξοπλισμού (διαχωριστής `;`)
			WHILE LOCATE(';', @equipment_array) > 0 DO
				-- Ανάλυση της τρέχουσας εγγραφής εξοπλισμού
				SET @current_equipment = TRIM(SUBSTRING_INDEX(@equipment_array, ';', 1));
				SET @equipment = TRIM(SUBSTRING_INDEX(@current_equipment, ':', 1));
				SET @justification_equipment = TRIM(SUBSTRING(@current_equipment, LOCATE(':', @current_equipment) + 1));

				-- Εισαγωγή μόνο αν ο εξοπλισμός δεν υπάρχει ήδη
				INSERT IGNORE INTO equipment (stoixeio_idStoixeio, equipment, justification_equipment)
				VALUES (idStoixeio, @equipment, @justification_equipment);

				-- Ενημέρωση της συμβολοσειράς
				SET @equipment_array = TRIM(SUBSTRING(@equipment_array, LOCATE(';', @equipment_array) + 1));
			END WHILE;

			-- Εισαγωγή του τελευταίου εξοπλισμού (αν υπάρχει)
			IF LENGTH(TRIM(@equipment_array)) > 0 THEN
				SET @current_equipment = TRIM(@equipment_array);
				SET @equipment = TRIM(SUBSTRING_INDEX(@current_equipment, ':', 1));
				SET @justification_equipment = TRIM(SUBSTRING(@current_equipment, LOCATE(':', @current_equipment) + 1));

				-- Εισαγωγή μόνο αν ο εξοπλισμός δεν υπάρχει ήδη
				INSERT IGNORE INTO equipment (stoixeio_idStoixeio, equipment, justification_equipment)
				VALUES (idStoixeio, @equipment, @justification_equipment);
			END IF;
		END IF;



		-- Εισαγωγή προϊόντος, αν υπάρχει
		IF products IS NOT NULL AND products <> '' THEN
			SET @product_array = TRIM(products);

			-- Επεξεργασία κάθε προϊόντος (διαχωριστής `;`)
			WHILE LOCATE(';', @product_array) > 0 DO
				-- Ανάλυση της τρέχουσας εγγραφής προϊόντος
				SET @current_product = TRIM(SUBSTRING_INDEX(@product_array, ';', 1));
				SET @product = TRIM(SUBSTRING_INDEX(@current_product, ':', 1));
				SET @justification_product = TRIM(SUBSTRING(@current_product, LOCATE(':', @current_product) + 1));

				-- Εισαγωγή μόνο αν το προϊόν δεν υπάρχει ήδη
				INSERT IGNORE INTO product (stoixeio_idStoixeio, product, justification_product)
				VALUES (idStoixeio, @product, @justification_product);

				-- Ενημέρωση της συμβολοσειράς
				SET @product_array = TRIM(SUBSTRING(@product_array, LOCATE(';', @product_array) + 1));
			END WHILE;

			-- Εισαγωγή του τελευταίου προϊόντος (αν υπάρχει)
			IF LENGTH(TRIM(@product_array)) > 0 THEN
				SET @current_product = TRIM(@product_array);
				SET @product = TRIM(SUBSTRING_INDEX(@current_product, ':', 1));
				SET @justification_product = TRIM(SUBSTRING(@current_product, LOCATE(':', @current_product) + 1));

				-- Εισαγωγή μόνο αν το προϊόν δεν υπάρχει ήδη
				INSERT IGNORE INTO product (stoixeio_idStoixeio, product, justification_product)
				VALUES (idStoixeio, @product, @justification_product);
			END IF;
		END IF;

			-- Εισαγωγή σημασίας (μόνο αν δεν υπάρχει ήδη εγγραφή)
		IF NOT EXISTS (SELECT 1 FROM importance WHERE stoixeio_idStoixeio = idStoixeio) THEN
			INSERT INTO importance (stoixeio_idStoixeio, members, society, community) 
			VALUES (idStoixeio, members, society, community);
		END IF;

		-- Εισαγωγή μέτρων διαφύλαξης (μόνο αν δεν υπάρχει ήδη εγγραφή)
		IF NOT EXISTS (SELECT 1 FROM preservation WHERE stoixeio_idStoixeio = idStoixeio) THEN
			INSERT INTO preservation (stoixeio_idStoixeio, transmission, existing, future) 
			VALUES (idStoixeio, transmission, existing, future);
		END IF;
  
        
		-- Εισαγωγή δεδομένων στον πίνακα `user`
		IF competent_persons IS NOT NULL AND competent_persons <> '' THEN
			SET @competent_persons_array = TRIM(competent_persons);
			
			WHILE LOCATE(';', @competent_persons_array) > 0 DO
				SET @current_competent_persons = SUBSTRING_INDEX(@competent_persons_array, ';', 1);

				SET @firstname = SUBSTRING_INDEX(@current_competent_persons, 'Όνομα: ', -1);
				SET @firstname = SUBSTRING_INDEX(@firstname, '\n', 1);  
				
				SET @lastname = SUBSTRING_INDEX(SUBSTRING_INDEX(@current_competent_persons, 'Επώνυμο: ', -1), '\n', 1);
				
				SET @emailcp = SUBSTRING_INDEX(SUBSTRING_INDEX(@current_competent_persons, 'Email: ', -1), '\n', 1);
				
				SET @telnumber = SUBSTRING_INDEX(SUBSTRING_INDEX(@current_competent_persons, 'Τηλέφωνο: ', -1), '\n', 1);

				SET @addresscp = NULL;
				IF LOCATE('Διεύθυνση: ', @current_competent_persons) > 0 THEN
					SET @addresscp = SUBSTRING_INDEX(SUBSTRING_INDEX(@current_competent_persons, 'Διεύθυνση: ', -1), '\n', 1);
				END IF;
				-- Έλεγχος αν υπάρχει ήδη χρήστης με το email
				IF EXISTS (SELECT 1 FROM user WHERE email = @emailcp) THEN
					-- Λήψη του id_user με το email
					SET @user_id = (SELECT id_user FROM user WHERE email = @emailcp LIMIT 1);
				ELSE
					-- Εισαγωγή νέου χρήστη
					INSERT INTO user(first_name, last_name, password, email, telephone, address)
					VALUES (@firstname, @lastname, @emailcp, @emailcp, @telnumber, @addresscp);
					
					-- Λήψη του id_user του νέου χρήστη
					SET @user_id = LAST_INSERT_ID();
				END IF;

				-- Σύνδεση του χρήστη με το στοιχείο μόνο αν δεν υπάρχει ήδη εγγραφή
				IF NOT EXISTS (SELECT 1 FROM user_stoixeio WHERE user_id = @user_id AND stoixeio_id = idStoixeio) THEN
					INSERT INTO user_stoixeio (user_id, stoixeio_id)
					VALUES (@user_id, idStoixeio);
				END IF;
                
                SET @competent_persons_array = SUBSTRING(@competent_persons_array, LOCATE(';', @competent_persons_array) + 1);
			END WHILE;

			IF LENGTH(TRIM(@competent_persons_array)) > 0 THEN
				SET @current_competent_persons = @competent_persons_array;

				SET @firstname = SUBSTRING_INDEX(@current_competent_persons, 'Όνομα: ', -1);
				SET @firstname = SUBSTRING_INDEX(@firstname, '\n', 1);  
				
				SET @lastname = SUBSTRING_INDEX(SUBSTRING_INDEX(@current_competent_persons, 'Επώνυμο: ', -1), '\n', 1);
				
				SET @emailcp = SUBSTRING_INDEX(SUBSTRING_INDEX(@current_competent_persons, 'Email: ', -1), '\n', 1);
				
				SET @telnumber = SUBSTRING_INDEX(SUBSTRING_INDEX(@current_competent_persons, 'Τηλέφωνο: ', -1), '\n', 1);

				SET @addresscp = NULL;
				IF LOCATE('Διεύθυνση: ', @current_competent_persons) > 0 THEN
					SET @addresscp = SUBSTRING_INDEX(SUBSTRING_INDEX(@current_competent_persons, 'Διεύθυνση: ', -1), '\n', 1);
				END IF;
				
                -- Έλεγχος αν υπάρχει ήδη χρήστης με το email
				IF EXISTS (SELECT 1 FROM user WHERE email = @emailcp) THEN
					-- Λήψη του id_user με το email
					SET @user_id = (SELECT id_user FROM user WHERE email = @emailcp LIMIT 1);
				ELSE
					-- Εισαγωγή νέου χρήστη
					INSERT INTO user(first_name, last_name, password, email, telephone, address)
					VALUES (@firstname, @lastname, @emailcp, @emailcp, @telnumber, @addresscp);
					
					-- Λήψη του user_id του νέου χρήστη
					SET @user_id = LAST_INSERT_ID();
				END IF;

				-- Σύνδεση του χρήστη με το στοιχείο
				IF NOT EXISTS (SELECT 1 FROM user_stoixeio WHERE user_id = @user_id AND stoixeio_id = idStoixeio) THEN
					INSERT INTO user_stoixeio (user_id, stoixeio_id)
					VALUES (@user_id, idStoixeio);
				END IF;
			END IF;
		END IF;

END$$

DELIMITER ;

DELIMITER $$
USE `apk`$$
CREATE PROCEDURE `InsertUser`(
    IN firstName VARCHAR(45),
    IN lastName VARCHAR(45),
    IN hashedPassword VARCHAR(255),
    IN email VARCHAR(40),
    IN address VARCHAR(100),
    IN telephone VARCHAR(20)
)
BEGIN
  
  -- Αν το address είναι κενό, το θέτουμε σε NULL
	IF address = '' THEN
		SET address = NULL;
	END IF;

	-- Εισαγωγή του νέου χρήστη στον πίνακα `user`
	INSERT INTO user (first_name, last_name, password, email, address, telephone)
	VALUES (firstName, lastName, hashedPassword, email, address, telephone);

END$$

DELIMITER ;
